{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.register = exports.logout = exports.login = exports.loadUser = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _types = require(\"./types\");\nvar _axios = _interopRequireDefault(require(\"axios\"));\nvar _errorActions = require(\"./errorActions\");\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\nvar _chatAction = require(\"./chatAction\");\nvar register = function register(_ref) {\n  var name = _ref.name,\n    email = _ref.email,\n    password = _ref.password;\n  return function _callee(dispatch) {\n    var data;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          dispatch({\n            type: _types.REG_LOADING,\n            payload: null\n          });\n          data = JSON.stringify({\n            name: name,\n            email: email,\n            password: password\n          });\n          _context.next = 4;\n          return _regenerator.default.awrap((0, _axios.default)({\n            method: 'POST',\n            url: _types.API_URI + \"/api/users\",\n            data: data,\n            headers: {\n              'content-type': 'application/json'\n            }\n          }).then(function (res) {\n            console.log('resresres', res);\n            dispatch({\n              type: _types.CLEAR_ERRORS,\n              payload: null\n            });\n            dispatch({\n              type: _types.REGISTER_SUCCESS,\n              payload: res.data\n            });\n            _chatAction.socket.emit('getUsers');\n          }).catch(function (err) {\n            console.log('errerrerrerrerr', err);\n            dispatch({\n              type: _types.REGISTER_FAIL,\n              payload: null\n            });\n            dispatch((0, _errorActions.returnErrors)(err.response.data, err.response.status, 'REGISTER_FAIL'));\n          }));\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.register = register;\nvar login = function login(_ref2) {\n  var email = _ref2.email,\n    password = _ref2.password;\n  return function _callee2(dispatch, getState) {\n    var data;\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          dispatch({\n            type: _types.LOG_LOADING,\n            payload: null\n          });\n          data = JSON.stringify({\n            email: email,\n            password: password\n          });\n          _context2.next = 4;\n          return _regenerator.default.awrap((0, _axios.default)({\n            method: 'POST',\n            url: _types.API_URI + \"/api/login\",\n            data: data,\n            headers: {\n              'Content-Type': 'application/json',\n              'Accept': \"application/json\"\n            }\n          }).then(function (res) {\n            console.log('res', res);\n          }).catch(function (err) {\n            console.log('errrr', err);\n          }));\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.login = login;\nvar loadUser = function loadUser() {\n  return function _callee3(dispatch) {\n    var token;\n    return _regenerator.default.async(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          dispatch({\n            type: _types.LOG_LOADING,\n            payload: null\n          });\n          _context3.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem('@user_token'));\n        case 3:\n          token = _context3.sent;\n          (0, _axios.default)({\n            method: 'GET',\n            url: _types.API_URI + \"/api/login/user\",\n            headers: {\n              'content-type': 'application/json',\n              'x-amazon-token': token\n            }\n          }).then(function (res) {\n            dispatch({\n              type: _types.USER_LOADED,\n              payload: res.data\n            });\n          }).catch(function (err) {\n            dispatch((0, _errorActions.returnErrors)(err.response.data, '', 'LOAD_FAIL'));\n            dispatch({\n              type: _types.AUTH_ERROR,\n              payload: null\n            });\n          });\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.loadUser = loadUser;\nvar logout = function logout() {\n  return function _callee4(dispatch) {\n    return _regenerator.default.async(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regenerator.default.awrap(_asyncStorage.default.removeItem('@user_token'));\n        case 2:\n          return _context4.abrupt(\"return\", dispatch({\n            type: _types.LOGOUT_SUCCESS,\n            payload: null\n          }));\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.logout = logout;","map":{"version":3,"names":["_types","require","_axios","_interopRequireDefault","_errorActions","_asyncStorage","_chatAction","register","_ref","name","email","password","_callee","dispatch","data","_regenerator","default","async","_callee$","_context","prev","next","type","REG_LOADING","payload","JSON","stringify","awrap","axios","method","url","API_URI","headers","then","res","console","log","CLEAR_ERRORS","REGISTER_SUCCESS","socket","emit","catch","err","REGISTER_FAIL","returnErrors","response","status","stop","Promise","exports","login","_ref2","_callee2","getState","_callee2$","_context2","LOG_LOADING","loadUser","_callee3","token","_callee3$","_context3","AsyncStorage","getItem","sent","USER_LOADED","AUTH_ERROR","logout","_callee4","_callee4$","_context4","removeItem","abrupt","LOGOUT_SUCCESS"],"sources":["C:/xampp/htdocs/Kush/whatsapp_facebook_messenger/chat/src/store/actions/authActions.ts"],"sourcesContent":["import {\r\n  AllDispatchProp,\r\n  API_URI,\r\n  AUTH_ERROR,\r\n  CLEAR_ERRORS,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGOUT_SUCCESS,\r\n  LOG_LOADING,\r\n  REGISTER_FAIL,\r\n  REGISTER_SUCCESS,\r\n  REG_LOADING,\r\n  USER_LOADED,\r\n} from './types';\r\nimport axios from 'axios';\r\nimport {returnErrors} from './errorActions';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport {socket} from './chatAction';\r\n\r\n//* Register Action*//\r\nexport const register = ({\r\n  name,\r\n  email,\r\n  password,\r\n}: {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n}) => async (dispatch: AllDispatchProp) => {\r\n  dispatch({type: REG_LOADING, payload: null});\r\n\r\n  const data = JSON.stringify({name, email, password});\r\n\r\n  await axios({\r\n    method: 'POST',\r\n    url: `${API_URI}/api/users`,\r\n    data,\r\n    headers: {\r\n      'content-type': 'application/json',\r\n    },\r\n  })\r\n    .then((res) => {\r\n      console.log('resresres', res);\r\n      dispatch({type: CLEAR_ERRORS, payload: null});\r\n      dispatch({type: REGISTER_SUCCESS, payload: res.data});\r\n      socket.emit('getUsers');\r\n    })\r\n    .catch((err) => {\r\n      console.log('errerrerrerrerr', err);\r\n      dispatch({type: REGISTER_FAIL, payload: null});\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'),\r\n      );\r\n    });\r\n};\r\n\r\n//* login action *//\r\nexport const login = ({\r\n  email,\r\n  password,\r\n}: {\r\n  email: string;\r\n  password: string;\r\n}) => async (dispatch: AllDispatchProp, getState: any) => {\r\n  dispatch({type: LOG_LOADING, payload: null});\r\n  const data = JSON.stringify({email, password});\r\n    await axios({\r\n      method: 'POST',\r\n      url: `${API_URI}/api/login`,\r\n      data,\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': \"application/json\",\r\n      },\r\n    })\r\n    .then((res) => {\r\n      console.log('res', res);\r\n      // const {user} = res.data;\r\n      // if (user) {\r\n      //   dispatch({type: CLEAR_ERRORS, payload: null});\r\n      //   dispatch({type: LOGIN_SUCCESS, payload: res.data});\r\n      // }\r\n    })\r\n    .catch((err) => {\r\n      console.log('errrr', err);\r\n      // dispatch({type: LOGIN_FAIL, payload: null});\r\n      // dispatch(\r\n      //   returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'),\r\n      // );\r\n    });\r\n};\r\n\r\nexport const loadUser = () => async (dispatch: AllDispatchProp) => {\r\n  dispatch({type: LOG_LOADING, payload: null});\r\n\r\n  const token = await AsyncStorage.getItem('@user_token');\r\n\r\n  axios({\r\n    method: 'GET',\r\n    url: `${API_URI}/api/login/user`,\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'x-amazon-token': token,\r\n    },\r\n  })\r\n    .then((res) => {\r\n      dispatch({type: USER_LOADED, payload: res.data});\r\n    })\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, '', 'LOAD_FAIL'));\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n        payload: null,\r\n      });\r\n    });\r\n};\r\n\r\n//* Handle logout *//\r\nexport const logout = () => async (dispatch: AllDispatchProp) => {\r\n  await AsyncStorage.removeItem('@user_token');\r\n  return dispatch({\r\n    type: LOGOUT_SUCCESS,\r\n    payload: null,\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}