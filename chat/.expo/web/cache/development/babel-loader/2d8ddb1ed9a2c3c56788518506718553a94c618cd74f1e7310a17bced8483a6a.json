{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uniqueUserChat = exports.socket = exports.sendMsg = exports.onUniqueChat = exports.handleDispatchMsg = exports.getDispatchMsg = exports.clearActiveMsgs = exports.LoadRoomMsgs = exports.LoadMessages = exports.ChatUserList = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _socket = _interopRequireDefault(require(\"socket.io-client\"));\nvar _types = require(\"./types\");\nvar _Utils = require(\"../../Utils\");\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-async-storage/async-storage\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar socket = (0, _socket.default)(\"\" + _types.API_URI, {\n  forceNew: true\n});\nexports.socket = socket;\nsocket.on('connection', function () {\n  return console.log('Connection');\n});\nvar LoadMessages = function LoadMessages() {\n  return function _callee(dispatch, getState) {\n    var myEmail;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          myEmail = getState().auth.user.email;\n          socket.emit('sentMsgs', {\n            myEmail: myEmail\n          }, function (data) {\n            var myMsgs = data.map(function (data) {\n              return _objectSpread(_objectSpread({}, data), {}, {\n                sender: myEmail == data.senderEmail\n              });\n            });\n            dispatch({\n              type: _types.LOAD_MESSAGES,\n              payload: myMsgs\n            });\n          });\n          socket.emit('recievedMsgs', {\n            myEmail: myEmail\n          }, function (data) {\n            var myMsgs = data.map(function (data) {\n              return _objectSpread(_objectSpread({}, data), {}, {\n                sender: myEmail == data.senderEmail\n              });\n            });\n            dispatch({\n              type: _types.LOAD_MESSAGES,\n              payload: myMsgs\n            });\n          });\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.LoadMessages = LoadMessages;\nvar ChatUserList = function ChatUserList() {\n  return function _callee2(dispatch, getState) {\n    var user, uniqueChat, uniqueRoomChat;\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          user = getState().auth.user;\n          _context2.t0 = JSON;\n          _context2.next = 4;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem('@unique_Chat'));\n        case 4:\n          _context2.t1 = _context2.sent;\n          uniqueChat = _context2.t0.parse.call(_context2.t0, _context2.t1);\n          _context2.t2 = JSON;\n          _context2.next = 9;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem('@unique_RoomChat'));\n        case 9:\n          _context2.t3 = _context2.sent;\n          uniqueRoomChat = _context2.t2.parse.call(_context2.t2, _context2.t3);\n          if (!uniqueChat) {\n            _asyncStorage.default.setItem('@unique_Chat', JSON.stringify([]));\n          }\n          if (!uniqueRoomChat) {\n            _asyncStorage.default.setItem('@unique_RoomChat', JSON.stringify([]));\n          }\n          dispatch({\n            type: _types.ACTIVE_USER,\n            payload: user.email\n          });\n          socket.emit('getUsers');\n          socket.on('getAllUsers', function (users) {\n            var allUsers = users.filter(function (_ref) {\n              var email = _ref.email;\n              return email !== user.email;\n            }).map(function (_ref2) {\n              var email = _ref2.email,\n                name = _ref2.name,\n                _id = _ref2._id;\n              return {\n                email: email,\n                name: name,\n                _id: _id,\n                time: '1:00',\n                msg: 'last msg'\n              };\n            });\n            dispatch({\n              type: _types.ALL_USERS,\n              payload: allUsers\n            });\n          });\n          dispatch(LoadMessages());\n        case 17:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.ChatUserList = ChatUserList;\nvar uniqueUserChat = function uniqueUserChat(_ref3) {\n  var _id = _ref3._id,\n    email = _ref3.email,\n    name = _ref3.name;\n  return function _callee3(dispatch, getState) {\n    var senderEmail, uniqueChat, uniQueChatData, User, _User$, recieverEmail, recieverID, recieverName;\n    return _regenerator.default.async(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          senderEmail = getState().auth.user.email;\n          _context3.t0 = JSON;\n          _context3.next = 4;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem('@unique_Chat'));\n        case 4:\n          _context3.t1 = _context3.sent;\n          uniqueChat = _context3.t0.parse.call(_context3.t0, _context3.t1);\n          uniQueChatData = {\n            senderEmail: senderEmail,\n            recieverEmail: email,\n            recieverID: _id,\n            recieverName: name\n          };\n          if (uniqueChat.length > 0) {\n            User = uniqueChat.filter(function (_ref4) {\n              var recieverEmail = _ref4.recieverEmail;\n              return recieverEmail === email;\n            });\n            if (User.length > 0) {\n              _User$ = User[0], recieverEmail = _User$.recieverEmail, recieverID = _User$.recieverID, recieverName = _User$.recieverName;\n              dispatch(onUniqueChat({\n                senderEmail: senderEmail,\n                recieverEmail: recieverEmail,\n                recieverID: recieverID,\n                recieverName: recieverName\n              }));\n            } else {\n              dispatch(onUniqueChat(_objectSpread(_objectSpread({}, uniQueChatData), {}, {\n                senderEmail: senderEmail\n              })));\n              uniqueChat.push(uniQueChatData);\n              _asyncStorage.default.setItem('@unique_Chat', JSON.stringify(uniqueChat));\n            }\n          } else {\n            uniqueChat.push(uniQueChatData);\n            _asyncStorage.default.setItem('@unique_Chat', JSON.stringify(uniqueChat));\n          }\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.uniqueUserChat = uniqueUserChat;\nvar onUniqueChat = function onUniqueChat(_ref5) {\n  var senderEmail = _ref5.senderEmail,\n    recieverEmail = _ref5.recieverEmail,\n    recieverID = _ref5.recieverID;\n  return function _callee4(dispatch) {\n    var uniqueRoomChat;\n    return _regenerator.default.async(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.t0 = JSON;\n          _context4.next = 3;\n          return _regenerator.default.awrap(_asyncStorage.default.getItem('@unique_RoomChat'));\n        case 3:\n          _context4.t1 = _context4.sent;\n          uniqueRoomChat = _context4.t0.parse.call(_context4.t0, _context4.t1);\n          socket.emit('startUniqueChat', {\n            recieverEmail: recieverEmail,\n            senderEmail: senderEmail,\n            recieverID: recieverID\n          }, function (error) {});\n          socket.on('openChat', function (_ref6) {\n            var recieverEmail = _ref6.recieverEmail,\n              senderEmail = _ref6.senderEmail,\n              roomID = _ref6.roomID;\n            var mobileRoom = {\n              recieverEmail: recieverEmail,\n              senderEmail: senderEmail,\n              roomID: roomID\n            };\n            var MobileRoomExits = uniqueRoomChat.filter(function (_ref7) {\n              var mRoomID = _ref7.roomID;\n              return mRoomID === roomID;\n            });\n            if (MobileRoomExits.length > 0) {\n              socket.emit('joinTwoUsers', {\n                roomID: roomID\n              }, function (_ref8) {\n                var roomID = _ref8.roomID;\n                dispatch({\n                  type: _types.ACTIVE_ROOM,\n                  payload: roomID\n                });\n              });\n            } else {\n              uniqueRoomChat.push(mobileRoom);\n              _asyncStorage.default.setItem('@unique_RoomChat', JSON.stringify(uniqueRoomChat));\n              socket.emit('joinTwoUsers', {\n                roomID: roomID\n              }, function (_ref9) {\n                var roomID = _ref9.roomID;\n                dispatch({\n                  type: _types.ACTIVE_ROOM,\n                  payload: roomID\n                });\n              });\n            }\n          });\n        case 7:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.onUniqueChat = onUniqueChat;\nvar sendMsg = function sendMsg(_ref10) {\n  var txtMsg = _ref10.txtMsg,\n    reciever = _ref10.reciever;\n  return function _callee5(dispatch, getState) {\n    var date, _getState$chat, activeUser, activeRoom, composeMsg;\n    return _regenerator.default.async(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          date = new Date();\n          _getState$chat = getState().chat, activeUser = _getState$chat.activeUser, activeRoom = _getState$chat.activeRoom;\n          composeMsg = {\n            _id: (0, _Utils.uuidv4)(),\n            roomID: activeRoom,\n            txtMsg: txtMsg,\n            recieverEmail: reciever,\n            senderEmail: activeUser,\n            time: date.getHours() + \":\" + date.getMinutes(),\n            sender: true\n          };\n          dispatch({\n            type: _types.ADD_MESSAGE,\n            payload: composeMsg\n          });\n          socket.emit('sendTouser', {\n            roomID: activeRoom,\n            senderEmail: activeUser,\n            recieverEmail: reciever,\n            composeMsg: composeMsg\n          });\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.sendMsg = sendMsg;\nvar handleDispatchMsg = function handleDispatchMsg() {\n  return function _callee6(dispatch) {\n    return _regenerator.default.async(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          socket.on('dispatchMsg', function (data) {\n            dispatch(getDispatchMsg(_objectSpread({}, data)));\n          });\n        case 1:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.handleDispatchMsg = handleDispatchMsg;\nvar getDispatchMsg = function getDispatchMsg(_ref11) {\n  var _id = _ref11._id,\n    roomID = _ref11.roomID,\n    senderEmail = _ref11.senderEmail,\n    recieverEmail = _ref11.recieverEmail,\n    composedMsg = _ref11.composeMsg;\n  return function _callee7(dispatch, getState) {\n    var activeUser, msg;\n    return _regenerator.default.async(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          activeUser = getState().chat.activeUser;\n          msg = _objectSpread(_objectSpread({\n            _id: _id\n          }, composedMsg), {}, {\n            sender: activeUser == senderEmail,\n            senderEmail: senderEmail,\n            recieverEmail: recieverEmail,\n            roomID: roomID\n          });\n          dispatch({\n            type: _types.INJECT_MESSAGE,\n            payload: msg\n          });\n        case 3:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.getDispatchMsg = getDispatchMsg;\nvar LoadRoomMsgs = function LoadRoomMsgs() {\n  return function _callee8(dispatch, getState) {\n    var _getState$chat2, activeRoom, messages, activeUser;\n    return _regenerator.default.async(function _callee8$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _getState$chat2 = getState().chat, activeRoom = _getState$chat2.activeRoom, messages = _getState$chat2.messages, activeUser = _getState$chat2.activeUser;\n          new Promise(function (res) {\n            res();\n          }).then(function () {\n            var activeRoomMsgs = messages.filter(function (_ref12) {\n              var roomID = _ref12.roomID;\n              return roomID == activeRoom;\n            }).map(function (data) {\n              return _objectSpread(_objectSpread({}, data), {}, {\n                sender: activeUser == data.senderEmail\n              });\n            });\n            dispatch({\n              type: _types.ACTIVE_ROOM_MSGS,\n              payload: activeRoomMsgs\n            });\n          });\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.LoadRoomMsgs = LoadRoomMsgs;\nvar clearActiveMsgs = function clearActiveMsgs() {\n  return function _callee9(dispatch) {\n    return _regenerator.default.async(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          dispatch({\n            type: _types.CLEAR_ACTIVE_MSGS\n          });\n        case 1:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, null, null, null, Promise);\n  };\n};\nexports.clearActiveMsgs = clearActiveMsgs;","map":{"version":3,"names":["_socket","_interopRequireDefault","require","_types","_Utils","_asyncStorage","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","socket","IO","API_URI","forceNew","exports","on","console","log","LoadMessages","_callee","dispatch","getState","myEmail","_regenerator","async","_callee$","_context","prev","next","auth","user","email","emit","data","myMsgs","map","sender","senderEmail","type","LOAD_MESSAGES","payload","stop","Promise","ChatUserList","_callee2","uniqueChat","uniqueRoomChat","_callee2$","_context2","t0","JSON","awrap","AsyncStorage","getItem","t1","sent","parse","call","t2","t3","setItem","stringify","ACTIVE_USER","users","allUsers","_ref","_ref2","name","_id","time","msg","ALL_USERS","uniqueUserChat","_ref3","_callee3","uniQueChatData","User","_User$","recieverEmail","recieverID","recieverName","_callee3$","_context3","_ref4","onUniqueChat","_ref5","_callee4","_callee4$","_context4","error","_ref6","roomID","mobileRoom","MobileRoomExits","_ref7","mRoomID","_ref8","ACTIVE_ROOM","_ref9","sendMsg","_ref10","txtMsg","reciever","_callee5","date","_getState$chat","activeUser","activeRoom","composeMsg","_callee5$","_context5","Date","chat","uuidv4","getHours","getMinutes","ADD_MESSAGE","handleDispatchMsg","_callee6","_callee6$","_context6","getDispatchMsg","_ref11","composedMsg","_callee7","_callee7$","_context7","INJECT_MESSAGE","LoadRoomMsgs","_callee8","_getState$chat2","messages","_callee8$","_context8","res","then","activeRoomMsgs","_ref12","ACTIVE_ROOM_MSGS","clearActiveMsgs","_callee9","_callee9$","_context9","CLEAR_ACTIVE_MSGS"],"sources":["C:/xampp/htdocs/Kush/whatsapp_facebook_messenger/chat/src/store/actions/chatAction.js"],"sourcesContent":["import IO from 'socket.io-client';\r\nimport {\r\n  ACTIVE_ROOM,\r\n  ACTIVE_ROOM_MSGS,\r\n  ACTIVE_USER,\r\n  ADD_MESSAGE,\r\n  ALL_USERS,\r\n  API_URI,\r\n  CLEAR_ACTIVE_MSGS,\r\n  INJECT_MESSAGE,\r\n  LOAD_MESSAGES,\r\n} from './types';\r\nimport {uuidv4} from '../../Utils';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\n//** Socket Config */\r\nexport const socket = IO(`${API_URI}`, {\r\n  forceNew: true,\r\n});\r\n\r\nsocket.on('connection', () => console.log('Connection'));\r\n\r\nexport const LoadMessages = () => async (dispatch, getState) => {\r\n  const {\r\n    user: {email: myEmail},\r\n  } = getState().auth;\r\n\r\n  socket.emit('sentMsgs', {myEmail}, (data) => {\r\n    const myMsgs = data.map((data) => {\r\n      return {\r\n        ...data,\r\n        sender: myEmail == data.senderEmail,\r\n      };\r\n    });\r\n    dispatch({type: LOAD_MESSAGES, payload: myMsgs});\r\n  });\r\n\r\n  socket.emit('recievedMsgs', {myEmail}, (data) => {\r\n    const myMsgs = data.map((data) => {\r\n      return {\r\n        ...data,\r\n        sender: myEmail == data.senderEmail,\r\n      };\r\n    });\r\n\r\n    dispatch({type: LOAD_MESSAGES, payload: myMsgs});\r\n  });\r\n};\r\n\r\nexport const ChatUserList = () => async (dispatch, getState) => {\r\n  const {user} = getState().auth;\r\n  const uniqueChat = JSON.parse(await AsyncStorage.getItem('@unique_Chat'));\r\n  const uniqueRoomChat = JSON.parse(\r\n    await AsyncStorage.getItem('@unique_RoomChat'),\r\n  );\r\n\r\n  if (!uniqueChat) {\r\n    AsyncStorage.setItem('@unique_Chat', JSON.stringify([]));\r\n  }\r\n\r\n  if (!uniqueRoomChat) {\r\n    AsyncStorage.setItem('@unique_RoomChat', JSON.stringify([]));\r\n  }\r\n\r\n  //* Set current user *//\r\n  dispatch({type: ACTIVE_USER, payload: user.email});\r\n\r\n  //* Emit to get users *//\r\n  socket.emit('getUsers');\r\n\r\n  // //** Get all users and dispatch *//\r\n  socket.on('getAllUsers', (users) => {\r\n    const allUsers = users\r\n      .filter(({email}) => email !== user.email)\r\n      .map(({email, name, _id}) => ({\r\n        email,\r\n        name,\r\n        _id,\r\n        time: '1:00',\r\n        msg: 'last msg',\r\n      }));\r\n\r\n    dispatch({\r\n      type: ALL_USERS,\r\n      payload: allUsers,\r\n    });\r\n  });\r\n\r\n  dispatch(LoadMessages());\r\n};\r\n\r\nexport const uniqueUserChat = ({_id, email, name}) => async (\r\n  dispatch,\r\n  getState,\r\n) => {\r\n  const {\r\n    user: {email: senderEmail},\r\n  } = getState().auth;\r\n  // check if there is an id in phone if not emit to gen id\r\n  const uniqueChat = JSON.parse(await AsyncStorage.getItem('@unique_Chat'));\r\n\r\n  const uniQueChatData = {\r\n    senderEmail,\r\n    recieverEmail: email,\r\n    recieverID: _id,\r\n    recieverName: name,\r\n  };\r\n\r\n  if (uniqueChat.length > 0) {\r\n    const User = uniqueChat.filter(\r\n      ({recieverEmail}) => recieverEmail === email,\r\n    );\r\n\r\n    if (User.length > 0) {\r\n      const {recieverEmail, recieverID, recieverName} = User[0];\r\n      dispatch(\r\n        onUniqueChat({senderEmail, recieverEmail, recieverID, recieverName}),\r\n      );\r\n    } else {\r\n      dispatch(onUniqueChat({...uniQueChatData, senderEmail}));\r\n      uniqueChat.push(uniQueChatData);\r\n      AsyncStorage.setItem('@unique_Chat', JSON.stringify(uniqueChat));\r\n    }\r\n  } else {\r\n    uniqueChat.push(uniQueChatData);\r\n    AsyncStorage.setItem('@unique_Chat', JSON.stringify(uniqueChat));\r\n  }\r\n};\r\n\r\nexport const onUniqueChat = ({\r\n  senderEmail,\r\n  recieverEmail,\r\n  recieverID,\r\n}) => async (dispatch) => {\r\n  const uniqueRoomChat = JSON.parse(\r\n    await AsyncStorage.getItem('@unique_RoomChat'),\r\n  );\r\n\r\n  socket.emit(\r\n    'startUniqueChat',\r\n    {recieverEmail, senderEmail, recieverID},\r\n    (error) => {},\r\n  );\r\n\r\n  socket.on('openChat', ({recieverEmail, senderEmail, roomID}) => {\r\n    const mobileRoom = {\r\n      recieverEmail,\r\n      senderEmail,\r\n      roomID,\r\n    };\r\n\r\n    const MobileRoomExits = uniqueRoomChat.filter(\r\n      ({roomID: mRoomID}) => mRoomID === roomID,\r\n    );\r\n\r\n    if (MobileRoomExits.length > 0) {\r\n      socket.emit('joinTwoUsers', {roomID}, ({roomID}) => {\r\n        dispatch({type: ACTIVE_ROOM, payload: roomID});\r\n      });\r\n    } else {\r\n      uniqueRoomChat.push(mobileRoom);\r\n      AsyncStorage.setItem('@unique_RoomChat', JSON.stringify(uniqueRoomChat));\r\n\r\n      socket.emit('joinTwoUsers', {roomID}, ({roomID}) => {\r\n        dispatch({type: ACTIVE_ROOM, payload: roomID});\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const sendMsg = ({txtMsg, reciever}) => async (dispatch, getState) => {\r\n  const date = new Date();\r\n\r\n  const {activeUser, activeRoom} = getState().chat;\r\n\r\n  const composeMsg = {\r\n    _id: uuidv4(),\r\n    roomID: activeRoom,\r\n    txtMsg,\r\n    recieverEmail: reciever,\r\n    senderEmail: activeUser,\r\n    time: `${date.getHours()}:${date.getMinutes()}`,\r\n    sender: true,\r\n  };\r\n\r\n  dispatch({type: ADD_MESSAGE, payload: composeMsg});\r\n  socket.emit('sendTouser', {\r\n    roomID: activeRoom,\r\n    senderEmail: activeUser,\r\n    recieverEmail: reciever,\r\n    composeMsg,\r\n  });\r\n};\r\n\r\nexport const handleDispatchMsg = () => async (dispatch) => {\r\n  socket.on('dispatchMsg', (data) => {\r\n    dispatch(getDispatchMsg({...data}));\r\n  });\r\n};\r\n\r\nexport const getDispatchMsg = ({\r\n  _id,\r\n  roomID,\r\n  senderEmail,\r\n  recieverEmail,\r\n  composeMsg: composedMsg,\r\n}) => async (dispatch, getState) => {\r\n  const {activeUser} = getState().chat;\r\n\r\n  const msg = {\r\n    _id,\r\n    ...composedMsg,\r\n    sender: activeUser == senderEmail,\r\n    senderEmail,\r\n    recieverEmail,\r\n    roomID,\r\n  };\r\n\r\n  dispatch({type: INJECT_MESSAGE, payload: msg});\r\n};\r\n\r\nexport const LoadRoomMsgs = () => async (dispatch, getState) => {\r\n  const {activeRoom, messages, activeUser} = getState().chat;\r\n\r\n  new Promise((res) => {\r\n    res();\r\n  }).then(() => {\r\n    const activeRoomMsgs = messages\r\n      .filter(({roomID}) => roomID == activeRoom)\r\n      .map((data) => {\r\n        return {\r\n          ...data,\r\n          sender: activeUser == data.senderEmail,\r\n        };\r\n      });\r\n    dispatch({type: ACTIVE_ROOM_MSGS, payload: activeRoomMsgs});\r\n  });\r\n};\r\n\r\nexport const clearActiveMsgs = () => async (dispatch) => {\r\n  dispatch({type: CLEAR_ACTIVE_MSGS});\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}