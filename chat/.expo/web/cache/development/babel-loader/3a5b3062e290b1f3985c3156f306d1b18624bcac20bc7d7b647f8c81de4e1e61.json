{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _invariant = _interopRequireDefault(require(\"./utils/invariant\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar StateUtils = {\n  get: function get(state, key) {\n    return state.routes.find(function (route) {\n      return route.key === key;\n    }) || null;\n  },\n  indexOf: function indexOf(state, key) {\n    return state.routes.findIndex(function (route) {\n      return route.key === key;\n    });\n  },\n  has: function has(state, key) {\n    return !!state.routes.some(function (route) {\n      return route.key === key;\n    });\n  },\n  push: function push(state, route) {\n    (0, _invariant.default)(StateUtils.indexOf(state, route.key) === -1, 'should not push route with duplicated key %s', route.key);\n    var routes = state.routes.slice();\n    routes.push(route);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: routes.length - 1,\n      routes: routes\n    });\n  },\n  pop: function pop(state) {\n    if (state.index <= 0) {\n      return state;\n    }\n    var routes = state.routes.slice(0, -1);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: routes.length - 1,\n      routes: routes\n    });\n  },\n  jumpToIndex: function jumpToIndex(state, index) {\n    if (index === state.index) {\n      return state;\n    }\n    (0, _invariant.default)(!!state.routes[index], 'invalid index %s to jump to', index);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: index\n    });\n  },\n  jumpTo: function jumpTo(state, key) {\n    var index = StateUtils.indexOf(state, key);\n    (0, _invariant.default)(index !== -1, 'attempt to jump to unknown key \"%s\"', key);\n    return StateUtils.jumpToIndex(state, index);\n  },\n  back: function back(state) {\n    var index = state.index - 1;\n    var route = state.routes[index];\n    return route ? StateUtils.jumpToIndex(state, index) : state;\n  },\n  forward: function forward(state) {\n    var index = state.index + 1;\n    var route = state.routes[index];\n    return route ? StateUtils.jumpToIndex(state, index) : state;\n  },\n  replaceAndPrune: function replaceAndPrune(state, key, route) {\n    var index = StateUtils.indexOf(state, key);\n    var replaced = StateUtils.replaceAtIndex(state, index, route);\n    return _objectSpread(_objectSpread({}, replaced), {}, {\n      routes: replaced.routes.slice(0, index + 1)\n    });\n  },\n  replaceAt: function replaceAt(state, key, route) {\n    var preserveIndex = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var index = StateUtils.indexOf(state, key);\n    var nextIndex = preserveIndex ? state.index : index;\n    var nextState = StateUtils.replaceAtIndex(state, index, route);\n    nextState.index = nextIndex;\n    return nextState;\n  },\n  replaceAtIndex: function replaceAtIndex(state, index, route) {\n    (0, _invariant.default)(!!state.routes[index], 'invalid index %s for replacing route %s', index, route.key);\n    if (state.routes[index] === route && index === state.index) {\n      return state;\n    }\n    var routes = state.routes.slice();\n    routes[index] = route;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: index,\n      routes: routes\n    });\n  },\n  reset: function reset(state, routes, index) {\n    (0, _invariant.default)(routes.length && Array.isArray(routes), 'invalid routes to replace');\n    var nextIndex = index === undefined ? routes.length - 1 : index;\n    if (state.routes.length === routes.length && state.index === nextIndex) {\n      var compare = function compare(route, ii) {\n        return routes[ii] === route;\n      };\n      if (state.routes.every(compare)) {\n        return state;\n      }\n    }\n    (0, _invariant.default)(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);\n    return _objectSpread(_objectSpread({}, state), {}, {\n      index: nextIndex,\n      routes: routes\n    });\n  }\n};\nvar _default = StateUtils;\nexports.default = _default;","map":{"version":3,"names":["_invariant","_interopRequireDefault","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","StateUtils","get","state","routes","find","route","indexOf","findIndex","has","some","invariant","slice","index","pop","jumpToIndex","jumpTo","back","forward","replaceAndPrune","replaced","replaceAtIndex","replaceAt","preserveIndex","undefined","nextIndex","nextState","reset","Array","isArray","compare","ii","every","_default","exports"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\@react-navigation\\core\\lib\\module\\StateUtils.js"],"sourcesContent":["import invariant from './utils/invariant';\n\n/**\n * Utilities to perform atomic operation with navigate state and routes.\n *\n * ```javascript\n * const state1 = {key: 'screen 1'};\n * const state2 = NavigationStateUtils.push(state1, {key: 'screen 2'});\n * ```\n */\nconst StateUtils = {\n  /**\n   * Gets a route by key. If the route isn't found, returns `null`.\n   */\n  get(state, key) {\n    return state.routes.find((route) => route.key === key) || null;\n  },\n\n  /**\n   * Returns the first index at which a given route's key can be found in the\n   * routes of the navigation state, or -1 if it is not present.\n   */\n  indexOf(state, key) {\n    return state.routes.findIndex((route) => route.key === key);\n  },\n\n  /**\n   * Returns `true` at which a given route's key can be found in the\n   * routes of the navigation state.\n   */\n  has(state, key) {\n    return !!state.routes.some((route) => route.key === key);\n  },\n\n  /**\n   * Pushes a new route into the navigation state.\n   * Note that this moves the index to the position to where the last route in the\n   * stack is at.\n   */\n  push(state, route) {\n    invariant(\n      StateUtils.indexOf(state, route.key) === -1,\n      'should not push route with duplicated key %s',\n      route.key\n    );\n\n    const routes = state.routes.slice();\n    routes.push(route);\n\n    return {\n      ...state,\n      index: routes.length - 1,\n      routes,\n    };\n  },\n\n  /**\n   * Pops out a route from the navigation state.\n   * Note that this moves the index to the position to where the last route in the\n   * stack is at.\n   */\n  pop(state) {\n    if (state.index <= 0) {\n      // [Note]: Over-popping does not throw error. Instead, it will be no-op.\n      return state;\n    }\n    const routes = state.routes.slice(0, -1);\n    return {\n      ...state,\n      index: routes.length - 1,\n      routes,\n    };\n  },\n\n  /**\n   * Sets the focused route of the navigation state by index.\n   */\n  jumpToIndex(state, index) {\n    if (index === state.index) {\n      return state;\n    }\n\n    invariant(!!state.routes[index], 'invalid index %s to jump to', index);\n\n    return {\n      ...state,\n      index,\n    };\n  },\n\n  /**\n   * Sets the focused route of the navigation state by key.\n   */\n  jumpTo(state, key) {\n    const index = StateUtils.indexOf(state, key);\n    invariant(index !== -1, 'attempt to jump to unknown key \"%s\"', key);\n    return StateUtils.jumpToIndex(state, index);\n  },\n\n  /**\n   * Sets the focused route to the previous route.\n   */\n  back(state) {\n    const index = state.index - 1;\n    const route = state.routes[index];\n    return route ? StateUtils.jumpToIndex(state, index) : state;\n  },\n\n  /**\n   * Sets the focused route to the next route.\n   */\n  forward(state) {\n    const index = state.index + 1;\n    const route = state.routes[index];\n    return route ? StateUtils.jumpToIndex(state, index) : state;\n  },\n\n  /**\n   * Replace a route by a key.\n   * Note that this moves the index to the position to where the new route in the\n   * stack is at and updates the routes array accordingly.\n   */\n  replaceAndPrune(state, key, route) {\n    const index = StateUtils.indexOf(state, key);\n    const replaced = StateUtils.replaceAtIndex(state, index, route);\n\n    return {\n      ...replaced,\n      routes: replaced.routes.slice(0, index + 1),\n    };\n  },\n\n  /**\n   * Replace a route by a key.\n   * Note that this moves the index to the position to where the new route in the\n   * stack is at. Does not prune the routes.\n   * If preserveIndex is true then replacing the route does not cause the index\n   * to change to the index of that route.\n   */\n  replaceAt(state, key, route, preserveIndex = false) {\n    const index = StateUtils.indexOf(state, key);\n    const nextIndex = preserveIndex ? state.index : index;\n    let nextState = StateUtils.replaceAtIndex(state, index, route);\n    nextState.index = nextIndex;\n    return nextState;\n  },\n\n  /**\n   * Replace a route by a index.\n   * Note that this moves the index to the position to where the new route in the\n   * stack is at.\n   */\n  replaceAtIndex(state, index, route) {\n    invariant(\n      !!state.routes[index],\n      'invalid index %s for replacing route %s',\n      index,\n      route.key\n    );\n\n    if (state.routes[index] === route && index === state.index) {\n      return state;\n    }\n\n    const routes = state.routes.slice();\n    routes[index] = route;\n\n    return {\n      ...state,\n      index,\n      routes,\n    };\n  },\n\n  /**\n   * Resets all routes.\n   * Note that this moves the index to the position to where the last route in the\n   * stack is at if the param `index` isn't provided.\n   */\n  reset(state, routes, index) {\n    invariant(\n      routes.length && Array.isArray(routes),\n      'invalid routes to replace'\n    );\n\n    const nextIndex = index === undefined ? routes.length - 1 : index;\n\n    if (state.routes.length === routes.length && state.index === nextIndex) {\n      const compare = (route, ii) => routes[ii] === route;\n      if (state.routes.every(compare)) {\n        return state;\n      }\n    }\n\n    invariant(!!routes[nextIndex], 'invalid index %s to reset', nextIndex);\n\n    return {\n      ...state,\n      index: nextIndex,\n      routes,\n    };\n  },\n};\n\nexport default StateUtils;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}