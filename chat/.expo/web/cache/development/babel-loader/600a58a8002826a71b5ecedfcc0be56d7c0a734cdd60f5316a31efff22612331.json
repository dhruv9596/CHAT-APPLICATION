{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _invariant = _interopRequireDefault(require(\"../utils/invariant\"));\nvar _getScreenForRouteName = _interopRequireDefault(require(\"./getScreenForRouteName\"));\nvar _validateScreenOptions = _interopRequireDefault(require(\"./validateScreenOptions\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction applyConfig(configurer, navigationOptions, configProps) {\n  if (typeof configurer === 'function') {\n    return _objectSpread(_objectSpread({}, navigationOptions), configurer(_objectSpread(_objectSpread({}, configProps), {}, {\n      navigationOptions: navigationOptions\n    })));\n  }\n  if (typeof configurer === 'object') {\n    return _objectSpread(_objectSpread({}, navigationOptions), configurer);\n  }\n  return navigationOptions;\n}\nvar _default = function _default(routeConfigs, navigatorScreenConfig) {\n  return function (navigation, screenProps, theme) {\n    var state = navigation.state;\n    var route = state;\n    (0, _invariant.default)(route.routeName && typeof route.routeName === 'string', 'Cannot get config because the route does not have a routeName.');\n    var Component = (0, _getScreenForRouteName.default)(routeConfigs, route.routeName);\n    var routeConfig = routeConfigs[route.routeName];\n    var routeScreenConfig = routeConfig === Component ? null : routeConfig.navigationOptions;\n    var componentScreenConfig = Component.navigationOptions;\n    var configOptions = {\n      navigation: navigation,\n      screenProps: screenProps || {},\n      theme: theme\n    };\n    var outputConfig = applyConfig(navigatorScreenConfig, {}, configOptions);\n    outputConfig = applyConfig(componentScreenConfig, outputConfig, configOptions);\n    outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);\n    (0, _validateScreenOptions.default)(outputConfig, route);\n    return outputConfig;\n  };\n};\nexports.default = _default;","map":{"version":3,"names":["_invariant","_interopRequireDefault","require","_getScreenForRouteName","_validateScreenOptions","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","applyConfig","configurer","navigationOptions","configProps","_default","routeConfigs","navigatorScreenConfig","navigation","screenProps","theme","state","route","invariant","routeName","Component","getScreenForRouteName","routeConfig","routeScreenConfig","componentScreenConfig","configOptions","outputConfig","validateScreenOptions","exports"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\@react-navigation\\core\\lib\\module\\routers\\createConfigGetter.js"],"sourcesContent":["import invariant from '../utils/invariant';\n\nimport getScreenForRouteName from './getScreenForRouteName';\nimport validateScreenOptions from './validateScreenOptions';\n\nfunction applyConfig(configurer, navigationOptions, configProps) {\n  if (typeof configurer === 'function') {\n    return {\n      ...navigationOptions,\n      ...configurer({\n        ...configProps,\n        navigationOptions,\n      }),\n    };\n  }\n  if (typeof configurer === 'object') {\n    return {\n      ...navigationOptions,\n      ...configurer,\n    };\n  }\n  return navigationOptions;\n}\n\nexport default (routeConfigs, navigatorScreenConfig) => (\n  navigation,\n  screenProps,\n  theme\n) => {\n  const { state } = navigation;\n  const route = state;\n\n  invariant(\n    route.routeName && typeof route.routeName === 'string',\n    'Cannot get config because the route does not have a routeName.'\n  );\n\n  const Component = getScreenForRouteName(routeConfigs, route.routeName);\n\n  const routeConfig = routeConfigs[route.routeName];\n\n  const routeScreenConfig =\n    routeConfig === Component ? null : routeConfig.navigationOptions;\n  const componentScreenConfig = Component.navigationOptions;\n\n  const configOptions = { navigation, screenProps: screenProps || {}, theme };\n\n  let outputConfig = applyConfig(navigatorScreenConfig, {}, configOptions);\n  outputConfig = applyConfig(\n    componentScreenConfig,\n    outputConfig,\n    configOptions\n  );\n  outputConfig = applyConfig(routeScreenConfig, outputConfig, configOptions);\n\n  validateScreenOptions(outputConfig, route);\n\n  return outputConfig;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}