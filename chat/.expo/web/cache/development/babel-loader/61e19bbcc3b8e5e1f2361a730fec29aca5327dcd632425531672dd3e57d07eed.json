{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar INVERT_OPTIONS = {\n  inputRange: [0, 1],\n  outputRange: [1, 0]\n};\nvar SharedElementSceneData = function () {\n  function SharedElementSceneData(Component, getSharedElements, route, navigatorId, nestingDepth, debug) {\n    (0, _classCallCheck2.default)(this, SharedElementSceneData);\n    this.updateSubscribers = new Set();\n    this.ancestorNode = undefined;\n    this.nodes = {};\n    this.getSharedElements = getSharedElements;\n    this.route = route;\n    this.navigatorId = navigatorId;\n    this.nestingDepth = nestingDepth;\n    this.debug = debug;\n    this.name = Component.displayName || Component.name || (Component.constructor ? Component.constructor.name : undefined) || \"\";\n  }\n  (0, _createClass2.default)(SharedElementSceneData, [{\n    key: \"updateRoute\",\n    value: function updateRoute(route) {\n      if (route.key !== this.route.key) {\n        throw new Error(\"SharedElementNavigation: Integrity error, route key should never change\");\n      }\n      this.route = route;\n    }\n  }, {\n    key: \"setAnimimationContextValue\",\n    value: function setAnimimationContextValue(value) {\n      this.animationContextValue = value;\n    }\n  }, {\n    key: \"getAnimValue\",\n    value: function getAnimValue(closing) {\n      var animationContextValue = this.animationContextValue;\n      if (!animationContextValue) return;\n      var progress = animationContextValue.current.progress;\n      return closing ? progress.interpolate(INVERT_OPTIONS) : progress;\n    }\n  }, {\n    key: \"getAncestor\",\n    value: function getAncestor() {\n      return this.ancestorNode;\n    }\n  }, {\n    key: \"setAncestor\",\n    value: function setAncestor(ancestorNode) {\n      if (this.ancestorNode === ancestorNode) return;\n      this.ancestorNode = ancestorNode || undefined;\n      this.emitUpdateEvent(\"ancestor\", this.ancestorNode, \"\");\n    }\n  }, {\n    key: \"addNode\",\n    value: function addNode(id, node) {\n      this.nodes[id] = node;\n      this.emitUpdateEvent(\"add\", node, id);\n    }\n  }, {\n    key: \"removeNode\",\n    value: function removeNode(id, node) {\n      delete this.nodes[id];\n      this.emitUpdateEvent(\"remove\", node, id);\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode(id) {\n      return this.nodes[id];\n    }\n  }, {\n    key: \"addUpdateListener\",\n    value: function addUpdateListener(handler) {\n      var _this = this;\n      this.updateSubscribers.add(handler);\n      return function () {\n        return _this.updateSubscribers.delete(handler);\n      };\n    }\n  }, {\n    key: \"emitUpdateEvent\",\n    value: function emitUpdateEvent(eventType, node, id) {\n      this.updateSubscribers.forEach(function (handler) {\n        return handler(eventType, node, id);\n      });\n    }\n  }]);\n  return SharedElementSceneData;\n}();\nexports.default = SharedElementSceneData;","map":{"version":3,"names":["INVERT_OPTIONS","inputRange","outputRange","SharedElementSceneData","Component","getSharedElements","route","navigatorId","nestingDepth","debug","_classCallCheck2","default","updateSubscribers","Set","ancestorNode","undefined","nodes","name","displayName","constructor","_createClass2","key","value","updateRoute","Error","setAnimimationContextValue","animationContextValue","getAnimValue","closing","progress","current","interpolate","getAncestor","setAncestor","emitUpdateEvent","addNode","id","node","removeNode","getNode","addUpdateListener","handler","_this","add","delete","eventType","forEach","exports"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\react-navigation-shared-element\\src\\SharedElementSceneData.ts"],"sourcesContent":["import {\n  SharedElementNode,\n  SharedElementEventSubscription,\n  SharedElementAnimatedValue,\n  SharedElementRoute,\n  SharedElementSceneComponent,\n  SharedElementsComponentConfig,\n} from \"./types\";\n\nexport type SharedElementSceneUpdateHandlerEventType =\n  | \"ancestor\"\n  | \"add\"\n  | \"remove\";\n\nexport type SharedElementSceneUpdateHandler = (\n  eventType: SharedElementSceneUpdateHandlerEventType,\n  node: SharedElementNode | undefined,\n  id: string\n) => any;\n\nconst INVERT_OPTIONS = {\n  inputRange: [0, 1],\n  outputRange: [1, 0],\n};\n\nexport type SharedElementSceneEventType =\n  | \"willFocus\"\n  | \"didFocus\"\n  | \"willBlur\"\n  | \"didBlur\";\n\nexport default class SharedElementSceneData {\n  private updateSubscribers = new Set<SharedElementSceneUpdateHandler>();\n  private ancestorNode?: SharedElementNode = undefined;\n  private nodes: {\n    [key: string]: SharedElementNode;\n  } = {};\n  private animationContextValue: any;\n  public readonly getSharedElements: () => SharedElementsComponentConfig | void;\n  public readonly name: string;\n  public readonly navigatorId: string;\n  public readonly nestingDepth: number;\n  public readonly debug: boolean;\n  public readonly route: SharedElementRoute;\n\n  constructor(\n    Component: SharedElementSceneComponent,\n    getSharedElements: () => SharedElementsComponentConfig | void,\n    route: SharedElementRoute,\n    navigatorId: string,\n    nestingDepth: number,\n    debug: boolean\n  ) {\n    this.getSharedElements = getSharedElements;\n    this.route = route;\n    this.navigatorId = navigatorId;\n    this.nestingDepth = nestingDepth;\n    this.debug = debug;\n    this.name =\n      Component.displayName ||\n      Component.name ||\n      (Component.constructor ? Component.constructor.name : undefined) ||\n      \"\";\n  }\n\n  public updateRoute(route: SharedElementRoute) {\n    if (route.key !== this.route.key) {\n      throw new Error(\n        \"SharedElementNavigation: Integrity error, route key should never change\"\n      );\n    }\n    // @ts-ignore\n    this.route = route;\n  }\n\n  setAnimimationContextValue(value: any) {\n    this.animationContextValue = value;\n  }\n\n  getAnimValue(closing: boolean): SharedElementAnimatedValue | undefined {\n    const { animationContextValue } = this;\n    if (!animationContextValue) return;\n    const { progress } = animationContextValue.current;\n    return closing ? progress.interpolate(INVERT_OPTIONS) : progress;\n  }\n\n  getAncestor(): SharedElementNode | undefined {\n    return this.ancestorNode;\n  }\n\n  setAncestor(ancestorNode: SharedElementNode | null) {\n    // console.log('SharedElementSceneData.setAncestor');\n    if (this.ancestorNode === ancestorNode) return;\n    this.ancestorNode = ancestorNode || undefined;\n    this.emitUpdateEvent(\"ancestor\", this.ancestorNode, \"\");\n  }\n\n  addNode(id: string, node: SharedElementNode): void {\n    // console.log('SharedElementSceneData.addNode: ', id);\n    this.nodes[id] = node;\n    this.emitUpdateEvent(\"add\", node, id);\n  }\n\n  removeNode(id: string, node: SharedElementNode): void {\n    // console.log('SharedElementSceneData.removeNode: ', id);\n    delete this.nodes[id];\n    this.emitUpdateEvent(\"remove\", node, id);\n  }\n\n  getNode(id: string): SharedElementNode | undefined {\n    return this.nodes[id];\n  }\n\n  addUpdateListener(\n    handler: SharedElementSceneUpdateHandler\n  ): SharedElementEventSubscription {\n    this.updateSubscribers.add(handler);\n    return () => this.updateSubscribers.delete(handler);\n  }\n\n  private emitUpdateEvent(\n    eventType: SharedElementSceneUpdateHandlerEventType,\n    node: SharedElementNode | undefined,\n    id: string\n  ): void {\n    this.updateSubscribers.forEach((handler) => handler(eventType, node, id));\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}