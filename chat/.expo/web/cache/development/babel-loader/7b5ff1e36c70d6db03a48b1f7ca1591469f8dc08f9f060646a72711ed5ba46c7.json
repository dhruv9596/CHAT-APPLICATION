{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _Screens = require(\"../Screens\");\nvar _HeaderSegment = require(\"../Header/HeaderSegment\");\nvar _CardContainer = _interopRequireDefault(require(\"./CardContainer\"));\nvar _TransitionPresets = require(\"../../TransitionConfigs/TransitionPresets\");\nvar _HeaderStyleInterpolators = require(\"../../TransitionConfigs/HeaderStyleInterpolators\");\nvar _CardStyleInterpolators = require(\"../../TransitionConfigs/CardStyleInterpolators\");\nvar _HeaderShownContext = _interopRequireDefault(require(\"../../utils/HeaderShownContext\"));\nvar _getDistanceForDirection = _interopRequireDefault(require(\"../../utils/getDistanceForDirection\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty3.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar EPSILON = 0.01;\nvar FALLBACK_DESCRIPTOR = Object.freeze({\n  options: {}\n});\nvar getHeaderHeights = function getHeaderHeights(routes, insets, descriptors, layout, previous) {\n  return routes.reduce(function (acc, curr) {\n    var _ref = descriptors[curr.key] || {},\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options;\n    var style = _reactNative.StyleSheet.flatten(options.headerStyle || {});\n    var height = typeof style.height === 'number' ? style.height : previous[curr.key];\n    var safeAreaInsets = _objectSpread(_objectSpread({}, insets), options.safeAreaInsets);\n    var _options$headerStatus = options.headerStatusBarHeight,\n      headerStatusBarHeight = _options$headerStatus === void 0 ? safeAreaInsets.top : _options$headerStatus;\n    acc[curr.key] = typeof height === 'number' ? height : (0, _HeaderSegment.getDefaultHeaderHeight)(layout, headerStatusBarHeight);\n    return acc;\n  }, {});\n};\nvar getDistanceFromOptions = function getDistanceFromOptions(mode, layout, descriptor) {\n  var _ref2 = (descriptor === null || descriptor === void 0 ? void 0 : descriptor.options) || {},\n    _ref2$gestureDirectio = _ref2.gestureDirection,\n    gestureDirection = _ref2$gestureDirectio === void 0 ? mode === 'modal' ? _TransitionPresets.ModalTransition.gestureDirection : _TransitionPresets.DefaultTransition.gestureDirection : _ref2$gestureDirectio;\n  return (0, _getDistanceForDirection.default)(layout, gestureDirection);\n};\nvar getProgressFromGesture = function getProgressFromGesture(mode, gesture, layout, descriptor) {\n  var distance = getDistanceFromOptions(mode, {\n    width: Math.max(1, layout.width),\n    height: Math.max(1, layout.height)\n  }, descriptor);\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0]\n    });\n  }\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1]\n  });\n};\nvar CardStack = function (_React$Component) {\n  (0, _inherits2.default)(CardStack, _React$Component);\n  var _super = _createSuper(CardStack);\n  function CardStack(_props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, CardStack);\n    _this = _super.call(this, _props);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleLayout\", function (e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n      var layout = {\n        width: width,\n        height: height\n      };\n      _this.setState(function (state, props) {\n        if (height === state.layout.height && width === state.layout.width) {\n          return null;\n        }\n        return {\n          layout: layout,\n          headerHeights: getHeaderHeights(props.routes, props.insets, state.descriptors, layout, state.headerHeights)\n        };\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleHeaderLayout\", function (_ref3) {\n      var route = _ref3.route,\n        height = _ref3.height;\n      _this.setState(function (_ref4) {\n        var headerHeights = _ref4.headerHeights;\n        var previousHeight = headerHeights[route.key];\n        if (previousHeight === height) {\n          return null;\n        }\n        return {\n          headerHeights: _objectSpread(_objectSpread({}, headerHeights), {}, (0, _defineProperty3.default)({}, route.key, height))\n        };\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getFocusedRoute\", function () {\n      var state = _this.props.state;\n      return state.routes[state.index];\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getPreviousScene\", function (_ref5) {\n      var route = _ref5.route;\n      var getPreviousRoute = _this.props.getPreviousRoute;\n      var scenes = _this.state.scenes;\n      var previousRoute = getPreviousRoute({\n        route: route\n      });\n      if (previousRoute) {\n        var previousScene = scenes.find(function (scene) {\n          return scene.route.key === previousRoute.key;\n        });\n        return previousScene;\n      }\n      return undefined;\n    });\n    var _Dimensions$get = _reactNative.Dimensions.get('window'),\n      _Dimensions$get$heigh = _Dimensions$get.height,\n      _height = _Dimensions$get$heigh === void 0 ? 0 : _Dimensions$get$heigh,\n      _Dimensions$get$width = _Dimensions$get.width,\n      _width = _Dimensions$get$width === void 0 ? 0 : _Dimensions$get$width;\n    _this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: {\n        height: _height,\n        width: _width\n      },\n      descriptors: _this.props.descriptors,\n      headerHeights: {}\n    };\n    return _this;\n  }\n  (0, _createClass2.default)(CardStack, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        mode = _this$props.mode,\n        insets = _this$props.insets,\n        descriptors = _this$props.descriptors,\n        state = _this$props.state,\n        routes = _this$props.routes,\n        closingRouteKeys = _this$props.closingRouteKeys,\n        onOpenRoute = _this$props.onOpenRoute,\n        onCloseRoute = _this$props.onCloseRoute,\n        getGesturesEnabled = _this$props.getGesturesEnabled,\n        renderHeader = _this$props.renderHeader,\n        renderScene = _this$props.renderScene,\n        headerMode = _this$props.headerMode,\n        onTransitionStart = _this$props.onTransitionStart,\n        onTransitionEnd = _this$props.onTransitionEnd,\n        onPageChangeStart = _this$props.onPageChangeStart,\n        onPageChangeConfirm = _this$props.onPageChangeConfirm,\n        onPageChangeCancel = _this$props.onPageChangeCancel,\n        onGestureStart = _this$props.onGestureStart,\n        onGestureEnd = _this$props.onGestureEnd,\n        onGestureCancel = _this$props.onGestureCancel;\n      var _this$state = this.state,\n        scenes = _this$state.scenes,\n        layout = _this$state.layout,\n        gestures = _this$state.gestures,\n        headerHeights = _this$state.headerHeights;\n      var focusedRoute = state.routes[state.index];\n      var focusedDescriptor = descriptors[focusedRoute.key];\n      var focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n      var defaultTransitionPreset = mode === 'modal' ? _TransitionPresets.ModalTransition : _TransitionPresets.DefaultTransition;\n      if (headerMode === 'screen') {\n        defaultTransitionPreset = _objectSpread(_objectSpread({}, defaultTransitionPreset), {}, {\n          headerStyleInterpolator: _HeaderStyleInterpolators.forNoAnimation\n        });\n      }\n      var _ref6 = focusedOptions.safeAreaInsets || {},\n        _ref6$top = _ref6.top,\n        top = _ref6$top === void 0 ? insets.top : _ref6$top,\n        _ref6$right = _ref6.right,\n        right = _ref6$right === void 0 ? insets.right : _ref6$right,\n        _ref6$bottom = _ref6.bottom,\n        bottom = _ref6$bottom === void 0 ? insets.bottom : _ref6$bottom,\n        _ref6$left = _ref6.left,\n        left = _ref6$left === void 0 ? insets.left : _ref6$left;\n      var isScreensEnabled = _reactNative.Platform.OS !== 'ios' && mode !== 'modal';\n      return React.createElement(_HeaderShownContext.default.Consumer, null, function (isParentHeaderShown) {\n        var isFloatHeaderAbsolute = headerMode === 'float' ? _this2.state.scenes.slice(-2).some(function (scene) {\n          var descriptor = scene.descriptor;\n          var options = descriptor ? descriptor.options : {};\n          var headerTransparent = options.headerTransparent,\n            _options$headerShown = options.headerShown,\n            headerShown = _options$headerShown === void 0 ? isParentHeaderShown === false : _options$headerShown;\n          if (headerTransparent || headerShown === false) {\n            return true;\n          }\n          return false;\n        }) : false;\n        var floatingHeader = headerMode === 'float' ? React.createElement(React.Fragment, {\n          key: \"header\"\n        }, renderHeader({\n          mode: 'float',\n          layout: layout,\n          insets: {\n            top: top,\n            right: right,\n            bottom: bottom,\n            left: left\n          },\n          scenes: scenes,\n          getPreviousScene: _this2.getPreviousScene,\n          getFocusedRoute: _this2.getFocusedRoute,\n          onContentHeightChange: _this2.handleHeaderLayout,\n          gestureDirection: focusedOptions.gestureDirection !== undefined ? focusedOptions.gestureDirection : defaultTransitionPreset.gestureDirection,\n          styleInterpolator: focusedOptions.headerStyleInterpolator !== undefined ? focusedOptions.headerStyleInterpolator : defaultTransitionPreset.headerStyleInterpolator,\n          style: [styles.floating, isFloatHeaderAbsolute && styles.absolute]\n        })) : null;\n        return React.createElement(React.Fragment, null, isFloatHeaderAbsolute ? null : floatingHeader, React.createElement(_Screens.MaybeScreenContainer, {\n          enabled: isScreensEnabled,\n          style: styles.container,\n          onLayout: _this2.handleLayout\n        }, routes.map(function (route, index, self) {\n          var focused = focusedRoute.key === route.key;\n          var gesture = gestures[route.key];\n          var scene = scenes[index];\n          var isScreenActive = scene.progress.next ? scene.progress.next.interpolate({\n            inputRange: [0, 1 - EPSILON, 1],\n            outputRange: [1, 1, 0],\n            extrapolate: 'clamp'\n          }) : 1;\n          var _ref7 = scene.descriptor ? scene.descriptor.options : {},\n            safeAreaInsets = _ref7.safeAreaInsets,\n            _ref7$headerShown = _ref7.headerShown,\n            headerShown = _ref7$headerShown === void 0 ? isParentHeaderShown === false : _ref7$headerShown,\n            headerTransparent = _ref7.headerTransparent,\n            cardShadowEnabled = _ref7.cardShadowEnabled,\n            cardOverlayEnabled = _ref7.cardOverlayEnabled,\n            cardOverlay = _ref7.cardOverlay,\n            cardStyle = _ref7.cardStyle,\n            animationEnabled = _ref7.animationEnabled,\n            gestureResponseDistance = _ref7.gestureResponseDistance,\n            gestureVelocityImpact = _ref7.gestureVelocityImpact,\n            _ref7$gestureDirectio = _ref7.gestureDirection,\n            gestureDirection = _ref7$gestureDirectio === void 0 ? defaultTransitionPreset.gestureDirection : _ref7$gestureDirectio,\n            _ref7$transitionSpec = _ref7.transitionSpec,\n            transitionSpec = _ref7$transitionSpec === void 0 ? defaultTransitionPreset.transitionSpec : _ref7$transitionSpec,\n            _ref7$cardStyleInterp = _ref7.cardStyleInterpolator,\n            cardStyleInterpolator = _ref7$cardStyleInterp === void 0 ? animationEnabled === false ? _CardStyleInterpolators.forNoAnimation : defaultTransitionPreset.cardStyleInterpolator : _ref7$cardStyleInterp,\n            _ref7$headerStyleInte = _ref7.headerStyleInterpolator,\n            headerStyleInterpolator = _ref7$headerStyleInte === void 0 ? defaultTransitionPreset.headerStyleInterpolator : _ref7$headerStyleInte;\n          var transitionConfig = {\n            gestureDirection: gestureDirection,\n            transitionSpec: transitionSpec,\n            cardStyleInterpolator: cardStyleInterpolator,\n            headerStyleInterpolator: headerStyleInterpolator\n          };\n          if (index !== self.length - 1) {\n            var nextScene = scenes[index + 1];\n            if (nextScene) {\n              var _ref8 = nextScene.descriptor ? nextScene.descriptor.options : {},\n                _animationEnabled = _ref8.animationEnabled,\n                _ref8$gestureDirectio = _ref8.gestureDirection,\n                _gestureDirection = _ref8$gestureDirectio === void 0 ? defaultTransitionPreset.gestureDirection : _ref8$gestureDirectio,\n                _ref8$transitionSpec = _ref8.transitionSpec,\n                _transitionSpec = _ref8$transitionSpec === void 0 ? defaultTransitionPreset.transitionSpec : _ref8$transitionSpec,\n                _ref8$cardStyleInterp = _ref8.cardStyleInterpolator,\n                _cardStyleInterpolator = _ref8$cardStyleInterp === void 0 ? _animationEnabled === false ? _CardStyleInterpolators.forNoAnimation : defaultTransitionPreset.cardStyleInterpolator : _ref8$cardStyleInterp,\n                _ref8$headerStyleInte = _ref8.headerStyleInterpolator,\n                _headerStyleInterpolator = _ref8$headerStyleInte === void 0 ? defaultTransitionPreset.headerStyleInterpolator : _ref8$headerStyleInte;\n              transitionConfig = {\n                gestureDirection: _gestureDirection,\n                transitionSpec: _transitionSpec,\n                cardStyleInterpolator: _cardStyleInterpolator,\n                headerStyleInterpolator: _headerStyleInterpolator\n              };\n            }\n          }\n          var _ref9 = safeAreaInsets || {},\n            _ref9$top = _ref9.top,\n            safeAreaInsetTop = _ref9$top === void 0 ? insets.top : _ref9$top,\n            _ref9$right = _ref9.right,\n            safeAreaInsetRight = _ref9$right === void 0 ? insets.right : _ref9$right,\n            _ref9$bottom = _ref9.bottom,\n            safeAreaInsetBottom = _ref9$bottom === void 0 ? insets.bottom : _ref9$bottom,\n            _ref9$left = _ref9.left,\n            safeAreaInsetLeft = _ref9$left === void 0 ? insets.left : _ref9$left;\n          var headerHeight = headerMode !== 'none' && headerShown !== false ? headerHeights[route.key] : 0;\n          return React.createElement(_Screens.MaybeScreen, {\n            key: route.key,\n            style: _reactNative.StyleSheet.absoluteFill,\n            enabled: isScreensEnabled,\n            active: isScreenActive,\n            pointerEvents: \"box-none\"\n          }, React.createElement(_CardContainer.default, _extends({\n            index: index,\n            active: index === self.length - 1,\n            focused: focused,\n            closing: closingRouteKeys.includes(route.key),\n            layout: layout,\n            gesture: gesture,\n            scene: scene,\n            safeAreaInsetTop: safeAreaInsetTop,\n            safeAreaInsetRight: safeAreaInsetRight,\n            safeAreaInsetBottom: safeAreaInsetBottom,\n            safeAreaInsetLeft: safeAreaInsetLeft,\n            cardOverlay: cardOverlay,\n            cardOverlayEnabled: cardOverlayEnabled,\n            cardShadowEnabled: cardShadowEnabled,\n            cardStyle: cardStyle,\n            onPageChangeStart: onPageChangeStart,\n            onPageChangeConfirm: onPageChangeConfirm,\n            onPageChangeCancel: onPageChangeCancel,\n            onGestureStart: onGestureStart,\n            onGestureCancel: onGestureCancel,\n            onGestureEnd: onGestureEnd,\n            gestureResponseDistance: gestureResponseDistance,\n            headerHeight: headerHeight,\n            onHeaderHeightChange: _this2.handleHeaderLayout,\n            getPreviousScene: _this2.getPreviousScene,\n            getFocusedRoute: _this2.getFocusedRoute,\n            mode: mode,\n            headerMode: headerMode,\n            headerShown: headerShown,\n            hasAbsoluteHeader: isFloatHeaderAbsolute && !headerTransparent,\n            renderHeader: renderHeader,\n            renderScene: renderScene,\n            onOpenRoute: onOpenRoute,\n            onCloseRoute: onCloseRoute,\n            onTransitionStart: onTransitionStart,\n            onTransitionEnd: onTransitionEnd,\n            gestureEnabled: index !== 0 && getGesturesEnabled({\n              route: route\n            }),\n            gestureVelocityImpact: gestureVelocityImpact\n          }, transitionConfig)));\n        })), isFloatHeaderAbsolute ? floatingHeader : null);\n      });\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if (props.routes === state.routes && props.descriptors === state.descriptors) {\n        return null;\n      }\n      var gestures = props.routes.reduce(function (acc, curr) {\n        var descriptor = props.descriptors[curr.key];\n        var _ref10 = (descriptor === null || descriptor === void 0 ? void 0 : descriptor.options) || {},\n          animationEnabled = _ref10.animationEnabled;\n        acc[curr.key] = state.gestures[curr.key] || new _reactNative.Animated.Value(props.openingRouteKeys.includes(curr.key) && animationEnabled !== false ? getDistanceFromOptions(props.mode, state.layout, descriptor) : 0);\n        return acc;\n      }, {});\n      return {\n        routes: props.routes,\n        scenes: props.routes.map(function (route, index, self) {\n          var previousRoute = self[index - 1];\n          var nextRoute = self[index + 1];\n          var oldScene = state.scenes[index];\n          var currentGesture = gestures[route.key];\n          var previousGesture = previousRoute ? gestures[previousRoute.key] : undefined;\n          var nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n          var descriptor = props.descriptors[route.key] || state.descriptors[route.key] || (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n          var nextDescriptor = props.descriptors[nextRoute === null || nextRoute === void 0 ? void 0 : nextRoute.key] || state.descriptors[nextRoute === null || nextRoute === void 0 ? void 0 : nextRoute.key];\n          var previousDescriptor = props.descriptors[previousRoute === null || previousRoute === void 0 ? void 0 : previousRoute.key] || state.descriptors[previousRoute === null || previousRoute === void 0 ? void 0 : previousRoute.key];\n          var scene = {\n            route: route,\n            descriptor: descriptor,\n            progress: {\n              current: getProgressFromGesture(props.mode, currentGesture, state.layout, descriptor),\n              next: nextGesture ? getProgressFromGesture(props.mode, nextGesture, state.layout, nextDescriptor) : undefined,\n              previous: previousGesture ? getProgressFromGesture(props.mode, previousGesture, state.layout, previousDescriptor) : undefined\n            },\n            __memo: [route, state.layout, descriptor, nextDescriptor, previousDescriptor, currentGesture, nextGesture, previousGesture]\n          };\n          if (oldScene && scene.__memo.every(function (it, i) {\n            return oldScene.__memo[i] === it;\n          })) {\n            return oldScene;\n          }\n          return scene;\n        }),\n        gestures: gestures,\n        descriptors: props.descriptors,\n        headerHeights: getHeaderHeights(props.routes, props.insets, state.descriptors, state.layout, state.headerHeights)\n      };\n    }\n  }]);\n  return CardStack;\n}(React.Component);\nexports.default = CardStack;\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0\n  },\n  floating: {\n    zIndex: 1\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_Screens","_HeaderSegment","_CardContainer","_interopRequireDefault","_TransitionPresets","_HeaderStyleInterpolators","_CardStyleInterpolators","_HeaderShownContext","_getDistanceForDirection","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","arguments","apply","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","_objectSpread","target","i","length","source","forEach","_defineProperty3","getOwnPropertyDescriptors","defineProperties","EPSILON","FALLBACK_DESCRIPTOR","freeze","options","getHeaderHeights","routes","insets","descriptors","layout","previous","reduce","acc","curr","_ref","_ref$options","style","StyleSheet","flatten","headerStyle","height","safeAreaInsets","_options$headerStatus","headerStatusBarHeight","top","getDefaultHeaderHeight","getDistanceFromOptions","mode","descriptor","_ref2","_ref2$gestureDirectio","gestureDirection","ModalTransition","DefaultTransition","getDistanceForDirection","getProgressFromGesture","gesture","distance","width","Math","max","interpolate","inputRange","outputRange","CardStack","_React$Component","_inherits2","_super","_props","_this","_classCallCheck2","_defineProperty","_assertThisInitialized2","_e$nativeEvent$layout","nativeEvent","setState","state","props","headerHeights","_ref3","route","_ref4","previousHeight","index","_ref5","getPreviousRoute","scenes","previousRoute","previousScene","find","scene","undefined","_Dimensions$get","Dimensions","_Dimensions$get$heigh","_height","_Dimensions$get$width","_width","gestures","_createClass2","value","render","_this2","_this$props","closingRouteKeys","onOpenRoute","onCloseRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","onGestureStart","onGestureEnd","onGestureCancel","_this$state","focusedRoute","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerStyleInterpolator","forNoAnimationHeader","_ref6","_ref6$top","_ref6$right","right","_ref6$bottom","bottom","_ref6$left","left","isScreensEnabled","Platform","OS","createElement","HeaderShownContext","Consumer","isParentHeaderShown","isFloatHeaderAbsolute","slice","some","headerTransparent","_options$headerShown","headerShown","floatingHeader","Fragment","getPreviousScene","getFocusedRoute","onContentHeightChange","handleHeaderLayout","styleInterpolator","styles","floating","absolute","MaybeScreenContainer","enabled","container","onLayout","handleLayout","map","self","focused","isScreenActive","progress","next","extrapolate","_ref7","_ref7$headerShown","cardShadowEnabled","cardOverlayEnabled","cardOverlay","cardStyle","animationEnabled","gestureResponseDistance","gestureVelocityImpact","_ref7$gestureDirectio","_ref7$transitionSpec","transitionSpec","_ref7$cardStyleInterp","cardStyleInterpolator","forNoAnimationCard","_ref7$headerStyleInte","transitionConfig","nextScene","_ref8","_ref8$gestureDirectio","_ref8$transitionSpec","_ref8$cardStyleInterp","_ref8$headerStyleInte","_ref9","_ref9$top","safeAreaInsetTop","_ref9$right","safeAreaInsetRight","_ref9$bottom","safeAreaInsetBottom","_ref9$left","safeAreaInsetLeft","headerHeight","MaybeScreen","absoluteFill","active","pointerEvents","CardContainer","_extends","closing","includes","onHeaderHeightChange","hasAbsoluteHeader","gestureEnabled","getDerivedStateFromProps","_ref10","Animated","Value","openingRouteKeys","nextRoute","oldScene","currentGesture","previousGesture","nextGesture","nextDescriptor","previousDescriptor","current","__memo","every","it","Component","exports","create","flex","position","zIndex"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\react-navigation-stack\\lib\\module\\vendor\\views\\Stack\\CardStack.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\nimport type { NavigationState as StackNavigationState } from 'react-navigation';\n\nimport { MaybeScreenContainer, MaybeScreen } from '../Screens';\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport type {\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Route,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n  onGestureStart?: (props: { route: Route<string> }) => void;\n  onGestureEnd?: (props: { route: Route<string> }) => void;\n  onGestureCancel?: (props: { route: Route<string> }) => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 0.01;\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const style: any = StyleSheet.flatten(options.headerStyle || {});\n\n    const height =\n      typeof style.height === 'number' ? style.height : previous[curr.key];\n\n    const safeAreaInsets = {\n      ...insets,\n      ...options.safeAreaInsets,\n    };\n\n    const { headerStatusBarHeight = safeAreaInsets.top } = options;\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(\n    mode,\n    {\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n      // This causes blank screen on web if it was previously inside container with display: none\n      width: Math.max(1, layout.width),\n      height: Math.max(1, layout.height),\n    },\n    descriptor\n  );\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { height = 0, width = 0 } = Dimensions.get('window');\n\n    this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: { height, width },\n      descriptors: this.props.descriptors,\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      headerHeights: {},\n    };\n  }\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          state.headerHeights\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  private getFocusedRoute = () => {\n    const { state } = this.props;\n\n    return state.routes[state.index];\n  };\n\n  private getPreviousScene = ({ route }: { route: Route<string> }) => {\n    const { getPreviousRoute } = this.props;\n    const { scenes } = this.state;\n\n    const previousRoute = getPreviousRoute({ route });\n\n    if (previousRoute) {\n      const previousScene = scenes.find(\n        (scene) => scene.route.key === previousRoute.key\n      );\n\n      return previousScene;\n    }\n\n    return undefined;\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n      onGestureStart,\n      onGestureEnd,\n      onGestureCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    // Screens is buggy on iOS and web, so we only enable it on Android\n    // For modals, usually we want the screen underneath to be visible, so also disable it there\n    const isScreensEnabled = Platform.OS !== 'ios' && mode !== 'modal';\n\n    return (\n      <HeaderShownContext.Consumer>\n        {(isParentHeaderShown) => {\n          const isFloatHeaderAbsolute =\n            headerMode === 'float'\n              ? this.state.scenes.slice(-2).some((scene) => {\n                  const { descriptor } = scene;\n                  const options = descriptor ? descriptor.options : {};\n                  const {\n                    headerTransparent,\n                    headerShown = isParentHeaderShown === false,\n                  } = options;\n\n                  if (headerTransparent || headerShown === false) {\n                    return true;\n                  }\n\n                  return false;\n                })\n              : false;\n\n          const floatingHeader =\n            headerMode === 'float' ? (\n              <React.Fragment key=\"header\">\n                {renderHeader({\n                  mode: 'float',\n                  layout,\n                  insets: { top, right, bottom, left },\n                  scenes,\n                  getPreviousScene: this.getPreviousScene,\n                  getFocusedRoute: this.getFocusedRoute,\n                  onContentHeightChange: this.handleHeaderLayout,\n                  gestureDirection:\n                    focusedOptions.gestureDirection !== undefined\n                      ? focusedOptions.gestureDirection\n                      : defaultTransitionPreset.gestureDirection,\n                  styleInterpolator:\n                    focusedOptions.headerStyleInterpolator !== undefined\n                      ? focusedOptions.headerStyleInterpolator\n                      : defaultTransitionPreset.headerStyleInterpolator,\n                  style: [\n                    styles.floating,\n                    isFloatHeaderAbsolute && styles.absolute,\n                  ],\n                })}\n              </React.Fragment>\n            ) : null;\n\n          return (\n            <React.Fragment>\n              {isFloatHeaderAbsolute ? null : floatingHeader}\n              <MaybeScreenContainer\n                enabled={isScreensEnabled}\n                style={styles.container}\n                onLayout={this.handleLayout}\n              >\n                {routes.map((route, index, self) => {\n                  const focused = focusedRoute.key === route.key;\n                  const gesture = gestures[route.key];\n                  const scene = scenes[index];\n\n                  const isScreenActive = scene.progress.next\n                    ? scene.progress.next.interpolate({\n                        inputRange: [0, 1 - EPSILON, 1],\n                        outputRange: [1, 1, 0],\n                        extrapolate: 'clamp',\n                      })\n                    : 1;\n\n                  const {\n                    safeAreaInsets,\n                    headerShown = isParentHeaderShown === false,\n                    headerTransparent,\n                    cardShadowEnabled,\n                    cardOverlayEnabled,\n                    cardOverlay,\n                    cardStyle,\n                    animationEnabled,\n                    gestureResponseDistance,\n                    gestureVelocityImpact,\n                    gestureDirection = defaultTransitionPreset.gestureDirection,\n                    transitionSpec = defaultTransitionPreset.transitionSpec,\n                    cardStyleInterpolator = animationEnabled === false\n                      ? forNoAnimationCard\n                      : defaultTransitionPreset.cardStyleInterpolator,\n                    headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                  } = scene.descriptor\n                    ? scene.descriptor.options\n                    : ({} as StackNavigationOptions);\n\n                  let transitionConfig = {\n                    gestureDirection,\n                    transitionSpec,\n                    cardStyleInterpolator,\n                    headerStyleInterpolator,\n                  };\n\n                  // When a screen is not the last, it should use next screen's transition config\n                  // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n                  // For example combining a slide and a modal transition would look wrong otherwise\n                  // With this approach, combining different transition styles in the same navigator mostly looks right\n                  // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n                  // but majority of the transitions look alright\n                  if (index !== self.length - 1) {\n                    const nextScene = scenes[index + 1];\n\n                    if (nextScene) {\n                      const {\n                        animationEnabled,\n                        gestureDirection = defaultTransitionPreset.gestureDirection,\n                        transitionSpec = defaultTransitionPreset.transitionSpec,\n                        cardStyleInterpolator = animationEnabled === false\n                          ? forNoAnimationCard\n                          : defaultTransitionPreset.cardStyleInterpolator,\n                        headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                      } = nextScene.descriptor\n                        ? nextScene.descriptor.options\n                        : ({} as StackNavigationOptions);\n\n                      transitionConfig = {\n                        gestureDirection,\n                        transitionSpec,\n                        cardStyleInterpolator,\n                        headerStyleInterpolator,\n                      };\n                    }\n                  }\n\n                  const {\n                    top: safeAreaInsetTop = insets.top,\n                    right: safeAreaInsetRight = insets.right,\n                    bottom: safeAreaInsetBottom = insets.bottom,\n                    left: safeAreaInsetLeft = insets.left,\n                  } = safeAreaInsets || {};\n\n                  const headerHeight =\n                    headerMode !== 'none' && headerShown !== false\n                      ? headerHeights[route.key]\n                      : 0;\n\n                  return (\n                    <MaybeScreen\n                      key={route.key}\n                      style={StyleSheet.absoluteFill}\n                      enabled={isScreensEnabled}\n                      active={isScreenActive}\n                      pointerEvents=\"box-none\"\n                    >\n                      <CardContainer\n                        index={index}\n                        active={index === self.length - 1}\n                        focused={focused}\n                        closing={closingRouteKeys.includes(route.key)}\n                        layout={layout}\n                        gesture={gesture}\n                        scene={scene}\n                        safeAreaInsetTop={safeAreaInsetTop}\n                        safeAreaInsetRight={safeAreaInsetRight}\n                        safeAreaInsetBottom={safeAreaInsetBottom}\n                        safeAreaInsetLeft={safeAreaInsetLeft}\n                        cardOverlay={cardOverlay}\n                        cardOverlayEnabled={cardOverlayEnabled}\n                        cardShadowEnabled={cardShadowEnabled}\n                        cardStyle={cardStyle}\n                        onPageChangeStart={onPageChangeStart}\n                        onPageChangeConfirm={onPageChangeConfirm}\n                        onPageChangeCancel={onPageChangeCancel}\n                        onGestureStart={onGestureStart}\n                        onGestureCancel={onGestureCancel}\n                        onGestureEnd={onGestureEnd}\n                        gestureResponseDistance={gestureResponseDistance}\n                        headerHeight={headerHeight}\n                        onHeaderHeightChange={this.handleHeaderLayout}\n                        getPreviousScene={this.getPreviousScene}\n                        getFocusedRoute={this.getFocusedRoute}\n                        mode={mode}\n                        headerMode={headerMode}\n                        headerShown={headerShown}\n                        hasAbsoluteHeader={\n                          isFloatHeaderAbsolute && !headerTransparent\n                        }\n                        renderHeader={renderHeader}\n                        renderScene={renderScene}\n                        onOpenRoute={onOpenRoute}\n                        onCloseRoute={onCloseRoute}\n                        onTransitionStart={onTransitionStart}\n                        onTransitionEnd={onTransitionEnd}\n                        gestureEnabled={\n                          index !== 0 && getGesturesEnabled({ route })\n                        }\n                        gestureVelocityImpact={gestureVelocityImpact}\n                        {...transitionConfig}\n                      />\n                    </MaybeScreen>\n                  );\n                })}\n              </MaybeScreenContainer>\n              {isFloatHeaderAbsolute ? floatingHeader : null}\n            </React.Fragment>\n          );\n        }}\n      </HeaderShownContext.Consumer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  floating: {\n    zIndex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}