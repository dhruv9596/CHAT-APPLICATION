{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DrawerActions = void 0;\nexports.default = DrawerRouter;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar _TabRouter = _interopRequireWildcard(require(\"./TabRouter\"));\nvar _excluded = [\"openByDefault\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nvar DrawerActions = _objectSpread(_objectSpread({}, _TabRouter.TabActions), {}, {\n  openDrawer: function openDrawer() {\n    return {\n      type: 'OPEN_DRAWER'\n    };\n  },\n  closeDrawer: function closeDrawer() {\n    return {\n      type: 'CLOSE_DRAWER'\n    };\n  },\n  toggleDrawer: function toggleDrawer() {\n    return {\n      type: 'TOGGLE_DRAWER'\n    };\n  }\n});\nexports.DrawerActions = DrawerActions;\nvar isDrawerOpen = function isDrawerOpen(state) {\n  var _state$history;\n  return Boolean((_state$history = state.history) === null || _state$history === void 0 ? void 0 : _state$history.some(function (it) {\n    return it.type === 'drawer';\n  }));\n};\nvar openDrawer = function openDrawer(state) {\n  if (isDrawerOpen(state)) {\n    return state;\n  }\n  return _objectSpread(_objectSpread({}, state), {}, {\n    history: [].concat((0, _toConsumableArray2.default)(state.history), [{\n      type: 'drawer'\n    }])\n  });\n};\nvar closeDrawer = function closeDrawer(state) {\n  if (!isDrawerOpen(state)) {\n    return state;\n  }\n  return _objectSpread(_objectSpread({}, state), {}, {\n    history: state.history.filter(function (it) {\n      return it.type !== 'drawer';\n    })\n  });\n};\nfunction DrawerRouter(_ref) {\n  var openByDefault = _ref.openByDefault,\n    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var router = (0, _TabRouter.default)(rest);\n  return _objectSpread(_objectSpread({}, router), {}, {\n    type: 'drawer',\n    getInitialState: function getInitialState(_ref2) {\n      var routeNames = _ref2.routeNames,\n        routeParamList = _ref2.routeParamList,\n        routeGetIdList = _ref2.routeGetIdList;\n      var state = router.getInitialState({\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      });\n      if (openByDefault) {\n        state = openDrawer(state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        stale: false,\n        type: 'drawer',\n        key: \"drawer-\".concat((0, _nonSecure.nanoid)())\n      });\n    },\n    getRehydratedState: function getRehydratedState(partialState, _ref3) {\n      var routeNames = _ref3.routeNames,\n        routeParamList = _ref3.routeParamList,\n        routeGetIdList = _ref3.routeGetIdList;\n      if (partialState.stale === false) {\n        return partialState;\n      }\n      var state = router.getRehydratedState(partialState, {\n        routeNames: routeNames,\n        routeParamList: routeParamList,\n        routeGetIdList: routeGetIdList\n      });\n      if (partialState.history ? isDrawerOpen(partialState) : openByDefault) {\n        state = openDrawer(state);\n      }\n      return _objectSpread(_objectSpread({}, state), {}, {\n        type: 'drawer',\n        key: \"drawer-\".concat((0, _nonSecure.nanoid)())\n      });\n    },\n    getStateForRouteFocus: function getStateForRouteFocus(state, key) {\n      var result = router.getStateForRouteFocus(state, key);\n      if (openByDefault) {\n        return openDrawer(result);\n      }\n      return closeDrawer(result);\n    },\n    getStateForAction: function getStateForAction(state, action, options) {\n      switch (action.type) {\n        case 'OPEN_DRAWER':\n          return openDrawer(state);\n        case 'CLOSE_DRAWER':\n          return closeDrawer(state);\n        case 'TOGGLE_DRAWER':\n          if (isDrawerOpen(state)) {\n            return closeDrawer(state);\n          }\n          return openDrawer(state);\n        case 'GO_BACK':\n          if (openByDefault) {\n            if (!isDrawerOpen(state)) {\n              return openDrawer(state);\n            }\n          } else {\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n          }\n          return router.getStateForAction(state, action, options);\n        default:\n          return router.getStateForAction(state, action, options);\n      }\n    },\n    actionCreators: DrawerActions\n  });\n}","map":{"version":3,"names":["_nonSecure","require","_TabRouter","_interopRequireWildcard","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","DrawerActions","TabActions","openDrawer","type","closeDrawer","toggleDrawer","exports","isDrawerOpen","state","_state$history","Boolean","history","some","it","concat","_toConsumableArray2","DrawerRouter","_ref","openByDefault","rest","_objectWithoutProperties2","router","TabRouter","getInitialState","_ref2","routeNames","routeParamList","routeGetIdList","stale","nanoid","getRehydratedState","partialState","_ref3","getStateForRouteFocus","result","getStateForAction","action","options","actionCreators"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\@react-navigation\\routers\\lib\\module\\DrawerRouter.tsx"],"sourcesContent":["import { nanoid } from 'nanoid/non-secure';\nimport type {\n  PartialState,\n  CommonNavigationAction,\n  Router,\n  ParamListBase,\n} from './types';\nimport TabRouter, {\n  TabActions,\n  TabActionType,\n  TabRouterOptions,\n  TabNavigationState,\n  TabActionHelpers,\n} from './TabRouter';\n\nexport type DrawerActionType =\n  | TabActionType\n  | {\n      type: 'OPEN_DRAWER' | 'CLOSE_DRAWER' | 'TOGGLE_DRAWER';\n      source?: string;\n      target?: string;\n    };\n\nexport type DrawerRouterOptions = TabRouterOptions & {\n  openByDefault?: boolean;\n};\n\nexport type DrawerNavigationState<ParamList extends ParamListBase> = Omit<\n  TabNavigationState<ParamList>,\n  'type' | 'history'\n> & {\n  /**\n   * Type of the router, in this case, it's drawer.\n   */\n  type: 'drawer';\n  /**\n   * List of previously visited route keys and drawer open status.\n   */\n  history: ({ type: 'route'; key: string } | { type: 'drawer' })[];\n};\n\nexport type DrawerActionHelpers<\n  ParamList extends ParamListBase\n> = TabActionHelpers<ParamList> & {\n  /**\n   * Open the drawer sidebar.\n   */\n  openDrawer(): void;\n\n  /**\n   * Close the drawer sidebar.\n   */\n  closeDrawer(): void;\n\n  /**\n   * Open the drawer sidebar if closed, or close if opened.\n   */\n  toggleDrawer(): void;\n};\n\nexport const DrawerActions = {\n  ...TabActions,\n  openDrawer(): DrawerActionType {\n    return { type: 'OPEN_DRAWER' };\n  },\n  closeDrawer(): DrawerActionType {\n    return { type: 'CLOSE_DRAWER' };\n  },\n  toggleDrawer(): DrawerActionType {\n    return { type: 'TOGGLE_DRAWER' };\n  },\n};\n\nconst isDrawerOpen = (\n  state:\n    | DrawerNavigationState<ParamListBase>\n    | PartialState<DrawerNavigationState<ParamListBase>>\n) => Boolean(state.history?.some((it) => it.type === 'drawer'));\n\nconst openDrawer = (\n  state: DrawerNavigationState<ParamListBase>\n): DrawerNavigationState<ParamListBase> => {\n  if (isDrawerOpen(state)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    history: [...state.history, { type: 'drawer' }],\n  };\n};\n\nconst closeDrawer = (\n  state: DrawerNavigationState<ParamListBase>\n): DrawerNavigationState<ParamListBase> => {\n  if (!isDrawerOpen(state)) {\n    return state;\n  }\n\n  return {\n    ...state,\n    history: state.history.filter((it) => it.type !== 'drawer'),\n  };\n};\n\nexport default function DrawerRouter({\n  openByDefault,\n  ...rest\n}: DrawerRouterOptions): Router<\n  DrawerNavigationState<ParamListBase>,\n  DrawerActionType | CommonNavigationAction\n> {\n  const router = (TabRouter(rest) as unknown) as Router<\n    DrawerNavigationState<ParamListBase>,\n    TabActionType | CommonNavigationAction\n  >;\n\n  return {\n    ...router,\n\n    type: 'drawer',\n\n    getInitialState({ routeNames, routeParamList, routeGetIdList }) {\n      let state = router.getInitialState({\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      if (openByDefault) {\n        state = openDrawer(state);\n      }\n\n      return {\n        ...state,\n        stale: false,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getRehydratedState(\n      partialState,\n      { routeNames, routeParamList, routeGetIdList }\n    ) {\n      if (partialState.stale === false) {\n        return partialState;\n      }\n\n      let state = router.getRehydratedState(partialState, {\n        routeNames,\n        routeParamList,\n        routeGetIdList,\n      });\n\n      if (partialState.history ? isDrawerOpen(partialState) : openByDefault) {\n        state = openDrawer(state);\n      }\n\n      return {\n        ...state,\n        type: 'drawer',\n        key: `drawer-${nanoid()}`,\n      };\n    },\n\n    getStateForRouteFocus(state, key) {\n      const result = router.getStateForRouteFocus(state, key);\n\n      if (openByDefault) {\n        return openDrawer(result);\n      }\n\n      return closeDrawer(result);\n    },\n\n    getStateForAction(state, action, options) {\n      switch (action.type) {\n        case 'OPEN_DRAWER':\n          return openDrawer(state);\n\n        case 'CLOSE_DRAWER':\n          return closeDrawer(state);\n\n        case 'TOGGLE_DRAWER':\n          if (isDrawerOpen(state)) {\n            return closeDrawer(state);\n          }\n\n          return openDrawer(state);\n\n        case 'GO_BACK':\n          if (openByDefault) {\n            if (!isDrawerOpen(state)) {\n              return openDrawer(state);\n            }\n          } else {\n            if (isDrawerOpen(state)) {\n              return closeDrawer(state);\n            }\n          }\n\n          return router.getStateForAction(state, action, options);\n\n        default:\n          return router.getStateForAction(state, action, options);\n      }\n    },\n\n    actionCreators: DrawerActions,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}