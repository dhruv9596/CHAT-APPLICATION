{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createSharedStyle = createSharedStyle;\nexports.createVariations = createVariations;\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _lodash = _interopRequireDefault(require(\"lodash\"));\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction capitalizeFirstLetter(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\nfunction createVariations(baseName, nameSuffixes, key, value) {\n  return _lodash.default.reduce(nameSuffixes, function (result, variant) {\n    var variantName = variant ? baseName + \"-\" + variant : baseName;\n    var keyName = variant ? \"\" + key + capitalizeFirstLetter(variant) : key;\n    result[variantName] = (0, _defineProperty2.default)({}, keyName, value);\n    return result;\n  }, {});\n}\nfunction createSharedStyle(componentNames) {\n  var sharedStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var customStyles = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _lodash.default.reduce(componentNames, function (result, componentName) {\n    result[componentName] = _objectSpread(_objectSpread({}, sharedStyle), customStyles[componentName]);\n    return result;\n  }, {});\n}","map":{"version":3,"names":["_lodash","_interopRequireDefault","require","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","capitalizeFirstLetter","value","charAt","toUpperCase","slice","createVariations","baseName","nameSuffixes","_","reduce","result","variant","variantName","keyName","createSharedStyle","componentNames","sharedStyle","undefined","customStyles","componentName"],"sources":["C:/xampp/htdocs/Kush/whatsapp_facebook_messenger/chat/node_modules/native-base-shoutem-theme/src/addons.js"],"sourcesContent":["import _ from 'lodash';\n\nfunction capitalizeFirstLetter(value) {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}\n\n/**\n * Creates a set of style variations with the provided name\n * suffixes. This function is useful when creating style variations\n * for styles with shorthands, e.g., margin, padding, etc. This function\n * will return an object with the keys that represent the style variations,\n * and each key will have an object with the provided key and value. Both\n * style variation, and value object keys will get the provided suffixes. The\n * style variation key names are expected to be in snake-case, and value keys\n * are expected to be in camelCase.\n *\n * Example:\n * createVariations('large-margin', ['', 'left', 'right'], 'margin', 30)\n * will return:\n * {\n *   'large-margin': {\n *     margin: 30\n *   },\n *   'large-margin-left': {\n *     marginLeft: 30,\n *   },\n *   'large-margin-right': {\n *     marginRight: 30,\n *   }\n * }\n *\n * @param baseName Base name for style variation Â§names.\n * @param nameSuffixes Suffixes that will be concatenated to baseName.\n * @param key The value key name to use.\n * @param value The value that will be assigned to the key property.\n * @returns {object} An object with the generated style variants.\n */\nexport function createVariations(baseName, nameSuffixes, key, value) {\n  return _.reduce(nameSuffixes, (result, variant) => {\n    const variantName = variant ? `${baseName}-${variant}` : baseName;\n    const keyName = variant ? `${key}${capitalizeFirstLetter(variant)}` : key;\n\n    // eslint-disable-next-line no-param-reassign\n    result[variantName] = {\n      [keyName]: value,\n    };\n\n    return result;\n  }, {});\n}\n\n/**\n * Creates a set of style rules for the provided components. This function\n * is useful when a set of components needs to have the same style. The\n * shared style will be applied to each component. It is also possible to\n * provide custom style for each component that will be applied on top of\n * the shared style.\n *\n * Example:\n * createSharedStyle(['shoutem.ui.Text', 'shoutem.ui.Title'], {\n *   color: 'white'\n * }, {\n *   'shoutem.ui.Title: {\n *     marginBottom: 15\n *   }\n * );\n * will return:\n * {\n *   'shoutem.ui.Text': {\n *     color: 'white'\n *   },\n *   'shoutem.ui.Title': {\n *     color: 'white',\n *     marginBottom: 15\n *   }\n * }\n *\n * @param componentNames The names of the components to generate styles for.\n * @param sharedStyle The style to apply to each component.\n * @param customStyles Style overrides by component names.\n * @returns {object} An object with the generated styles.\n */\nexport function createSharedStyle(componentNames, sharedStyle = {}, customStyles = {}) {\n  return _.reduce(componentNames, (result, componentName) => {\n    // eslint-disable-next-line no-param-reassign\n    result[componentName] = {\n      ...sharedStyle,\n      ...customStyles[componentName],\n    };\n\n    return result;\n  }, {});\n}\n"],"mappings":";;;;;;;AAAA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AAAuB,SAAAC,QAAAC,MAAA,EAAAC,cAAA,QAAAC,IAAA,GAAAC,MAAA,CAAAD,IAAA,CAAAF,MAAA,OAAAG,MAAA,CAAAC,qBAAA,QAAAC,OAAA,GAAAF,MAAA,CAAAC,qBAAA,CAAAJ,MAAA,GAAAC,cAAA,KAAAI,OAAA,GAAAA,OAAA,CAAAC,MAAA,WAAAC,GAAA,WAAAJ,MAAA,CAAAK,wBAAA,CAAAR,MAAA,EAAAO,GAAA,EAAAE,UAAA,OAAAP,IAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,IAAA,EAAAG,OAAA,YAAAH,IAAA;AAAA,SAAAU,cAAAC,MAAA,aAAAC,CAAA,MAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAF,CAAA,UAAAG,MAAA,WAAAF,SAAA,CAAAD,CAAA,IAAAC,SAAA,CAAAD,CAAA,QAAAA,CAAA,OAAAf,OAAA,CAAAI,MAAA,CAAAc,MAAA,OAAAC,OAAA,WAAAC,GAAA,QAAAC,gBAAA,CAAAC,OAAA,EAAAR,MAAA,EAAAM,GAAA,EAAAF,MAAA,CAAAE,GAAA,SAAAhB,MAAA,CAAAmB,yBAAA,GAAAnB,MAAA,CAAAoB,gBAAA,CAAAV,MAAA,EAAAV,MAAA,CAAAmB,yBAAA,CAAAL,MAAA,KAAAlB,OAAA,CAAAI,MAAA,CAAAc,MAAA,GAAAC,OAAA,WAAAC,GAAA,IAAAhB,MAAA,CAAAqB,cAAA,CAAAX,MAAA,EAAAM,GAAA,EAAAhB,MAAA,CAAAK,wBAAA,CAAAS,MAAA,EAAAE,GAAA,iBAAAN,MAAA;AAEvB,SAASY,qBAAqBA,CAACC,KAAK,EAAE;EACpC,OAAOA,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGF,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC;AACvD;AAiCO,SAASC,gBAAgBA,CAACC,QAAQ,EAAEC,YAAY,EAAEb,GAAG,EAAEO,KAAK,EAAE;EACnE,OAAOO,eAAC,CAACC,MAAM,CAACF,YAAY,EAAE,UAACG,MAAM,EAAEC,OAAO,EAAK;IACjD,IAAMC,WAAW,GAAGD,OAAO,GAAML,QAAQ,SAAIK,OAAO,GAAKL,QAAQ;IACjE,IAAMO,OAAO,GAAGF,OAAO,QAAMjB,GAAG,GAAGM,qBAAqB,CAACW,OAAO,CAAC,GAAKjB,GAAG;IAGzEgB,MAAM,CAACE,WAAW,CAAC,OAAAjB,gBAAA,CAAAC,OAAA,MAChBiB,OAAO,EAAGZ,KAAK,CACjB;IAED,OAAOS,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACR;AAiCO,SAASI,iBAAiBA,CAACC,cAAc,EAAuC;EAAA,IAArCC,WAAW,GAAA1B,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA2B,SAAA,GAAA3B,SAAA,MAAG,CAAC,CAAC;EAAA,IAAE4B,YAAY,GAAA5B,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAA2B,SAAA,GAAA3B,SAAA,MAAG,CAAC,CAAC;EACnF,OAAOkB,eAAC,CAACC,MAAM,CAACM,cAAc,EAAE,UAACL,MAAM,EAAES,aAAa,EAAK;IAEzDT,MAAM,CAACS,aAAa,CAAC,GAAAhC,aAAA,CAAAA,aAAA,KAChB6B,WAAW,GACXE,YAAY,CAACC,aAAa,CAAC,CAC/B;IAED,OAAOT,MAAM;EACf,CAAC,EAAE,CAAC,CAAC,CAAC;AACR"},"metadata":{},"sourceType":"script","externalDependencies":[]}