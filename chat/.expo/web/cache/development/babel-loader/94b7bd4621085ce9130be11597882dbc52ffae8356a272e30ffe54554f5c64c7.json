{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _native = require(\"@react-navigation/native\");\nvar _Card = _interopRequireDefault(require(\"./Card\"));\nvar _HeaderHeightContext = _interopRequireDefault(require(\"../../utils/HeaderHeightContext\"));\nvar _HeaderShownContext = _interopRequireDefault(require(\"../../utils/HeaderShownContext\"));\nvar _PreviousSceneContext = _interopRequireDefault(require(\"../../utils/PreviousSceneContext\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar EPSILON = 0.1;\nfunction CardContainer(_ref) {\n  var active = _ref.active,\n    cardOverlay = _ref.cardOverlay,\n    cardOverlayEnabled = _ref.cardOverlayEnabled,\n    cardShadowEnabled = _ref.cardShadowEnabled,\n    cardStyle = _ref.cardStyle,\n    cardStyleInterpolator = _ref.cardStyleInterpolator,\n    closing = _ref.closing,\n    gesture = _ref.gesture,\n    focused = _ref.focused,\n    gestureDirection = _ref.gestureDirection,\n    gestureEnabled = _ref.gestureEnabled,\n    gestureResponseDistance = _ref.gestureResponseDistance,\n    gestureVelocityImpact = _ref.gestureVelocityImpact,\n    getPreviousScene = _ref.getPreviousScene,\n    getFocusedRoute = _ref.getFocusedRoute,\n    mode = _ref.mode,\n    headerMode = _ref.headerMode,\n    headerShown = _ref.headerShown,\n    headerStyleInterpolator = _ref.headerStyleInterpolator,\n    hasAbsoluteHeader = _ref.hasAbsoluteHeader,\n    headerHeight = _ref.headerHeight,\n    onHeaderHeightChange = _ref.onHeaderHeightChange,\n    isParentHeaderShown = _ref.isParentHeaderShown,\n    index = _ref.index,\n    layout = _ref.layout,\n    onCloseRoute = _ref.onCloseRoute,\n    onOpenRoute = _ref.onOpenRoute,\n    onPageChangeCancel = _ref.onPageChangeCancel,\n    onPageChangeConfirm = _ref.onPageChangeConfirm,\n    onPageChangeStart = _ref.onPageChangeStart,\n    onGestureCancel = _ref.onGestureCancel,\n    onGestureEnd = _ref.onGestureEnd,\n    onGestureStart = _ref.onGestureStart,\n    onTransitionEnd = _ref.onTransitionEnd,\n    onTransitionStart = _ref.onTransitionStart,\n    renderHeader = _ref.renderHeader,\n    renderScene = _ref.renderScene,\n    safeAreaInsetBottom = _ref.safeAreaInsetBottom,\n    safeAreaInsetLeft = _ref.safeAreaInsetLeft,\n    safeAreaInsetRight = _ref.safeAreaInsetRight,\n    safeAreaInsetTop = _ref.safeAreaInsetTop,\n    scene = _ref.scene,\n    transitionSpec = _ref.transitionSpec;\n  var handleOpen = function handleOpen() {\n    var route = scene.route;\n    onTransitionEnd === null || onTransitionEnd === void 0 ? void 0 : onTransitionEnd({\n      route: route\n    }, false);\n    onOpenRoute({\n      route: route\n    });\n  };\n  var handleClose = function handleClose() {\n    var route = scene.route;\n    onTransitionEnd === null || onTransitionEnd === void 0 ? void 0 : onTransitionEnd({\n      route: route\n    }, true);\n    onCloseRoute({\n      route: route\n    });\n  };\n  var handleGestureBegin = function handleGestureBegin() {\n    var route = scene.route;\n    onPageChangeStart === null || onPageChangeStart === void 0 ? void 0 : onPageChangeStart();\n    onGestureStart === null || onGestureStart === void 0 ? void 0 : onGestureStart({\n      route: route\n    });\n  };\n  var handleGestureCanceled = function handleGestureCanceled() {\n    var route = scene.route;\n    onPageChangeCancel === null || onPageChangeCancel === void 0 ? void 0 : onPageChangeCancel();\n    onGestureCancel === null || onGestureCancel === void 0 ? void 0 : onGestureCancel({\n      route: route\n    });\n  };\n  var handleGestureEnd = function handleGestureEnd() {\n    var route = scene.route;\n    onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd({\n      route: route\n    });\n  };\n  var handleTransition = function handleTransition(_ref2) {\n    var closing = _ref2.closing,\n      gesture = _ref2.gesture;\n    var route = scene.route;\n    if (!gesture) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(true);\n    } else if (active && closing) {\n      onPageChangeConfirm === null || onPageChangeConfirm === void 0 ? void 0 : onPageChangeConfirm(false);\n    } else {\n      onPageChangeCancel === null || onPageChangeCancel === void 0 ? void 0 : onPageChangeCancel();\n    }\n    onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n      route: route\n    }, closing);\n  };\n  var insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft\n  };\n  var _useTheme = (0, _native.useTheme)(),\n    colors = _useTheme.colors;\n  var _React$useState = React.useState('box-none'),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    pointerEvents = _React$useState2[0],\n    setPointerEvents = _React$useState2[1];\n  React.useEffect(function () {\n    var _scene$progress$next, _scene$progress$next$;\n    var listener = (_scene$progress$next = scene.progress.next) === null || _scene$progress$next === void 0 ? void 0 : (_scene$progress$next$ = _scene$progress$next.addListener) === null || _scene$progress$next$ === void 0 ? void 0 : _scene$progress$next$.call(_scene$progress$next, function (_ref3) {\n      var value = _ref3.value;\n      setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n    });\n    return function () {\n      if (listener) {\n        var _scene$progress$next2, _scene$progress$next3;\n        (_scene$progress$next2 = scene.progress.next) === null || _scene$progress$next2 === void 0 ? void 0 : (_scene$progress$next3 = _scene$progress$next2.removeListener) === null || _scene$progress$next3 === void 0 ? void 0 : _scene$progress$next3.call(_scene$progress$next2, listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n  var isCurrentHeaderShown = headerMode !== 'none' && headerShown !== false;\n  var previousScene = getPreviousScene({\n    route: scene.route\n  });\n  return React.createElement(_Card.default, {\n    index: index,\n    gestureDirection: gestureDirection,\n    layout: layout,\n    insets: insets,\n    gesture: gesture,\n    current: scene.progress.current,\n    next: scene.progress.next,\n    closing: closing,\n    onOpen: handleOpen,\n    onClose: handleClose,\n    overlay: cardOverlay,\n    overlayEnabled: cardOverlayEnabled,\n    shadowEnabled: cardShadowEnabled,\n    onTransition: handleTransition,\n    onGestureBegin: handleGestureBegin,\n    onGestureCanceled: handleGestureCanceled,\n    onGestureEnd: handleGestureEnd,\n    gestureEnabled: gestureEnabled,\n    gestureResponseDistance: gestureResponseDistance,\n    gestureVelocityImpact: gestureVelocityImpact,\n    transitionSpec: transitionSpec,\n    styleInterpolator: cardStyleInterpolator,\n    accessibilityElementsHidden: !focused,\n    importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n    pointerEvents: active ? 'box-none' : pointerEvents,\n    pageOverflowEnabled: headerMode === 'screen' && mode === 'card',\n    containerStyle: hasAbsoluteHeader ? {\n      marginTop: headerHeight\n    } : null,\n    contentStyle: [{\n      backgroundColor: colors.background\n    }, cardStyle],\n    style: [{\n      overflow: active ? undefined : 'hidden'\n    }, _reactNative.StyleSheet.absoluteFill]\n  }, React.createElement(_reactNative.View, {\n    style: styles.container\n  }, React.createElement(_reactNative.View, {\n    style: styles.scene\n  }, React.createElement(_PreviousSceneContext.default.Provider, {\n    value: previousScene\n  }, React.createElement(_HeaderShownContext.default.Provider, {\n    value: isParentHeaderShown || isCurrentHeaderShown\n  }, React.createElement(_HeaderHeightContext.default.Provider, {\n    value: headerHeight\n  }, renderScene({\n    route: scene.route\n  }))))), headerMode === 'screen' ? renderHeader({\n    mode: 'screen',\n    layout: layout,\n    insets: insets,\n    scenes: [previousScene, scene],\n    getPreviousScene: getPreviousScene,\n    getFocusedRoute: getFocusedRoute,\n    gestureDirection: gestureDirection,\n    styleInterpolator: headerStyleInterpolator,\n    onContentHeightChange: onHeaderHeightChange\n  }) : null));\n}\nvar _default = React.memo(CardContainer);\nexports.default = _default;\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse'\n  },\n  scene: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_native","_Card","_interopRequireDefault","_HeaderHeightContext","_HeaderShownContext","_PreviousSceneContext","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","EPSILON","CardContainer","_ref","active","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","closing","gesture","focused","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","getPreviousScene","getFocusedRoute","mode","headerMode","headerShown","headerStyleInterpolator","hasAbsoluteHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","index","layout","onCloseRoute","onOpenRoute","onPageChangeCancel","onPageChangeConfirm","onPageChangeStart","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","transitionSpec","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransition","_ref2","insets","top","right","bottom","left","_useTheme","useTheme","colors","_React$useState","useState","_React$useState2","_slicedToArray2","pointerEvents","setPointerEvents","useEffect","_scene$progress$next","_scene$progress$next$","listener","progress","next","addListener","_ref3","value","_scene$progress$next2","_scene$progress$next3","removeListener","isCurrentHeaderShown","previousScene","createElement","Card","current","onOpen","onClose","overlay","overlayEnabled","shadowEnabled","onTransition","onGestureBegin","onGestureCanceled","styleInterpolator","accessibilityElementsHidden","importantForAccessibility","pageOverflowEnabled","containerStyle","marginTop","contentStyle","backgroundColor","background","style","overflow","undefined","StyleSheet","absoluteFill","View","styles","container","PreviousSceneContext","Provider","HeaderShownContext","HeaderHeightContext","scenes","onContentHeightChange","_default","memo","exports","create","flex","flexDirection"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\@react-navigation\\stack\\lib\\module\\views\\Stack\\CardContainer.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport { Route, useTheme } from '@react-navigation/native';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\nimport HeaderHeightContext from '../../utils/HeaderHeightContext';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\nimport PreviousSceneContext from '../../utils/PreviousSceneContext';\nimport type {\n  Scene,\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  TransitionPreset,\n} from '../../types';\n\ntype Props = TransitionPreset & {\n  index: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  scene: Scene<Route<string>>;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  cardOverlay?: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  cardOverlayEnabled?: boolean;\n  cardShadowEnabled?: boolean;\n  cardStyle?: StyleProp<ViewStyle>;\n  getPreviousScene: (props: {\n    route: Route<string>;\n  }) => Scene<Route<string>> | undefined;\n  getFocusedRoute: () => Route<string>;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart?: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd?: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: (force: boolean) => void;\n  onPageChangeCancel?: () => void;\n  onGestureStart?: (props: { route: Route<string> }) => void;\n  onGestureEnd?: (props: { route: Route<string> }) => void;\n  onGestureCancel?: (props: { route: Route<string> }) => void;\n  gestureEnabled?: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact?: number;\n  mode: StackCardMode;\n  headerMode: StackHeaderMode;\n  headerShown: boolean;\n  hasAbsoluteHeader: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  isParentHeaderShown: boolean;\n};\n\nconst EPSILON = 0.1;\n\nfunction CardContainer({\n  active,\n  cardOverlay,\n  cardOverlayEnabled,\n  cardShadowEnabled,\n  cardStyle,\n  cardStyleInterpolator,\n  closing,\n  gesture,\n  focused,\n  gestureDirection,\n  gestureEnabled,\n  gestureResponseDistance,\n  gestureVelocityImpact,\n  getPreviousScene,\n  getFocusedRoute,\n  mode,\n  headerMode,\n  headerShown,\n  headerStyleInterpolator,\n  hasAbsoluteHeader,\n  headerHeight,\n  onHeaderHeightChange,\n  isParentHeaderShown,\n  index,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onPageChangeCancel,\n  onPageChangeConfirm,\n  onPageChangeStart,\n  onGestureCancel,\n  onGestureEnd,\n  onGestureStart,\n  onTransitionEnd,\n  onTransitionStart,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n  transitionSpec,\n}: Props) {\n  const handleOpen = () => {\n    const { route } = scene;\n\n    onTransitionEnd?.({ route }, false);\n    onOpenRoute({ route });\n  };\n\n  const handleClose = () => {\n    const { route } = scene;\n\n    onTransitionEnd?.({ route }, true);\n    onCloseRoute({ route });\n  };\n\n  const handleGestureBegin = () => {\n    const { route } = scene;\n\n    onPageChangeStart?.();\n    onGestureStart?.({ route });\n  };\n\n  const handleGestureCanceled = () => {\n    const { route } = scene;\n\n    onPageChangeCancel?.();\n    onGestureCancel?.({ route });\n  };\n\n  const handleGestureEnd = () => {\n    const { route } = scene;\n\n    onGestureEnd?.({ route });\n  };\n\n  const handleTransition = ({\n    closing,\n    gesture,\n  }: {\n    closing: boolean;\n    gesture: boolean;\n  }) => {\n    const { route } = scene;\n\n    if (!gesture) {\n      onPageChangeConfirm?.(true);\n    } else if (active && closing) {\n      onPageChangeConfirm?.(false);\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  const [pointerEvents, setPointerEvents] = React.useState<'box-none' | 'none'>(\n    'box-none'\n  );\n\n  React.useEffect(() => {\n    // @ts-expect-error: AnimatedInterpolation optionally has addListener, but the type defs don't think so\n    const listener = scene.progress.next?.addListener?.(\n      ({ value }: { value: number }) => {\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n      }\n    );\n\n    return () => {\n      if (listener) {\n        // @ts-expect-error: AnimatedInterpolation optionally has removedListener, but the type defs don't think so\n        scene.progress.next?.removeListener?.(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n\n  const isCurrentHeaderShown = headerMode !== 'none' && headerShown !== false;\n  const previousScene = getPreviousScene({ route: scene.route });\n\n  return (\n    <Card\n      index={index}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlay={cardOverlay}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransition={handleTransition}\n      onGestureBegin={handleGestureBegin}\n      onGestureCanceled={handleGestureCanceled}\n      onGestureEnd={handleGestureEnd}\n      gestureEnabled={gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents={active ? 'box-none' : pointerEvents}\n      pageOverflowEnabled={headerMode === 'screen' && mode === 'card'}\n      containerStyle={hasAbsoluteHeader ? { marginTop: headerHeight } : null}\n      contentStyle={[{ backgroundColor: colors.background }, cardStyle]}\n      style={[\n        {\n          // This is necessary to avoid unfocused larger pages increasing scroll area\n          // The issue can be seen on the web when a smaller screen is pushed over a larger one\n          overflow: active ? undefined : 'hidden',\n        },\n        StyleSheet.absoluteFill,\n      ]}\n    >\n      <View style={styles.container}>\n        <View style={styles.scene}>\n          <PreviousSceneContext.Provider value={previousScene}>\n            <HeaderShownContext.Provider\n              value={isParentHeaderShown || isCurrentHeaderShown}\n            >\n              <HeaderHeightContext.Provider value={headerHeight}>\n                {renderScene({ route: scene.route })}\n              </HeaderHeightContext.Provider>\n            </HeaderShownContext.Provider>\n          </PreviousSceneContext.Provider>\n        </View>\n        {headerMode === 'screen'\n          ? renderHeader({\n              mode: 'screen',\n              layout,\n              insets,\n              scenes: [previousScene, scene],\n              getPreviousScene,\n              getFocusedRoute,\n              gestureDirection,\n              styleInterpolator: headerStyleInterpolator,\n              onContentHeightChange: onHeaderHeightChange,\n            })\n          : null}\n      </View>\n    </Card>\n  );\n}\n\nexport default React.memo(CardContainer);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}