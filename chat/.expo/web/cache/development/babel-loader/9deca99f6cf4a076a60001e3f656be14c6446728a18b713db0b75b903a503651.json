{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _State = require(\"../../State\");\nvar _interfaces = require(\"../interfaces\");\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\nvar _excluded = [\"enabled\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty3.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar DEFAULT_MAX_DURATION_MS = 500;\nvar DEFAULT_MAX_DELAY_MS = 500;\nvar DEFAULT_NUMBER_OF_TAPS = 1;\nvar DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\nvar TapGestureHandler = function (_GestureHandler) {\n  (0, _inherits2.default)(TapGestureHandler, _GestureHandler);\n  var _super = _createSuper(TapGestureHandler);\n  function TapGestureHandler() {\n    var _this;\n    (0, _classCallCheck2.default)(this, TapGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"maxDeltaX\", Number.MIN_SAFE_INTEGER);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"maxDeltaY\", Number.MIN_SAFE_INTEGER);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"maxDistSq\", Number.MIN_SAFE_INTEGER);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"maxDurationMs\", DEFAULT_MAX_DURATION_MS);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"maxDelayMs\", DEFAULT_MAX_DELAY_MS);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"numberOfTaps\", DEFAULT_NUMBER_OF_TAPS);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"minNumberOfPointers\", DEFAULT_MIN_NUMBER_OF_POINTERS);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"currentMaxNumberOfPointers\", 1);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"startX\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"startY\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"offsetX\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"offsetY\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"lastX\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"lastY\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"waitTimeout\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"delayTimeout\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"tapsSoFar\", 0);\n    return _this;\n  }\n  (0, _createClass2.default)(TapGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n      if (this.config.numberOfTaps !== undefined) {\n        this.numberOfTaps = this.config.numberOfTaps;\n      }\n      if (this.config.maxDurationMs !== undefined) {\n        this.maxDurationMs = this.config.maxDurationMs;\n      }\n      if (this.config.maxDelayMs !== undefined) {\n        this.maxDelayMs = this.config.maxDelayMs;\n      }\n      if (this.config.maxDeltaX !== undefined) {\n        this.maxDeltaX = this.config.maxDeltaX;\n      }\n      if (this.config.maxDeltaY !== undefined) {\n        this.maxDeltaY = this.config.maxDeltaY;\n      }\n      if (this.config.maxDist !== undefined) {\n        this.maxDistSq = this.config.maxDist * this.config.maxDist;\n      }\n      if (this.config.minPointers !== undefined) {\n        this.minNumberOfPointers = this.config.minPointers;\n      }\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"resetConfig\", this).call(this);\n      this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n      this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n      this.maxDistSq = Number.MIN_SAFE_INTEGER;\n      this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n      this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n      this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n      this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      var rect = this.view.getBoundingClientRect();\n      return {\n        x: this.tracker.getLastAvgX() - rect.left,\n        y: this.tracker.getLastAvgY() - rect.top,\n        absoluteX: this.tracker.getLastAvgX(),\n        absoluteY: this.tracker.getLastAvgY()\n      };\n    }\n  }, {\n    key: \"clearTimeouts\",\n    value: function clearTimeouts() {\n      clearTimeout(this.waitTimeout);\n      clearTimeout(this.delayTimeout);\n    }\n  }, {\n    key: \"startTap\",\n    value: function startTap() {\n      var _this2 = this;\n      this.clearTimeouts();\n      this.waitTimeout = setTimeout(function () {\n        return _this2.fail();\n      }, this.maxDurationMs);\n    }\n  }, {\n    key: \"endTap\",\n    value: function endTap() {\n      var _this3 = this;\n      this.clearTimeouts();\n      if (++this.tapsSoFar === this.numberOfTaps && this.currentMaxNumberOfPointers >= this.minNumberOfPointers) {\n        this.activate();\n      } else {\n        this.delayTimeout = setTimeout(function () {\n          return _this3.fail();\n        }, this.maxDelayMs);\n      }\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n      this.trySettingPosition(event);\n      this.startX = event.x;\n      this.startY = event.y;\n      this.lastX = event.x;\n      this.lastY = event.y;\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"onPointerAdd\", this).call(this, event);\n      this.tracker.addToTracker(event);\n      this.trySettingPosition(event);\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY - this.startY;\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.startX = this.tracker.getLastAvgX();\n      this.startY = this.tracker.getLastAvgY();\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.tracker.removeFromTracker(event.pointerId);\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"onPointerRemove\", this).call(this, event);\n      this.tracker.removeFromTracker(event.pointerId);\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY = this.startY;\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n      this.updateState(event);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.trySettingPosition(event);\n      this.tracker.track(event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.updateState(event);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.trySettingPosition(event);\n      this.tracker.track(event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.updateState(event);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"onPointerCancel\", this).call(this, event);\n      this.tracker.resetTracker();\n      this.fail();\n    }\n  }, {\n    key: \"updateState\",\n    value: function updateState(event) {\n      if (this.currentMaxNumberOfPointers < this.tracker.getTrackedPointersCount()) {\n        this.currentMaxNumberOfPointers = this.tracker.getTrackedPointersCount();\n      }\n      if (this.shouldFail()) {\n        this.fail();\n        return;\n      }\n      switch (this.currentState) {\n        case _State.State.UNDETERMINED:\n          if (event.eventType === _interfaces.EventTypes.DOWN) {\n            this.begin();\n          }\n          this.startTap();\n          break;\n        case _State.State.BEGAN:\n          if (event.eventType === _interfaces.EventTypes.UP) {\n            this.endTap();\n          }\n          if (event.eventType === _interfaces.EventTypes.DOWN) {\n            this.startTap();\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: \"trySettingPosition\",\n    value: function trySettingPosition(event) {\n      if (this.currentState !== _State.State.UNDETERMINED) {\n        return;\n      }\n      this.offsetX = 0;\n      this.offsetY = 0;\n      this.startX = event.x;\n      this.startY = event.y;\n    }\n  }, {\n    key: \"shouldFail\",\n    value: function shouldFail() {\n      var dx = this.lastX - this.startX + this.offsetX;\n      if (this.maxDeltaX !== Number.MIN_SAFE_INTEGER && Math.abs(dx) > this.maxDeltaX) {\n        return true;\n      }\n      var dy = this.lastY - this.startY + this.offsetY;\n      if (this.maxDeltaY !== Number.MIN_SAFE_INTEGER && Math.abs(dy) > this.maxDeltaY) {\n        return true;\n      }\n      var distSq = dy * dy + dx * dx;\n      return this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(TapGestureHandler.prototype), \"activate\", this).call(this);\n      this.end();\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.resetProgress();\n      this.clearTimeouts();\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      this.clearTimeouts();\n      this.tapsSoFar = 0;\n      this.currentMaxNumberOfPointers = 0;\n    }\n  }]);\n  return TapGestureHandler;\n}(_GestureHandler2.default);\nexports.default = TapGestureHandler;","map":{"version":3,"names":["_State","require","_interfaces","_GestureHandler2","_interopRequireDefault","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty3","default","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","DEFAULT_MAX_DURATION_MS","DEFAULT_MAX_DELAY_MS","DEFAULT_NUMBER_OF_TAPS","DEFAULT_MIN_NUMBER_OF_POINTERS","TapGestureHandler","_GestureHandler","_inherits2","_super","_this","_classCallCheck2","_len","args","Array","_key","concat","_defineProperty","_assertThisInitialized2","Number","MIN_SAFE_INTEGER","_createClass2","value","init","ref","propsRef","_get2","updateGestureConfig","_ref","_ref$enabled","enabled","props","_objectWithoutProperties2","config","numberOfTaps","undefined","maxDurationMs","maxDelayMs","maxDeltaX","maxDeltaY","maxDist","maxDistSq","minPointers","minNumberOfPointers","resetConfig","transformNativeEvent","rect","view","getBoundingClientRect","x","tracker","getLastAvgX","left","y","getLastAvgY","top","absoluteX","absoluteY","clearTimeouts","clearTimeout","waitTimeout","delayTimeout","startTap","_this2","setTimeout","fail","endTap","_this3","tapsSoFar","currentMaxNumberOfPointers","activate","onPointerDown","event","addToTracker","trySettingPosition","startX","startY","lastX","lastY","updateState","onPointerAdd","offsetX","offsetY","onPointerUp","removeFromTracker","pointerId","onPointerRemove","onPointerMove","track","onPointerOutOfBounds","onPointerCancel","resetTracker","getTrackedPointersCount","shouldFail","currentState","State","UNDETERMINED","eventType","EventTypes","DOWN","begin","BEGAN","UP","dx","Math","abs","dy","distSq","end","onCancel","resetProgress","GestureHandler","exports"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\TapGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config, EventTypes } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MAX_DURATION_MS = 500;\nconst DEFAULT_MAX_DELAY_MS = 500;\nconst DEFAULT_NUMBER_OF_TAPS = 1;\nconst DEFAULT_MIN_NUMBER_OF_POINTERS = 1;\n\nexport default class TapGestureHandler extends GestureHandler {\n  private maxDeltaX = Number.MIN_SAFE_INTEGER;\n  private maxDeltaY = Number.MIN_SAFE_INTEGER;\n  private maxDistSq = Number.MIN_SAFE_INTEGER;\n  private maxDurationMs = DEFAULT_MAX_DURATION_MS;\n  private maxDelayMs = DEFAULT_MAX_DELAY_MS;\n\n  private numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n  private minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  private currentMaxNumberOfPointers = 1;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  private waitTimeout: number | undefined;\n  private delayTimeout: number | undefined;\n\n  private tapsSoFar = 0;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    if (this.config.numberOfTaps !== undefined) {\n      this.numberOfTaps = this.config.numberOfTaps;\n    }\n\n    if (this.config.maxDurationMs !== undefined) {\n      this.maxDurationMs = this.config.maxDurationMs;\n    }\n\n    if (this.config.maxDelayMs !== undefined) {\n      this.maxDelayMs = this.config.maxDelayMs;\n    }\n\n    if (this.config.maxDeltaX !== undefined) {\n      this.maxDeltaX = this.config.maxDeltaX;\n    }\n\n    if (this.config.maxDeltaY !== undefined) {\n      this.maxDeltaY = this.config.maxDeltaY;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minNumberOfPointers = this.config.minPointers;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.maxDeltaX = Number.MIN_SAFE_INTEGER;\n    this.maxDeltaY = Number.MIN_SAFE_INTEGER;\n    this.maxDistSq = Number.MIN_SAFE_INTEGER;\n    this.maxDurationMs = DEFAULT_MAX_DURATION_MS;\n    this.maxDelayMs = DEFAULT_MAX_DELAY_MS;\n    this.numberOfTaps = DEFAULT_NUMBER_OF_TAPS;\n    this.minNumberOfPointers = DEFAULT_MIN_NUMBER_OF_POINTERS;\n  }\n\n  protected transformNativeEvent() {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return {\n      x: this.tracker.getLastAvgX() - rect.left,\n      y: this.tracker.getLastAvgY() - rect.top,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY(),\n    };\n  }\n\n  private clearTimeouts(): void {\n    clearTimeout(this.waitTimeout);\n    clearTimeout(this.delayTimeout);\n  }\n\n  private startTap(): void {\n    this.clearTimeouts();\n\n    this.waitTimeout = setTimeout(() => this.fail(), this.maxDurationMs);\n  }\n\n  private endTap(): void {\n    this.clearTimeouts();\n\n    if (\n      ++this.tapsSoFar === this.numberOfTaps &&\n      this.currentMaxNumberOfPointers >= this.minNumberOfPointers\n    ) {\n      this.activate();\n    } else {\n      this.delayTimeout = setTimeout(() => this.fail(), this.maxDelayMs);\n    }\n  }\n\n  //Handling Events\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n\n    this.trySettingPosition(event);\n\n    this.startX = event.x;\n    this.startY = event.y;\n\n    this.lastX = event.x;\n    this.lastY = event.y;\n\n    this.updateState(event);\n  }\n\n  protected onPointerAdd(event: AdaptedEvent): void {\n    super.onPointerAdd(event);\n    this.tracker.addToTracker(event);\n    this.trySettingPosition(event);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.tracker.getLastAvgX();\n    this.startY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.updateState(event);\n  }\n\n  protected onPointerRemove(event: AdaptedEvent): void {\n    super.onPointerRemove(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY = this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    this.updateState(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.trySettingPosition(event);\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.updateState(event);\n\n    super.onPointerOutOfBounds(event);\n  }\n\n  protected onPointerCancel(event: AdaptedEvent): void {\n    super.onPointerCancel(event);\n    this.tracker.resetTracker();\n    this.fail();\n  }\n\n  private updateState(event: AdaptedEvent): void {\n    if (\n      this.currentMaxNumberOfPointers < this.tracker.getTrackedPointersCount()\n    ) {\n      this.currentMaxNumberOfPointers = this.tracker.getTrackedPointersCount();\n    }\n\n    if (this.shouldFail()) {\n      this.fail();\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.UNDETERMINED:\n        if (event.eventType === EventTypes.DOWN) {\n          this.begin();\n        }\n        this.startTap();\n        break;\n      case State.BEGAN:\n        if (event.eventType === EventTypes.UP) {\n          this.endTap();\n        }\n        if (event.eventType === EventTypes.DOWN) {\n          this.startTap();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  private trySettingPosition(event: AdaptedEvent): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.offsetX = 0;\n    this.offsetY = 0;\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private shouldFail(): boolean {\n    const dx = this.lastX - this.startX + this.offsetX;\n\n    if (\n      this.maxDeltaX !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dx) > this.maxDeltaX\n    ) {\n      return true;\n    }\n\n    const dy = this.lastY - this.startY + this.offsetY;\n    if (\n      this.maxDeltaY !== Number.MIN_SAFE_INTEGER &&\n      Math.abs(dy) > this.maxDeltaY\n    ) {\n      return true;\n    }\n\n    const distSq = dy * dy + dx * dx;\n\n    return (\n      this.maxDistSq !== Number.MIN_SAFE_INTEGER && distSq > this.maxDistSq\n    );\n  }\n\n  public activate(): void {\n    super.activate();\n\n    this.end();\n  }\n\n  protected onCancel(): void {\n    this.resetProgress();\n    this.clearTimeouts();\n  }\n\n  protected resetProgress(): void {\n    this.clearTimeouts();\n    this.tapsSoFar = 0;\n    this.currentMaxNumberOfPointers = 0;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}