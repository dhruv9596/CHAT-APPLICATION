{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Gesture = exports.ContinousBaseGesture = exports.CALLBACK_TYPE = exports.BaseGesture = void 0;\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _handlersRegistry = require(\"../handlersRegistry\");\nvar _utils = require(\"../../utils\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty3.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar CALLBACK_TYPE = {\n  UNDEFINED: 0,\n  BEGAN: 1,\n  START: 2,\n  UPDATE: 3,\n  CHANGE: 4,\n  END: 5,\n  FINALIZE: 6,\n  TOUCHES_DOWN: 7,\n  TOUCHES_MOVE: 8,\n  TOUCHES_UP: 9,\n  TOUCHES_CANCELLED: 10\n};\nexports.CALLBACK_TYPE = CALLBACK_TYPE;\nvar Gesture = (0, _createClass2.default)(function Gesture() {\n  (0, _classCallCheck2.default)(this, Gesture);\n});\nexports.Gesture = Gesture;\nvar nextGestureId = 0;\nvar BaseGesture = function (_Gesture) {\n  (0, _inherits2.default)(BaseGesture, _Gesture);\n  var _super = _createSuper(BaseGesture);\n  function BaseGesture() {\n    var _this;\n    (0, _classCallCheck2.default)(this, BaseGesture);\n    _this = _super.call(this);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"gestureId\", -1);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handlerTag\", -1);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handlerName\", '');\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"config\", {});\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handlers\", {\n      gestureId: -1,\n      handlerTag: -1,\n      isWorklet: []\n    });\n    _this.gestureId = nextGestureId++;\n    _this.handlers.gestureId = _this.gestureId;\n    return _this;\n  }\n  (0, _createClass2.default)(BaseGesture, [{\n    key: \"addDependency\",\n    value: function addDependency(key, gesture) {\n      var value = this.config[key];\n      this.config[key] = value ? Array().concat(value, gesture) : [gesture];\n    }\n  }, {\n    key: \"withRef\",\n    value: function withRef(ref) {\n      this.config.ref = ref;\n      return this;\n    }\n  }, {\n    key: \"isWorklet\",\n    value: function isWorklet(callback) {\n      return callback.__workletHash !== undefined;\n    }\n  }, {\n    key: \"onBegin\",\n    value: function onBegin(callback) {\n      this.handlers.onBegin = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onStart\",\n    value: function onStart(callback) {\n      this.handlers.onStart = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(callback) {\n      this.handlers.onEnd = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onFinalize\",\n    value: function onFinalize(callback) {\n      this.handlers.onFinalize = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesDown\",\n    value: function onTouchesDown(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesDown = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesMove\",\n    value: function onTouchesMove(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesMove = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesUp\",\n    value: function onTouchesUp(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesUp = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onTouchesCancelled\",\n    value: function onTouchesCancelled(callback) {\n      this.config.needsPointerData = true;\n      this.handlers.onTouchesCancelled = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"enabled\",\n    value: function enabled(_enabled) {\n      this.config.enabled = _enabled;\n      return this;\n    }\n  }, {\n    key: \"shouldCancelWhenOutside\",\n    value: function shouldCancelWhenOutside(value) {\n      this.config.shouldCancelWhenOutside = value;\n      return this;\n    }\n  }, {\n    key: \"hitSlop\",\n    value: function hitSlop(_hitSlop) {\n      this.config.hitSlop = _hitSlop;\n      return this;\n    }\n  }, {\n    key: \"runOnJS\",\n    value: function runOnJS(_runOnJS) {\n      this.config.runOnJS = _runOnJS;\n      return this;\n    }\n  }, {\n    key: \"simultaneousWithExternalGesture\",\n    value: function simultaneousWithExternalGesture() {\n      for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n        gestures[_key] = arguments[_key];\n      }\n      for (var _i = 0, _gestures = gestures; _i < _gestures.length; _i++) {\n        var gesture = _gestures[_i];\n        this.addDependency('simultaneousWith', gesture);\n      }\n      return this;\n    }\n  }, {\n    key: \"requireExternalGestureToFail\",\n    value: function requireExternalGestureToFail() {\n      for (var _len2 = arguments.length, gestures = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        gestures[_key2] = arguments[_key2];\n      }\n      for (var _i2 = 0, _gestures2 = gestures; _i2 < _gestures2.length; _i2++) {\n        var gesture = _gestures2[_i2];\n        this.addDependency('requireToFail', gesture);\n      }\n      return this;\n    }\n  }, {\n    key: \"withTestId\",\n    value: function withTestId(id) {\n      this.config.testId = id;\n      return this;\n    }\n  }, {\n    key: \"cancelsTouchesInView\",\n    value: function cancelsTouchesInView(value) {\n      this.config.cancelsTouchesInView = value;\n      return this;\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.handlerTag = (0, _handlersRegistry.getNextHandlerTag)();\n      this.handlers = _objectSpread(_objectSpread({}, this.handlers), {}, {\n        handlerTag: this.handlerTag\n      });\n      if (this.config.ref) {\n        this.config.ref.current = this;\n      }\n    }\n  }, {\n    key: \"toGestureArray\",\n    value: function toGestureArray() {\n      return [this];\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare() {}\n  }, {\n    key: \"shouldUseReanimated\",\n    get: function get() {\n      return this.config.runOnJS !== true && !this.handlers.isWorklet.includes(false) && !(0, _utils.isRemoteDebuggingEnabled)();\n    }\n  }]);\n  return BaseGesture;\n}(Gesture);\nexports.BaseGesture = BaseGesture;\nvar ContinousBaseGesture = function (_BaseGesture) {\n  (0, _inherits2.default)(ContinousBaseGesture, _BaseGesture);\n  var _super2 = _createSuper(ContinousBaseGesture);\n  function ContinousBaseGesture() {\n    (0, _classCallCheck2.default)(this, ContinousBaseGesture);\n    return _super2.apply(this, arguments);\n  }\n  (0, _createClass2.default)(ContinousBaseGesture, [{\n    key: \"onUpdate\",\n    value: function onUpdate(callback) {\n      this.handlers.onUpdate = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(callback) {\n      this.handlers.onChange = callback;\n      this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n      return this;\n    }\n  }, {\n    key: \"manualActivation\",\n    value: function manualActivation(_manualActivation) {\n      this.config.manualActivation = _manualActivation;\n      return this;\n    }\n  }]);\n  return ContinousBaseGesture;\n}(BaseGesture);\nexports.ContinousBaseGesture = ContinousBaseGesture;","map":{"version":3,"names":["_handlersRegistry","require","_utils","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty3","default","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","CALLBACK_TYPE","UNDEFINED","BEGAN","START","UPDATE","CHANGE","END","FINALIZE","TOUCHES_DOWN","TOUCHES_MOVE","TOUCHES_UP","TOUCHES_CANCELLED","Gesture","_createClass2","_classCallCheck2","exports","nextGestureId","BaseGesture","_Gesture","_inherits2","_super","_this","_defineProperty","_assertThisInitialized2","gestureId","handlerTag","isWorklet","handlers","value","addDependency","gesture","config","Array","concat","withRef","ref","callback","__workletHash","undefined","onBegin","onStart","onEnd","onFinalize","onTouchesDown","needsPointerData","onTouchesMove","onTouchesUp","onTouchesCancelled","enabled","shouldCancelWhenOutside","hitSlop","runOnJS","simultaneousWithExternalGesture","_len","gestures","_key","_i","_gestures","requireExternalGestureToFail","_len2","_key2","_i2","_gestures2","withTestId","id","testId","cancelsTouchesInView","initialize","getNextHandlerTag","current","toGestureArray","prepare","get","includes","isRemoteDebuggingEnabled","ContinousBaseGesture","_BaseGesture","_super2","onUpdate","onChange","manualActivation"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\gesture.ts"],"sourcesContent":["import { FlingGestureHandlerEventPayload } from '../FlingGestureHandler';\nimport { ForceTouchGestureHandlerEventPayload } from '../ForceTouchGestureHandler';\nimport {\n  HitSlop,\n  CommonGestureConfig,\n  GestureTouchEvent,\n  GestureStateChangeEvent,\n  GestureUpdateEvent,\n} from '../gestureHandlerCommon';\nimport { getNextHandlerTag } from '../handlersRegistry';\nimport { GestureStateManagerType } from './gestureStateManager';\nimport { LongPressGestureHandlerEventPayload } from '../LongPressGestureHandler';\nimport { PanGestureHandlerEventPayload } from '../PanGestureHandler';\nimport { PinchGestureHandlerEventPayload } from '../PinchGestureHandler';\nimport { RotationGestureHandlerEventPayload } from '../RotationGestureHandler';\nimport { TapGestureHandlerEventPayload } from '../TapGestureHandler';\nimport { NativeViewGestureHandlerPayload } from '../NativeViewGestureHandler';\nimport { isRemoteDebuggingEnabled } from '../../utils';\n\nexport type GestureType =\n  | BaseGesture<Record<string, unknown>>\n  | BaseGesture<Record<string, never>>\n  | BaseGesture<TapGestureHandlerEventPayload>\n  | BaseGesture<PanGestureHandlerEventPayload>\n  | BaseGesture<LongPressGestureHandlerEventPayload>\n  | BaseGesture<RotationGestureHandlerEventPayload>\n  | BaseGesture<PinchGestureHandlerEventPayload>\n  | BaseGesture<FlingGestureHandlerEventPayload>\n  | BaseGesture<ForceTouchGestureHandlerEventPayload>\n  | BaseGesture<NativeViewGestureHandlerPayload>;\n\nexport type GestureRef =\n  | number\n  | GestureType\n  | React.RefObject<GestureType | undefined>\n  | React.RefObject<React.ComponentType | undefined>; // allow adding a ref to a gesture handler\nexport interface BaseGestureConfig\n  extends CommonGestureConfig,\n    Record<string, unknown> {\n  ref?: React.MutableRefObject<GestureType | undefined>;\n  requireToFail?: GestureRef[];\n  simultaneousWith?: GestureRef[];\n  needsPointerData?: boolean;\n  manualActivation?: boolean;\n  runOnJS?: boolean;\n  testId?: string;\n  cancelsTouchesInView?: boolean;\n}\n\ntype TouchEventHandlerType = (\n  event: GestureTouchEvent,\n  stateManager: GestureStateManagerType\n) => void;\n\nexport type HandlerCallbacks<EventPayloadT extends Record<string, unknown>> = {\n  gestureId: number;\n  handlerTag: number;\n  onBegin?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onStart?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onEnd?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onFinalize?: (\n    event: GestureStateChangeEvent<EventPayloadT>,\n    success: boolean\n  ) => void;\n  onUpdate?: (event: GestureUpdateEvent<EventPayloadT>) => void;\n  onChange?: (event: any) => void;\n  onTouchesDown?: TouchEventHandlerType;\n  onTouchesMove?: TouchEventHandlerType;\n  onTouchesUp?: TouchEventHandlerType;\n  onTouchesCancelled?: TouchEventHandlerType;\n  changeEventCalculator?: (\n    current: GestureUpdateEvent<Record<string, unknown>>,\n    previous?: GestureUpdateEvent<Record<string, unknown>>\n  ) => GestureUpdateEvent<Record<string, unknown>>;\n  isWorklet: boolean[];\n};\n\nexport const CALLBACK_TYPE = {\n  UNDEFINED: 0,\n  BEGAN: 1,\n  START: 2,\n  UPDATE: 3,\n  CHANGE: 4,\n  END: 5,\n  FINALIZE: 6,\n  TOUCHES_DOWN: 7,\n  TOUCHES_MOVE: 8,\n  TOUCHES_UP: 9,\n  TOUCHES_CANCELLED: 10,\n} as const;\n\n// Allow using CALLBACK_TYPE as object and type\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type CALLBACK_TYPE = typeof CALLBACK_TYPE[keyof typeof CALLBACK_TYPE];\n\nexport abstract class Gesture {\n  /**\n   * Return array of gestures, providing the same interface for creating and updating\n   * handlers, no matter which object was used to create gesture instance.\n   */\n  abstract toGestureArray(): GestureType[];\n\n  /**\n   * Assign handlerTag to the gesture instance and set ref.current (if a ref is set)\n   */\n  abstract initialize(): void;\n\n  /**\n   * Make sure that values of properties defining relations are arrays. Do any necessary\n   * preprocessing required to configure relations between handlers. Called just before\n   * updating the handler on the native side.\n   */\n  abstract prepare(): void;\n}\n\nlet nextGestureId = 0;\nexport abstract class BaseGesture<\n  EventPayloadT extends Record<string, unknown>\n> extends Gesture {\n  private gestureId = -1;\n  public handlerTag = -1;\n  public handlerName = '';\n  public config: BaseGestureConfig = {};\n  public handlers: HandlerCallbacks<EventPayloadT> = {\n    gestureId: -1,\n    handlerTag: -1,\n    isWorklet: [],\n  };\n\n  constructor() {\n    super();\n\n    // Used to check whether the gesture config has been updated when wrapping it\n    // with `useMemo`. Since every config will have a unique id, when the dependencies\n    // don't change, the config won't be recreated and the id will stay the same.\n    // If the id is different, it means that the config has changed and the gesture\n    // needs to be updated.\n    this.gestureId = nextGestureId++;\n    this.handlers.gestureId = this.gestureId;\n  }\n\n  private addDependency(\n    key: 'simultaneousWith' | 'requireToFail',\n    gesture: Exclude<GestureRef, number>\n  ) {\n    const value = this.config[key];\n    this.config[key] = value\n      ? Array<GestureRef>().concat(value, gesture)\n      : [gesture];\n  }\n\n  withRef(ref: React.MutableRefObject<GestureType | undefined>) {\n    this.config.ref = ref;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  protected isWorklet(callback: Function) {\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    return callback.__workletHash !== undefined;\n  }\n\n  onBegin(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onBegin = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n    return this;\n  }\n\n  onStart(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onStart = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n    return this;\n  }\n\n  onEnd(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onEnd = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n    return this;\n  }\n\n  onFinalize(\n    callback: (\n      event: GestureStateChangeEvent<EventPayloadT>,\n      success: boolean\n    ) => void\n  ) {\n    this.handlers.onFinalize = callback;\n    //@ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onTouchesDown(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesDown = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesMove(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesMove = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesUp(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesUp = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  onTouchesCancelled(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesCancelled = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] =\n      this.isWorklet(callback);\n\n    return this;\n  }\n\n  enabled(enabled: boolean) {\n    this.config.enabled = enabled;\n    return this;\n  }\n\n  shouldCancelWhenOutside(value: boolean) {\n    this.config.shouldCancelWhenOutside = value;\n    return this;\n  }\n\n  hitSlop(hitSlop: HitSlop) {\n    this.config.hitSlop = hitSlop;\n    return this;\n  }\n\n  runOnJS(runOnJS: boolean) {\n    this.config.runOnJS = runOnJS;\n    return this;\n  }\n\n  simultaneousWithExternalGesture(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('simultaneousWith', gesture);\n    }\n    return this;\n  }\n\n  requireExternalGestureToFail(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('requireToFail', gesture);\n    }\n    return this;\n  }\n\n  withTestId(id: string) {\n    this.config.testId = id;\n    return this;\n  }\n\n  cancelsTouchesInView(value: boolean) {\n    this.config.cancelsTouchesInView = value;\n    return this;\n  }\n\n  initialize() {\n    this.handlerTag = getNextHandlerTag();\n\n    this.handlers = { ...this.handlers, handlerTag: this.handlerTag };\n\n    if (this.config.ref) {\n      this.config.ref.current = this as GestureType;\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return [this as GestureType];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  prepare() {}\n\n  get shouldUseReanimated(): boolean {\n    // use Reanimated when runOnJS isn't set explicitly,\n    // and all defined callbacks are worklets,\n    // and remote debugging is disabled\n    return (\n      this.config.runOnJS !== true &&\n      !this.handlers.isWorklet.includes(false) &&\n      !isRemoteDebuggingEnabled()\n    );\n  }\n}\n\nexport abstract class ContinousBaseGesture<\n  EventPayloadT extends Record<string, unknown>,\n  EventChangePayloadT extends Record<string, unknown>\n> extends BaseGesture<EventPayloadT> {\n  onUpdate(callback: (event: GestureUpdateEvent<EventPayloadT>) => void) {\n    this.handlers.onUpdate = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n    return this;\n  }\n\n  onChange(\n    callback: (\n      event: GestureUpdateEvent<EventPayloadT & EventChangePayloadT>\n    ) => void\n  ) {\n    this.handlers.onChange = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n    return this;\n  }\n\n  manualActivation(manualActivation: boolean) {\n    this.config.manualActivation = manualActivation;\n    return this;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}