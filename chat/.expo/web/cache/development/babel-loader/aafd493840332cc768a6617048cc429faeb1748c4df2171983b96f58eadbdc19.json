{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\nvar _native = require(\"@react-navigation/native\");\nvar _GestureHandler = require(\"../GestureHandler\");\nvar _CardStack = _interopRequireDefault(require(\"./CardStack\"));\nvar _KeyboardManager = _interopRequireDefault(require(\"../KeyboardManager\"));\nvar _HeaderContainer = _interopRequireDefault(require(\"../Header/HeaderContainer\"));\nvar _SafeAreaProviderCompat = _interopRequireDefault(require(\"../SafeAreaProviderCompat\"));\nvar _HeaderShownContext = _interopRequireDefault(require(\"../../utils/HeaderShownContext\"));\nvar _excluded = [\"state\", \"navigation\", \"keyboardHandlingEnabled\", \"mode\", \"headerMode\", \"descriptors\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty3.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar GestureHandlerWrapper = _GestureHandler.GestureHandlerRootView !== null && _GestureHandler.GestureHandlerRootView !== void 0 ? _GestureHandler.GestureHandlerRootView : _reactNative.View;\nvar isArrayEqual = function isArrayEqual(a, b) {\n  return a.length === b.length && a.every(function (it, index) {\n    return it === b[index];\n  });\n};\nvar StackView = function (_React$Component) {\n  (0, _inherits2.default)(StackView, _React$Component);\n  var _super = _createSuper(StackView);\n  function StackView() {\n    var _this;\n    (0, _classCallCheck2.default)(this, StackView);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"state\", {\n      routes: [],\n      previousRoutes: [],\n      previousDescriptors: {},\n      openingRouteKeys: [],\n      closingRouteKeys: [],\n      replacingRouteKeys: [],\n      descriptors: {}\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getGesturesEnabled\", function (_ref) {\n      var route = _ref.route;\n      var descriptor = _this.state.descriptors[route.key];\n      if (descriptor) {\n        var _descriptor$options = descriptor.options,\n          gestureEnabled = _descriptor$options.gestureEnabled,\n          animationEnabled = _descriptor$options.animationEnabled;\n        if (animationEnabled === false) {\n          return false;\n        }\n        return gestureEnabled !== false;\n      }\n      return false;\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getPreviousRoute\", function (_ref2) {\n      var route = _ref2.route;\n      var _this$state = _this.state,\n        closingRouteKeys = _this$state.closingRouteKeys,\n        replacingRouteKeys = _this$state.replacingRouteKeys;\n      var routes = _this.state.routes.filter(function (r) {\n        return r.key === route.key || !closingRouteKeys.includes(r.key) && !replacingRouteKeys.includes(r.key);\n      });\n      var index = routes.findIndex(function (r) {\n        return r.key === route.key;\n      });\n      return routes[index - 1];\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderScene\", function (_ref3) {\n      var route = _ref3.route;\n      var descriptor = _this.state.descriptors[route.key] || _this.props.descriptors[route.key];\n      if (!descriptor) {\n        return null;\n      }\n      return descriptor.render();\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"renderHeader\", function (props) {\n      return React.createElement(_HeaderContainer.default, props);\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleOpenRoute\", function (_ref4) {\n      var route = _ref4.route;\n      var _this$props = _this.props,\n        state = _this$props.state,\n        navigation = _this$props.navigation;\n      var _this$state2 = _this.state,\n        closingRouteKeys = _this$state2.closingRouteKeys,\n        replacingRouteKeys = _this$state2.replacingRouteKeys;\n      if (closingRouteKeys.some(function (key) {\n        return key === route.key;\n      }) && replacingRouteKeys.every(function (key) {\n        return key !== route.key;\n      }) && state.routeNames.includes(route.name) && !state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.navigate(route);\n      } else {\n        _this.setState(function (state) {\n          return {\n            routes: state.replacingRouteKeys.length ? state.routes.filter(function (r) {\n              return !state.replacingRouteKeys.includes(r.key);\n            }) : state.routes,\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            replacingRouteKeys: []\n          };\n        });\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleCloseRoute\", function (_ref5) {\n      var route = _ref5.route;\n      var _this$props2 = _this.props,\n        state = _this$props2.state,\n        navigation = _this$props2.navigation;\n      if (state.routes.some(function (r) {\n        return r.key === route.key;\n      })) {\n        navigation.dispatch(_objectSpread(_objectSpread({}, _native.StackActions.pop()), {}, {\n          source: route.key,\n          target: state.key\n        }));\n      } else {\n        _this.setState(function (state) {\n          return {\n            routes: state.routes.filter(function (r) {\n              return r.key !== route.key;\n            }),\n            openingRouteKeys: state.openingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            }),\n            closingRouteKeys: state.closingRouteKeys.filter(function (key) {\n              return key !== route.key;\n            })\n          };\n        });\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleTransitionStart\", function (_ref6, closing) {\n      var route = _ref6.route;\n      return _this.props.navigation.emit({\n        type: 'transitionStart',\n        data: {\n          closing: closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleTransitionEnd\", function (_ref7, closing) {\n      var route = _ref7.route;\n      return _this.props.navigation.emit({\n        type: 'transitionEnd',\n        data: {\n          closing: closing\n        },\n        target: route.key\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleGestureStart\", function (_ref8) {\n      var route = _ref8.route;\n      _this.props.navigation.emit({\n        type: 'gestureStart',\n        target: route.key\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleGestureEnd\", function (_ref9) {\n      var route = _ref9.route;\n      _this.props.navigation.emit({\n        type: 'gestureEnd',\n        target: route.key\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleGestureCancel\", function (_ref10) {\n      var route = _ref10.route;\n      _this.props.navigation.emit({\n        type: 'gestureCancel',\n        target: route.key\n      });\n    });\n    return _this;\n  }\n  (0, _createClass2.default)(StackView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props3 = this.props,\n        state = _this$props3.state,\n        navigation = _this$props3.navigation,\n        keyboardHandlingEnabled = _this$props3.keyboardHandlingEnabled,\n        _this$props3$mode = _this$props3.mode,\n        mode = _this$props3$mode === void 0 ? 'card' : _this$props3$mode,\n        _this$props3$headerMo = _this$props3.headerMode,\n        headerMode = _this$props3$headerMo === void 0 ? mode === 'card' && _reactNative.Platform.OS === 'ios' ? 'float' : 'screen' : _this$props3$headerMo,\n        _ = _this$props3.descriptors,\n        rest = (0, _objectWithoutProperties2.default)(_this$props3, _excluded);\n      var _this$state3 = this.state,\n        routes = _this$state3.routes,\n        descriptors = _this$state3.descriptors,\n        openingRouteKeys = _this$state3.openingRouteKeys,\n        closingRouteKeys = _this$state3.closingRouteKeys;\n      return React.createElement(_native.NavigationHelpersContext.Provider, {\n        value: navigation\n      }, React.createElement(GestureHandlerWrapper, {\n        style: styles.container\n      }, React.createElement(_SafeAreaProviderCompat.default, null, React.createElement(_reactNativeSafeAreaContext.SafeAreaConsumer, null, function (insets) {\n        return React.createElement(_KeyboardManager.default, {\n          enabled: keyboardHandlingEnabled !== false\n        }, function (props) {\n          return React.createElement(_HeaderShownContext.default.Consumer, null, function (isParentHeaderShown) {\n            return React.createElement(_CardStack.default, _extends({\n              mode: mode,\n              insets: insets,\n              isParentHeaderShown: isParentHeaderShown,\n              getPreviousRoute: _this2.getPreviousRoute,\n              getGesturesEnabled: _this2.getGesturesEnabled,\n              routes: routes,\n              openingRouteKeys: openingRouteKeys,\n              closingRouteKeys: closingRouteKeys,\n              onOpenRoute: _this2.handleOpenRoute,\n              onCloseRoute: _this2.handleCloseRoute,\n              onTransitionStart: _this2.handleTransitionStart,\n              onTransitionEnd: _this2.handleTransitionEnd,\n              renderHeader: _this2.renderHeader,\n              renderScene: _this2.renderScene,\n              headerMode: headerMode,\n              state: state,\n              descriptors: descriptors,\n              onGestureStart: _this2.handleGestureStart,\n              onGestureEnd: _this2.handleGestureEnd,\n              onGestureCancel: _this2.handleGestureCancel\n            }, rest, props));\n          });\n        });\n      }))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(props, state) {\n      if ((props.state.routes === state.previousRoutes || isArrayEqual(props.state.routes.map(function (r) {\n        return r.key;\n      }), state.previousRoutes.map(function (r) {\n        return r.key;\n      }))) && state.routes.length) {\n        var _routes = state.routes;\n        var _previousRoutes = state.previousRoutes;\n        var _descriptors = props.descriptors;\n        var previousDescriptors = state.previousDescriptors;\n        if (props.descriptors !== state.previousDescriptors) {\n          _descriptors = state.routes.reduce(function (acc, route) {\n            acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n            return acc;\n          }, {});\n          previousDescriptors = props.descriptors;\n        }\n        if (props.state.routes !== state.previousRoutes) {\n          var map = props.state.routes.reduce(function (acc, route) {\n            acc[route.key] = route;\n            return acc;\n          }, {});\n          _routes = state.routes.map(function (route) {\n            return map[route.key] || route;\n          });\n          _previousRoutes = props.state.routes;\n        }\n        return {\n          routes: _routes,\n          previousRoutes: _previousRoutes,\n          descriptors: _descriptors,\n          previousDescriptors: previousDescriptors\n        };\n      }\n      var routes = props.state.index < props.state.routes.length - 1 ? props.state.routes.slice(0, props.state.index + 1) : props.state.routes;\n      var openingRouteKeys = state.openingRouteKeys,\n        closingRouteKeys = state.closingRouteKeys,\n        replacingRouteKeys = state.replacingRouteKeys,\n        previousRoutes = state.previousRoutes;\n      var previousFocusedRoute = previousRoutes[previousRoutes.length - 1];\n      var nextFocusedRoute = routes[routes.length - 1];\n      var isAnimationEnabled = function isAnimationEnabled(key) {\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return descriptor ? descriptor.options.animationEnabled !== false : true;\n      };\n      var getAnimationTypeForReplace = function getAnimationTypeForReplace(key) {\n        var _descriptor$options$a;\n        var descriptor = props.descriptors[key] || state.descriptors[key];\n        return (_descriptor$options$a = descriptor.options.animationTypeForReplace) !== null && _descriptor$options$a !== void 0 ? _descriptor$options$a : 'push';\n      };\n      if (previousFocusedRoute && previousFocusedRoute.key !== nextFocusedRoute.key) {\n        if (!previousRoutes.some(function (r) {\n          return r.key === nextFocusedRoute.key;\n        })) {\n          if (isAnimationEnabled(nextFocusedRoute.key) && !openingRouteKeys.includes(nextFocusedRoute.key)) {\n            openingRouteKeys = [].concat((0, _toConsumableArray2.default)(openingRouteKeys), [nextFocusedRoute.key]);\n            closingRouteKeys = closingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== nextFocusedRoute.key;\n            });\n            if (!routes.some(function (r) {\n              return r.key === previousFocusedRoute.key;\n            })) {\n              openingRouteKeys = openingRouteKeys.filter(function (key) {\n                return key !== previousFocusedRoute.key;\n              });\n              if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n                closingRouteKeys = [].concat((0, _toConsumableArray2.default)(closingRouteKeys), [previousFocusedRoute.key]);\n                openingRouteKeys = openingRouteKeys.filter(function (key) {\n                  return key !== nextFocusedRoute.key;\n                });\n                routes = [].concat((0, _toConsumableArray2.default)(routes), [previousFocusedRoute]);\n              } else {\n                replacingRouteKeys = [].concat((0, _toConsumableArray2.default)(replacingRouteKeys), [previousFocusedRoute.key]);\n                closingRouteKeys = closingRouteKeys.filter(function (key) {\n                  return key !== previousFocusedRoute.key;\n                });\n                routes = routes.slice();\n                routes.splice(routes.length - 1, 0, previousFocusedRoute);\n              }\n            }\n          }\n        } else if (!routes.some(function (r) {\n          return r.key === previousFocusedRoute.key;\n        })) {\n          if (isAnimationEnabled(previousFocusedRoute.key) && !closingRouteKeys.includes(previousFocusedRoute.key)) {\n            closingRouteKeys = [].concat((0, _toConsumableArray2.default)(closingRouteKeys), [previousFocusedRoute.key]);\n            openingRouteKeys = openingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            replacingRouteKeys = replacingRouteKeys.filter(function (key) {\n              return key !== previousFocusedRoute.key;\n            });\n            routes = [].concat((0, _toConsumableArray2.default)(routes), [previousFocusedRoute]);\n          }\n        } else {}\n      } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n        var _routes2;\n        routes = routes.slice();\n        (_routes2 = routes).splice.apply(_routes2, [routes.length - 1, 0].concat((0, _toConsumableArray2.default)(state.routes.filter(function (_ref11) {\n          var key = _ref11.key;\n          return isAnimationEnabled(key) ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key) : false;\n        }))));\n      }\n      if (!routes.length) {\n        throw new Error('There should always be at least one route in the navigation state.');\n      }\n      var descriptors = routes.reduce(function (acc, route) {\n        acc[route.key] = props.descriptors[route.key] || state.descriptors[route.key];\n        return acc;\n      }, {});\n      return {\n        routes: routes,\n        previousRoutes: props.state.routes,\n        previousDescriptors: props.descriptors,\n        openingRouteKeys: openingRouteKeys,\n        closingRouteKeys: closingRouteKeys,\n        replacingRouteKeys: replacingRouteKeys,\n        descriptors: descriptors\n      };\n    }\n  }]);\n  return StackView;\n}(React.Component);\nexports.default = StackView;\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_reactNativeSafeAreaContext","_native","_GestureHandler","_CardStack","_interopRequireDefault","_KeyboardManager","_HeaderContainer","_SafeAreaProviderCompat","_HeaderShownContext","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty3","getOwnPropertyDescriptors","defineProperties","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","GestureHandlerWrapper","GestureHandlerRootView","View","isArrayEqual","a","b","every","it","index","StackView","_React$Component","_inherits2","_super","_this","_classCallCheck2","_len","args","Array","_key","concat","_defineProperty","_assertThisInitialized2","routes","previousRoutes","previousDescriptors","openingRouteKeys","closingRouteKeys","replacingRouteKeys","descriptors","_ref","route","descriptor","state","_descriptor$options","options","gestureEnabled","animationEnabled","_ref2","_this$state","r","includes","findIndex","_ref3","props","render","createElement","HeaderContainer","_ref4","_this$props","navigation","_this$state2","some","routeNames","name","navigate","setState","_ref5","_this$props2","dispatch","StackActions","pop","_ref6","closing","emit","type","data","_ref7","_ref8","_ref9","_ref10","_createClass2","value","_this2","_this$props3","keyboardHandlingEnabled","_this$props3$mode","mode","_this$props3$headerMo","headerMode","Platform","OS","_","rest","_objectWithoutProperties2","_this$state3","NavigationHelpersContext","Provider","style","styles","container","SafeAreaProviderCompat","SafeAreaConsumer","insets","KeyboardManager","enabled","HeaderShownContext","Consumer","isParentHeaderShown","CardStack","_extends","getPreviousRoute","getGesturesEnabled","onOpenRoute","handleOpenRoute","onCloseRoute","handleCloseRoute","onTransitionStart","handleTransitionStart","onTransitionEnd","handleTransitionEnd","renderHeader","renderScene","onGestureStart","handleGestureStart","onGestureEnd","handleGestureEnd","onGestureCancel","handleGestureCancel","getDerivedStateFromProps","map","reduce","acc","slice","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","getAnimationTypeForReplace","_descriptor$options$a","animationTypeForReplace","_toConsumableArray2","splice","_routes2","_ref11","Error","Component","exports","StyleSheet","create","flex"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\@react-navigation\\stack\\lib\\module\\views\\Stack\\StackView.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, Platform, StyleSheet } from 'react-native';\nimport { SafeAreaConsumer, EdgeInsets } from 'react-native-safe-area-context';\nimport {\n  NavigationHelpersContext,\n  StackActions,\n  StackNavigationState,\n  Route,\n  ParamListBase,\n} from '@react-navigation/native';\n\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport CardStack from './CardStack';\nimport KeyboardManager from '../KeyboardManager';\nimport HeaderContainer, {\n  Props as HeaderContainerProps,\n} from '../Header/HeaderContainer';\nimport SafeAreaProviderCompat from '../SafeAreaProviderCompat';\nimport type {\n  StackNavigationHelpers,\n  StackNavigationConfig,\n  StackDescriptorMap,\n} from '../../types';\nimport HeaderShownContext from '../../utils/HeaderShownContext';\n\ntype Props = StackNavigationConfig & {\n  state: StackNavigationState<ParamListBase>;\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n};\n\ntype State = {\n  // Local copy of the routes which are actually rendered\n  routes: Route<string>[];\n  // Previous routes, to compare whether routes have changed or not\n  previousRoutes: Route<string>[];\n  // Previous descriptors, to compare whether descriptors have changed or not\n  previousDescriptors: StackDescriptorMap;\n  // List of routes being opened, we need to animate pushing of these new routes\n  openingRouteKeys: string[];\n  // List of routes being closed, we need to animate popping of these routes\n  closingRouteKeys: string[];\n  // List of routes being replaced, we need to keep a copy until the new route animates in\n  replacingRouteKeys: string[];\n  // Since the local routes can vary from the routes from props, we need to keep the descriptors for old routes\n  // Otherwise we won't be able to access the options for routes that were removed\n  descriptors: StackDescriptorMap;\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a: any[], b: any[]) =>\n  a.length === b.length && a.every((it, index) => it === b[index]);\n\nexport default class StackView extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Readonly<Props>,\n    state: Readonly<State>\n  ) {\n    // If there was no change in routes, we don't need to compute anything\n    if (\n      (props.state.routes === state.previousRoutes ||\n        isArrayEqual(\n          props.state.routes.map((r) => r.key),\n          state.previousRoutes.map((r) => r.key)\n        )) &&\n      state.routes.length\n    ) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce<StackDescriptorMap>((acc, route) => {\n          acc[route.key] =\n            props.descriptors[route.key] || state.descriptors[route.key];\n\n          return acc;\n        }, {});\n\n        previousDescriptors = props.descriptors;\n      }\n\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce<Record<string, Route<string>>>(\n          (acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          },\n          {}\n        );\n\n        routes = state.routes.map((route) => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors,\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes =\n      props.state.index < props.state.routes.length - 1\n        ? // Remove any extra routes from the state\n          // The last visible route should be the focused route, i.e. at current index\n          props.state.routes.slice(0, props.state.index + 1)\n        : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    let {\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      previousRoutes,\n    } = state;\n\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1] as\n      | Route<string>\n      | undefined;\n    const nextFocusedRoute = routes[routes.length - 1];\n\n    const isAnimationEnabled = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor ? descriptor.options.animationEnabled !== false : true;\n    };\n\n    const getAnimationTypeForReplace = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n\n    if (\n      previousFocusedRoute &&\n      previousFocusedRoute.key !== nextFocusedRoute.key\n    ) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (!previousRoutes.some((r) => r.key === nextFocusedRoute.key)) {\n        // A new route has come to the focus, we treat this as a push\n        // A replace can also trigger this, the animation should look like push\n\n        if (\n          isAnimationEnabled(nextFocusedRoute.key) &&\n          !openingRouteKeys.includes(nextFocusedRoute.key)\n        ) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n\n          closingRouteKeys = closingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n\n          if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(\n              (key) => key !== previousFocusedRoute.key\n            );\n\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [\n                ...closingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(\n                (key) => key !== nextFocusedRoute.key\n              );\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [\n                ...replacingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              closingRouteKeys = closingRouteKeys.filter(\n                (key) => key !== previousFocusedRoute.key\n              );\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      } else if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n        // The previously focused route was removed, we treat this as a pop\n\n        if (\n          isAnimationEnabled(previousFocusedRoute.key) &&\n          !closingRouteKeys.includes(previousFocusedRoute.key)\n        ) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // Looks like some routes were re-arranged and no focused routes were added/removed\n        // i.e. the currently focused route already existed and the previously focused route still exists\n        // We don't know how to animate this\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(\n        routes.length - 1,\n        0,\n        ...state.routes.filter(({ key }) =>\n          isAnimationEnabled(key)\n            ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key)\n            : false\n        )\n      );\n    }\n\n    if (!routes.length) {\n      throw new Error(\n        'There should always be at least one route in the navigation state.'\n      );\n    }\n\n    const descriptors = routes.reduce<StackDescriptorMap>((acc, route) => {\n      acc[route.key] =\n        props.descriptors[route.key] || state.descriptors[route.key];\n\n      return acc;\n    }, {});\n\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors,\n    };\n  }\n\n  state: State = {\n    routes: [],\n    previousRoutes: [],\n    previousDescriptors: {},\n    openingRouteKeys: [],\n    closingRouteKeys: [],\n    replacingRouteKeys: [],\n    descriptors: {},\n  };\n\n  private getGesturesEnabled = ({ route }: { route: Route<string> }) => {\n    const descriptor = this.state.descriptors[route.key];\n\n    if (descriptor) {\n      const { gestureEnabled, animationEnabled } = descriptor.options;\n\n      if (animationEnabled === false) {\n        // When animation is disabled, also disable gestures\n        // The gesture to dismiss a route will look weird when not animated\n        return false;\n      }\n\n      return gestureEnabled !== false;\n    }\n\n    return false;\n  };\n\n  private getPreviousRoute = ({ route }: { route: Route<string> }) => {\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n    const routes = this.state.routes.filter(\n      (r) =>\n        r.key === route.key ||\n        (!closingRouteKeys.includes(r.key) &&\n          !replacingRouteKeys.includes(r.key))\n    );\n\n    const index = routes.findIndex((r) => r.key === route.key);\n\n    return routes[index - 1];\n  };\n\n  private renderScene = ({ route }: { route: Route<string> }) => {\n    const descriptor =\n      this.state.descriptors[route.key] || this.props.descriptors[route.key];\n\n    if (!descriptor) {\n      return null;\n    }\n\n    return descriptor.render();\n  };\n\n  private renderHeader = (props: HeaderContainerProps) => {\n    return <HeaderContainer {...props} />;\n  };\n\n  private handleOpenRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n\n    if (\n      closingRouteKeys.some((key) => key === route.key) &&\n      replacingRouteKeys.every((key) => key !== route.key) &&\n      state.routeNames.includes(route.name) &&\n      !state.routes.some((r) => r.key === route.key)\n    ) {\n      // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n      // So we need to add this route back to the state\n      navigation.navigate(route);\n    } else {\n      this.setState((state) => ({\n        routes: state.replacingRouteKeys.length\n          ? state.routes.filter(\n              (r) => !state.replacingRouteKeys.includes(r.key)\n            )\n          : state.routes,\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        replacingRouteKeys: [],\n      }));\n    }\n  };\n\n  private handleCloseRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n\n    if (state.routes.some((r) => r.key === route.key)) {\n      // If a route exists in state, trigger a pop\n      // This will happen in when the route was closed from the card component\n      // e.g. When the close animation triggered from a gesture ends\n      navigation.dispatch({\n        ...StackActions.pop(),\n        source: route.key,\n        target: state.key,\n      });\n    } else {\n      // We need to clean up any state tracking the route and pop it immediately\n      this.setState((state) => ({\n        routes: state.routes.filter((r) => r.key !== route.key),\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n      }));\n    }\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionStart',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleTransitionEnd = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleGestureStart = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureStart',\n      target: route.key,\n    });\n  };\n\n  private handleGestureEnd = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureEnd',\n      target: route.key,\n    });\n  };\n\n  private handleGestureCancel = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureCancel',\n      target: route.key,\n    });\n  };\n\n  render() {\n    const {\n      state,\n      navigation,\n      keyboardHandlingEnabled,\n      mode = 'card',\n      headerMode = mode === 'card' && Platform.OS === 'ios'\n        ? 'float'\n        : 'screen',\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n\n    const {\n      routes,\n      descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n    } = this.state;\n\n    return (\n      <NavigationHelpersContext.Provider value={navigation}>\n        <GestureHandlerWrapper style={styles.container}>\n          <SafeAreaProviderCompat>\n            <SafeAreaConsumer>\n              {(insets) => (\n                <KeyboardManager enabled={keyboardHandlingEnabled !== false}>\n                  {(props) => (\n                    <HeaderShownContext.Consumer>\n                      {(isParentHeaderShown) => (\n                        <CardStack\n                          mode={mode}\n                          insets={insets as EdgeInsets}\n                          isParentHeaderShown={isParentHeaderShown}\n                          getPreviousRoute={this.getPreviousRoute}\n                          getGesturesEnabled={this.getGesturesEnabled}\n                          routes={routes}\n                          openingRouteKeys={openingRouteKeys}\n                          closingRouteKeys={closingRouteKeys}\n                          onOpenRoute={this.handleOpenRoute}\n                          onCloseRoute={this.handleCloseRoute}\n                          onTransitionStart={this.handleTransitionStart}\n                          onTransitionEnd={this.handleTransitionEnd}\n                          renderHeader={this.renderHeader}\n                          renderScene={this.renderScene}\n                          headerMode={headerMode}\n                          state={state}\n                          descriptors={descriptors}\n                          onGestureStart={this.handleGestureStart}\n                          onGestureEnd={this.handleGestureEnd}\n                          onGestureCancel={this.handleGestureCancel}\n                          {...rest}\n                          {...props}\n                        />\n                      )}\n                    </HeaderShownContext.Consumer>\n                  )}\n                </KeyboardManager>\n              )}\n            </SafeAreaConsumer>\n          </SafeAreaProviderCompat>\n        </GestureHandlerWrapper>\n      </NavigationHelpersContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}