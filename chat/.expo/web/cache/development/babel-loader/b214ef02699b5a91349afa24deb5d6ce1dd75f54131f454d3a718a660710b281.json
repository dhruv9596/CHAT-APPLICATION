{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _reactNative = require(\"react-native\");\nvar _State = require(\"../../State\");\nvar _interfaces = require(\"../interfaces\");\nvar _GestureHandlerOrchestrator = _interopRequireDefault(require(\"../tools/GestureHandlerOrchestrator\"));\nvar _InteractionManager = _interopRequireDefault(require(\"../tools/InteractionManager\"));\nvar _PointerEventManager = _interopRequireDefault(require(\"../tools/PointerEventManager\"));\nvar _PointerTracker = _interopRequireDefault(require(\"../tools/PointerTracker\"));\nvar _TouchEventManager = _interopRequireDefault(require(\"../tools/TouchEventManager\"));\nvar _utils = require(\"../utils\");\nvar _excluded = [\"enabled\"];\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty3.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar GestureHandler = function () {\n  function GestureHandler() {\n    var _this = this;\n    (0, _classCallCheck2.default)(this, GestureHandler);\n    _defineProperty(this, \"lastSentState\", null);\n    _defineProperty(this, \"currentState\", _State.State.UNDETERMINED);\n    _defineProperty(this, \"shouldCancellWhenOutside\", false);\n    _defineProperty(this, \"hasCustomActivationCriteria\", void 0);\n    _defineProperty(this, \"enabled\", false);\n    _defineProperty(this, \"ref\", void 0);\n    _defineProperty(this, \"propsRef\", void 0);\n    _defineProperty(this, \"handlerTag\", void 0);\n    _defineProperty(this, \"config\", {\n      enabled: false\n    });\n    _defineProperty(this, \"view\", void 0);\n    _defineProperty(this, \"eventManagers\", []);\n    _defineProperty(this, \"tracker\", new _PointerTracker.default());\n    _defineProperty(this, \"activationIndex\", 0);\n    _defineProperty(this, \"awaiting\", false);\n    _defineProperty(this, \"active\", false);\n    _defineProperty(this, \"shouldResetProgress\", false);\n    _defineProperty(this, \"pointerType\", _interfaces.PointerType.NONE);\n    _defineProperty(this, \"sendEvent\", function (newState, oldState) {\n      var _this$propsRef$curren = _this.propsRef.current,\n        onGestureHandlerEvent = _this$propsRef$curren.onGestureHandlerEvent,\n        onGestureHandlerStateChange = _this$propsRef$curren.onGestureHandlerStateChange;\n      var resultEvent = _this.transformEventData(newState, oldState);\n      if (_this.lastSentState !== newState) {\n        _this.lastSentState = newState;\n        invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n      }\n      if (_this.currentState === _State.State.ACTIVE) {\n        resultEvent.nativeEvent.oldState = undefined;\n        invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n      }\n    });\n    this.hasCustomActivationCriteria = false;\n  }\n  (0, _createClass2.default)(GestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      this.propsRef = propsRef;\n      this.ref = ref;\n      this.currentState = _State.State.UNDETERMINED;\n      this.setView();\n      this.addEventManager(new _PointerEventManager.default(this.view));\n      this.addEventManager(new _TouchEventManager.default(this.view));\n    }\n  }, {\n    key: \"setView\",\n    value: function setView() {\n      if (!this.ref) {\n        throw new Error(\"Cannot find HTML Element for handler \" + this.handlerTag);\n      }\n      this.view = (0, _reactNative.findNodeHandle)(this.ref);\n      this.view.style['touchAction'] = 'none';\n      this.view.style['WebkitTouchCallout'] = 'none';\n      if (!this.config.userSelect) {\n        this.view.style['webkitUserSelect'] = 'none';\n        this.view.style['userSelect'] = 'none';\n      } else {\n        this.view.style['webkitUserSelect'] = this.config.userSelect;\n        this.view.style['userSelect'] = this.config.userSelect;\n      }\n    }\n  }, {\n    key: \"addEventManager\",\n    value: function addEventManager(manager) {\n      manager.setOnPointerDown(this.onPointerDown.bind(this));\n      manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n      manager.setOnPointerUp(this.onPointerUp.bind(this));\n      manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n      manager.setOnPointerMove(this.onPointerMove.bind(this));\n      manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n      manager.setOnPointerOut(this.onPointerOut.bind(this));\n      manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n      manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n      manager.setListeners();\n      this.eventManagers.push(manager);\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {}\n  }, {\n    key: \"onReset\",\n    value: function onReset() {}\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {}\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.tracker.resetTracker();\n      this.onReset();\n      this.resetProgress();\n      this.eventManagers.forEach(function (manager) {\n        return manager.resetManager();\n      });\n      this.currentState = _State.State.UNDETERMINED;\n    }\n  }, {\n    key: \"moveToState\",\n    value: function moveToState(newState, sendIfDisabled) {\n      if (this.currentState === newState) {\n        return;\n      }\n      var oldState = this.currentState;\n      this.currentState = newState;\n      if (this.tracker.getTrackedPointersCount() > 0 && this.config.needsPointerData && this.isFinished()) {\n        this.cancelTouches();\n      }\n      _GestureHandlerOrchestrator.default.getInstance().onHandlerStateChange(this, newState, oldState, sendIfDisabled);\n      this.onStateChange(newState, oldState);\n    }\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange(_newState, _oldState) {}\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      if (!this.checkHitSlop()) {\n        return;\n      }\n      if (this.currentState === _State.State.UNDETERMINED) {\n        this.moveToState(_State.State.BEGAN);\n      }\n    }\n  }, {\n    key: \"fail\",\n    value: function fail(sendIfDisabled) {\n      if (this.currentState === _State.State.ACTIVE || this.currentState === _State.State.BEGAN) {\n        this.moveToState(_State.State.FAILED, sendIfDisabled);\n        this.view.style.cursor = 'auto';\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel(sendIfDisabled) {\n      if (this.currentState === _State.State.ACTIVE || this.currentState === _State.State.UNDETERMINED || this.currentState === _State.State.BEGAN) {\n        this.onCancel();\n        this.moveToState(_State.State.CANCELLED, sendIfDisabled);\n        this.view.style.cursor = 'auto';\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var _force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.currentState === _State.State.UNDETERMINED || this.currentState === _State.State.BEGAN) {\n        this.moveToState(_State.State.ACTIVE);\n        this.view.style.cursor = 'grab';\n      }\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (this.currentState === _State.State.BEGAN || this.currentState === _State.State.ACTIVE) {\n        this.moveToState(_State.State.END);\n        this.view.style.cursor = 'auto';\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"isAwaiting\",\n    value: function isAwaiting() {\n      return this.awaiting;\n    }\n  }, {\n    key: \"setAwaiting\",\n    value: function setAwaiting(value) {\n      this.awaiting = value;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.active;\n    }\n  }, {\n    key: \"setActive\",\n    value: function setActive(value) {\n      this.active = value;\n    }\n  }, {\n    key: \"getShouldResetProgress\",\n    value: function getShouldResetProgress() {\n      return this.shouldResetProgress;\n    }\n  }, {\n    key: \"setShouldResetProgress\",\n    value: function setShouldResetProgress(value) {\n      this.shouldResetProgress = value;\n    }\n  }, {\n    key: \"getActivationIndex\",\n    value: function getActivationIndex() {\n      return this.activationIndex;\n    }\n  }, {\n    key: \"setActivationIndex\",\n    value: function setActivationIndex(value) {\n      this.activationIndex = value;\n    }\n  }, {\n    key: \"shouldWaitForHandlerFailure\",\n    value: function shouldWaitForHandlerFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return _InteractionManager.default.getInstance().shouldWaitForHandlerFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRequireToWaitForFailure\",\n    value: function shouldRequireToWaitForFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return _InteractionManager.default.getInstance().shouldRequireHandlerToWaitForFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler) {\n      if (handler === this) {\n        return true;\n      }\n      return _InteractionManager.default.getInstance().shouldRecognizeSimultaneously(this, handler);\n    }\n  }, {\n    key: \"shouldBeCancelledByOther\",\n    value: function shouldBeCancelledByOther(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return _InteractionManager.default.getInstance().shouldHandlerBeCancelledBy(this, handler);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      _GestureHandlerOrchestrator.default.getInstance().recordHandlerIfNotPresent(this);\n      this.pointerType = event.pointerType;\n      if (this.pointerType === _interfaces.PointerType.TOUCH) {\n        _GestureHandlerOrchestrator.default.getInstance().cancelMouseAndPenGestures(this);\n      }\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tryToSendMoveEvent(false);\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerOut\",\n    value: function onPointerOut(event) {\n      if (this.shouldCancellWhenOutside) {\n        switch (this.currentState) {\n          case _State.State.ACTIVE:\n            this.cancel();\n            break;\n          case _State.State.BEGAN:\n            this.fail();\n            break;\n        }\n        return;\n      }\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerEnter\",\n    value: function onPointerEnter(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.tryToSendMoveEvent(true);\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"tryToSendMoveEvent\",\n    value: function tryToSendMoveEvent(out) {\n      if (this.enabled && this.active && (!out || out && !this.shouldCancellWhenOutside)) {\n        this.sendEvent(this.currentState, this.currentState);\n      }\n    }\n  }, {\n    key: \"sendTouchEvent\",\n    value: function sendTouchEvent(event) {\n      if (!this.enabled) {\n        return;\n      }\n      var onGestureHandlerEvent = this.propsRef.current.onGestureHandlerEvent;\n      var touchEvent = this.transformTouchEvent(event);\n      if (touchEvent) {\n        invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n      }\n    }\n  }, {\n    key: \"transformEventData\",\n    value: function transformEventData(newState, oldState) {\n      return {\n        nativeEvent: _objectSpread(_objectSpread({\n          numberOfPointers: this.tracker.getTrackedPointersCount(),\n          state: newState,\n          pointerInside: (0, _utils.isPointerInBounds)(this.view, {\n            x: this.tracker.getLastAvgX(),\n            y: this.tracker.getLastAvgY()\n          })\n        }, this.transformNativeEvent()), {}, {\n          handlerTag: this.handlerTag,\n          target: this.ref,\n          oldState: newState !== oldState ? oldState : undefined\n        }),\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"transformTouchEvent\",\n    value: function transformTouchEvent(event) {\n      var _this2 = this;\n      var _event$touchEventType;\n      var rect = this.view.getBoundingClientRect();\n      var all = [];\n      var changed = [];\n      var trackerData = this.tracker.getData();\n      if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n        return;\n      }\n      trackerData.forEach(function (element, key) {\n        var id = _this2.tracker.getMappedTouchEventId(key);\n        all.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY\n        });\n      });\n      if (event.eventType !== _interfaces.EventTypes.CANCEL) {\n        changed.push({\n          id: this.tracker.getMappedTouchEventId(event.pointerId),\n          x: event.x - rect.left,\n          y: event.y - rect.top,\n          absoluteX: event.x,\n          absoluteY: event.y\n        });\n      } else {\n        trackerData.forEach(function (element, key) {\n          var id = _this2.tracker.getMappedTouchEventId(key);\n          changed.push({\n            id: id,\n            x: element.lastX - rect.left,\n            y: element.lastY - rect.top,\n            absoluteX: element.lastX,\n            absoluteY: element.lastY\n          });\n        });\n      }\n      var eventType = _interfaces.TouchEventType.UNDETERMINED;\n      switch (event.eventType) {\n        case _interfaces.EventTypes.DOWN:\n        case _interfaces.EventTypes.ADDITIONAL_POINTER_DOWN:\n          eventType = _interfaces.TouchEventType.DOWN;\n          break;\n        case _interfaces.EventTypes.UP:\n        case _interfaces.EventTypes.ADDITIONAL_POINTER_UP:\n          eventType = _interfaces.TouchEventType.UP;\n          break;\n        case _interfaces.EventTypes.MOVE:\n          eventType = _interfaces.TouchEventType.MOVE;\n          break;\n        case _interfaces.EventTypes.CANCEL:\n          eventType = _interfaces.TouchEventType.CANCELLED;\n          break;\n      }\n      var numberOfTouches = all.length;\n      if (event.eventType === _interfaces.EventTypes.UP || event.eventType === _interfaces.EventTypes.ADDITIONAL_POINTER_UP) {\n        --numberOfTouches;\n      }\n      return {\n        nativeEvent: {\n          handlerTag: this.handlerTag,\n          state: this.currentState,\n          eventType: (_event$touchEventType = event.touchEventType) !== null && _event$touchEventType !== void 0 ? _event$touchEventType : eventType,\n          changedTouches: changed,\n          allTouches: all,\n          numberOfTouches: numberOfTouches\n        },\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"cancelTouches\",\n    value: function cancelTouches() {\n      var _this3 = this;\n      var rect = this.view.getBoundingClientRect();\n      var all = [];\n      var changed = [];\n      var trackerData = this.tracker.getData();\n      if (trackerData.size === 0) {\n        return;\n      }\n      trackerData.forEach(function (element, key) {\n        var id = _this3.tracker.getMappedTouchEventId(key);\n        all.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY\n        });\n        changed.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY\n        });\n      });\n      var cancelEvent = {\n        nativeEvent: {\n          handlerTag: this.handlerTag,\n          state: this.currentState,\n          eventType: _interfaces.TouchEventType.CANCELLED,\n          changedTouches: changed,\n          allTouches: all,\n          numberOfTouches: all.length\n        },\n        timeStamp: Date.now()\n      };\n      var onGestureHandlerEvent = this.propsRef.current.onGestureHandlerEvent;\n      invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      return {};\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      this.config = _objectSpread({\n        enabled: enabled\n      }, props);\n      this.enabled = enabled;\n      if (this.config.shouldCancelWhenOutside !== undefined) {\n        this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);\n      }\n      this.validateHitSlops();\n      if (this.enabled) {\n        return;\n      }\n      switch (this.currentState) {\n        case _State.State.ACTIVE:\n          this.fail(true);\n          break;\n        case _State.State.UNDETERMINED:\n          _GestureHandlerOrchestrator.default.getInstance().removeHandlerFromOrchestrator(this);\n          break;\n        default:\n          this.cancel(true);\n          break;\n      }\n    }\n  }, {\n    key: \"checkCustomActivationCriteria\",\n    value: function checkCustomActivationCriteria(criterias) {\n      for (var key in this.config) {\n        if (criterias.indexOf(key) >= 0) {\n          this.hasCustomActivationCriteria = true;\n        }\n      }\n    }\n  }, {\n    key: \"validateHitSlops\",\n    value: function validateHitSlops() {\n      if (!this.config.hitSlop) {\n        return;\n      }\n      if (this.config.hitSlop.left !== undefined && this.config.hitSlop.right !== undefined && this.config.hitSlop.width !== undefined) {\n        throw new Error('HitSlop Error: Cannot define left, right and width at the same time');\n      }\n      if (this.config.hitSlop.width !== undefined && this.config.hitSlop.left === undefined && this.config.hitSlop.right === undefined) {\n        throw new Error('HitSlop Error: When width is defined, either left or right has to be defined');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top !== undefined && this.config.hitSlop.bottom !== undefined) {\n        throw new Error('HitSlop Error: Cannot define top, bottom and height at the same time');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top === undefined && this.config.hitSlop.bottom === undefined) {\n        throw new Error('HitSlop Error: When height is defined, either top or bottom has to be defined');\n      }\n    }\n  }, {\n    key: \"checkHitSlop\",\n    value: function checkHitSlop() {\n      if (!this.config.hitSlop) {\n        return true;\n      }\n      var width = this.view.getBoundingClientRect().width;\n      var height = this.view.getBoundingClientRect().height;\n      var left = 0;\n      var top = 0;\n      var right = width;\n      var bottom = height;\n      if (this.config.hitSlop.horizontal !== undefined) {\n        left -= this.config.hitSlop.horizontal;\n        right += this.config.hitSlop.horizontal;\n      }\n      if (this.config.hitSlop.vertical !== undefined) {\n        top -= this.config.hitSlop.vertical;\n        bottom += this.config.hitSlop.vertical;\n      }\n      if (this.config.hitSlop.left !== undefined) {\n        left = -this.config.hitSlop.left;\n      }\n      if (this.config.hitSlop.right !== undefined) {\n        right = width + this.config.hitSlop.right;\n      }\n      if (this.config.hitSlop.top !== undefined) {\n        top = -this.config.hitSlop.top;\n      }\n      if (this.config.hitSlop.bottom !== undefined) {\n        bottom = width + this.config.hitSlop.bottom;\n      }\n      if (this.config.hitSlop.width !== undefined) {\n        if (this.config.hitSlop.left !== undefined) {\n          right = left + this.config.hitSlop.width;\n        } else if (this.config.hitSlop.right !== undefined) {\n          left = right - this.config.hitSlop.width;\n        }\n      }\n      if (this.config.hitSlop.height !== undefined) {\n        if (this.config.hitSlop.top !== undefined) {\n          bottom = top + this.config.hitSlop.height;\n        } else if (this.config.hitSlop.bottom !== undefined) {\n          top = bottom - this.config.hitSlop.height;\n        }\n      }\n      var rect = this.view.getBoundingClientRect();\n      var offsetX = this.tracker.getLastX() - rect.left;\n      var offsetY = this.tracker.getLastY() - rect.top;\n      if (offsetX >= left && offsetX <= right && offsetY >= top && offsetY <= bottom) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"isPointerInBounds\",\n    value: function isPointerInBounds(_ref2) {\n      var x = _ref2.x,\n        y = _ref2.y;\n      var rect = this.view.getBoundingClientRect();\n      return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {}\n  }, {\n    key: \"getTag\",\n    value: function getTag() {\n      return this.handlerTag;\n    }\n  }, {\n    key: \"setTag\",\n    value: function setTag(tag) {\n      this.handlerTag = tag;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n  }, {\n    key: \"getShouldEnableGestureOnSetup\",\n    value: function getShouldEnableGestureOnSetup() {\n      throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n    }\n  }, {\n    key: \"getView\",\n    value: function getView() {\n      return this.view;\n    }\n  }, {\n    key: \"getEventManagers\",\n    value: function getEventManagers() {\n      return this.eventManagers;\n    }\n  }, {\n    key: \"getTracker\",\n    value: function getTracker() {\n      return this.tracker;\n    }\n  }, {\n    key: \"getTrackedPointersID\",\n    value: function getTrackedPointersID() {\n      return this.tracker.getTrackedPointersID();\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.currentState;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: \"isFinished\",\n    value: function isFinished() {\n      return this.currentState === _State.State.END || this.currentState === _State.State.FAILED || this.currentState === _State.State.CANCELLED;\n    }\n  }, {\n    key: \"setShouldCancelWhenOutside\",\n    value: function setShouldCancelWhenOutside(shouldCancel) {\n      this.shouldCancellWhenOutside = shouldCancel;\n    }\n  }, {\n    key: \"getShouldCancelWhenOutside\",\n    value: function getShouldCancelWhenOutside() {\n      return this.shouldCancellWhenOutside;\n    }\n  }, {\n    key: \"getPointerType\",\n    value: function getPointerType() {\n      return this.pointerType;\n    }\n  }]);\n  return GestureHandler;\n}();\nexports.default = GestureHandler;\nfunction invokeNullableMethod(method, event) {\n  if (!method) {\n    return;\n  }\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    var handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n  var argMapping = method.__nodeConfig.argMapping;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n  for (var _iterator = _createForOfIteratorHelperLoose(argMapping.entries()), _step; !(_step = _iterator()).done;) {\n    var _ref3 = _step.value;\n    var _ref4 = (0, _slicedToArray2.default)(_ref3, 2);\n    var index = _ref4[0];\n    var _ref4$ = (0, _slicedToArray2.default)(_ref4[1], 2);\n    var key = _ref4$[0];\n    var value = _ref4$[1];\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n    var nativeValue = event.nativeEvent[key];\n    if (value !== null && value !== void 0 && value.setValue) {\n      value.setValue(nativeValue);\n    } else {\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n  return;\n}","map":{"version":3,"names":["_reactNative","require","_State","_interfaces","_GestureHandlerOrchestrator","_interopRequireDefault","_InteractionManager","_PointerEventManager","_PointerTracker","_TouchEventManager","_utils","_excluded","_createForOfIteratorHelperLoose","o","allowArrayLike","it","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","i","done","value","TypeError","minLen","_arrayLikeToArray","n","Object","prototype","toString","slice","constructor","name","from","test","arr","len","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty3","default","getOwnPropertyDescriptors","defineProperties","defineProperty","GestureHandler","_this","_classCallCheck2","_defineProperty","State","UNDETERMINED","enabled","PointerTracker","PointerType","NONE","newState","oldState","_this$propsRef$curren","propsRef","current","onGestureHandlerEvent","onGestureHandlerStateChange","resultEvent","transformEventData","lastSentState","invokeNullableMethod","currentState","ACTIVE","nativeEvent","undefined","hasCustomActivationCriteria","_createClass2","init","ref","setView","addEventManager","PointerEventManager","view","TouchEventManager","Error","handlerTag","findNodeHandle","style","config","userSelect","manager","setOnPointerDown","onPointerDown","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerOut","onPointerOut","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setListeners","eventManagers","onCancel","onReset","resetProgress","reset","tracker","resetTracker","resetManager","moveToState","sendIfDisabled","getTrackedPointersCount","needsPointerData","isFinished","cancelTouches","GestureHandlerOrchestrator","getInstance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","FAILED","cursor","cancel","CANCELLED","activate","_force","end","END","isAwaiting","awaiting","setAwaiting","isActive","active","setActive","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","getActivationIndex","activationIndex","setActivationIndex","shouldWaitForHandlerFailure","handler","InteractionManager","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","pointerType","TOUCH","cancelMouseAndPenGestures","sendTouchEvent","tryToSendMoveEvent","shouldCancellWhenOutside","out","sendEvent","touchEvent","transformTouchEvent","numberOfPointers","state","pointerInside","isPointerInBounds","x","getLastAvgX","y","getLastAvgY","transformNativeEvent","timeStamp","Date","now","_this2","_event$touchEventType","rect","getBoundingClientRect","all","changed","trackerData","getData","size","has","pointerId","element","id","getMappedTouchEventId","lastX","left","lastY","top","absoluteX","absoluteY","eventType","EventTypes","CANCEL","TouchEventType","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","touchEventType","changedTouches","allTouches","_this3","cancelEvent","updateGestureConfig","_ref","_ref$enabled","props","_objectWithoutProperties2","shouldCancelWhenOutside","setShouldCancelWhenOutside","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hitSlop","right","width","height","bottom","horizontal","vertical","offsetX","getLastX","offsetY","getLastY","_ref2","resetConfig","getTag","setTag","tag","getConfig","getShouldEnableGestureOnSetup","getView","getEventManagers","getTracker","getTrackedPointersID","getState","isEnabled","shouldCancel","getShouldCancelWhenOutside","getPointerType","exports","method","__getHandler","argMapping","__nodeConfig","_iterator","entries","_step","_ref3","_ref4","_slicedToArray2","index","_ref4$","nativeValue","setValue"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\handlers\\GestureHandler.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { findNodeHandle } from 'react-native';\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  PointerType,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerEventManager from '../tools/PointerEventManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport TouchEventManager from '../tools/TouchEventManager';\nimport { isPointerInBounds } from '../utils';\n\nexport default abstract class GestureHandler {\n  private lastSentState: State | null = null;\n  protected currentState: State = State.UNDETERMINED;\n\n  protected shouldCancellWhenOutside = false;\n  protected hasCustomActivationCriteria: boolean;\n  protected enabled = false;\n\n  private ref!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private handlerTag!: number;\n  protected config: Config = { enabled: false };\n  protected view!: HTMLElement;\n\n  protected eventManagers: EventManager[] = [];\n  protected tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  protected activationIndex = 0;\n  protected awaiting = false;\n  protected active = false;\n  protected shouldResetProgress = false;\n  protected pointerType: PointerType = PointerType.NONE;\n\n  public constructor() {\n    this.hasCustomActivationCriteria = false;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(ref: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.ref = ref;\n\n    this.currentState = State.UNDETERMINED;\n\n    this.setView();\n    this.addEventManager(new PointerEventManager(this.view));\n    this.addEventManager(new TouchEventManager(this.view));\n  }\n\n  private setView() {\n    if (!this.ref) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${this.handlerTag}`\n      );\n    }\n\n    this.view = findNodeHandle(this.ref) as unknown as HTMLElement;\n    this.view.style['touchAction'] = 'none';\n    //@ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = 'none';\n\n    if (!this.config.userSelect) {\n      this.view.style['webkitUserSelect'] = 'none';\n      this.view.style['userSelect'] = 'none';\n    } else {\n      this.view.style['webkitUserSelect'] = this.config.userSelect;\n      this.view.style['userSelect'] = this.config.userSelect;\n    }\n  }\n\n  private addEventManager(manager: EventManager): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerOut(this.onPointerOut.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setListeners();\n\n    this.eventManagers.push(manager);\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.eventManagers.forEach((manager: EventManager) =>\n      manager.resetManager()\n    );\n    this.currentState = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.currentState === newState) {\n      return;\n    }\n\n    const oldState = this.currentState;\n    this.currentState = newState;\n\n    if (\n      this.tracker.getTrackedPointersCount() > 0 &&\n      this.config.needsPointerData &&\n      this.isFinished()\n    ) {\n      this.cancelTouches();\n    }\n\n    GestureHandlerOrchestrator.getInstance().onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.currentState === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.FAILED, sendIfDisabled);\n      this.view.style.cursor = 'auto';\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.onCancel();\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  public activate(_force = false) {\n    if (\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.ACTIVE);\n      this.view.style.cursor = 'grab';\n    }\n  }\n\n  public end() {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      this.moveToState(State.END);\n      this.view.style.cursor = 'auto';\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public isAwaiting(): boolean {\n    return this.awaiting;\n  }\n  public setAwaiting(value: boolean): void {\n    this.awaiting = value;\n  }\n\n  public isActive(): boolean {\n    return this.active;\n  }\n  public setActive(value: boolean): void {\n    this.active = value;\n  }\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public getActivationIndex(): number {\n    return this.activationIndex;\n  }\n  public setActivationIndex(value: number): void {\n    this.activationIndex = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.getInstance().shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerOut(event: AdaptedEvent): void {\n    if (this.shouldCancellWhenOutside) {\n      switch (this.currentState) {\n        case State.ACTIVE:\n          this.cancel();\n          break;\n        case State.BEGAN:\n          this.fail();\n          break;\n      }\n      return;\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  private tryToSendMoveEvent(out: boolean): void {\n    if (\n      this.enabled &&\n      this.active &&\n      (!out || (out && !this.shouldCancellWhenOutside))\n    ) {\n      this.sendEvent(this.currentState, this.currentState);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined =\n      this.transformTouchEvent(event);\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const { onGestureHandlerEvent, onGestureHandlerStateChange }: PropsRef =\n      this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.currentState === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.getTrackedPointersCount(),\n        state: newState,\n        pointerInside: isPointerInBounds(this.view, {\n          x: this.tracker.getLastAvgX(),\n          y: this.tracker.getLastAvgY(),\n        }),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.ref,\n        oldState: newState !== oldState ? oldState : undefined,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.view.getBoundingClientRect();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.left,\n        y: event.y - rect.top,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: event.touchEventType ?? eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private cancelTouches(): void {\n    const rect = this.view.getBoundingClientRect();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    if (trackerData.size === 0) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n\n      changed.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    const cancelEvent: ResultTouchEvent = {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: TouchEventType.CANCELLED,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: all.length,\n      },\n      timeStamp: Date.now(),\n    };\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    invokeNullableMethod(onGestureHandlerEvent, cancelEvent);\n  }\n\n  protected transformNativeEvent() {\n    return {};\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this.config = { enabled: enabled, ...props };\n    this.enabled = enabled;\n\n    if (this.config.shouldCancelWhenOutside !== undefined) {\n      this.setShouldCancelWhenOutside(this.config.shouldCancelWhenOutside);\n    }\n\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(\n          this\n        );\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const width = this.view.getBoundingClientRect().width;\n    const height = this.view.getBoundingClientRect().height;\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect: DOMRect = this.view.getBoundingClientRect();\n    const offsetX: number = this.tracker.getLastX() - rect.left;\n    const offsetY: number = this.tracker.getLastY() - rect.top;\n\n    if (\n      offsetX >= left &&\n      offsetX <= right &&\n      offsetY >= top &&\n      offsetY <= bottom\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  public isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return (\n      x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom\n    );\n  }\n\n  protected resetConfig(): void {}\n\n  //\n  // Getters and setters\n  //\n\n  public getTag(): number {\n    return this.handlerTag;\n  }\n  public setTag(tag: number): void {\n    this.handlerTag = tag;\n  }\n\n  protected getConfig() {\n    return this.config;\n  }\n\n  public getShouldEnableGestureOnSetup(): boolean {\n    throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n  }\n\n  public getView(): HTMLElement {\n    return this.view;\n  }\n\n  public getEventManagers(): EventManager[] {\n    return this.eventManagers;\n  }\n\n  public getTracker(): PointerTracker {\n    return this.tracker;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.getTrackedPointersID();\n  }\n\n  public getState(): State {\n    return this.currentState;\n  }\n\n  public isEnabled(): boolean {\n    return this.enabled;\n  }\n\n  private isFinished(): boolean {\n    return (\n      this.currentState === State.END ||\n      this.currentState === State.FAILED ||\n      this.currentState === State.CANCELLED\n    );\n  }\n\n  protected setShouldCancelWhenOutside(shouldCancel: boolean) {\n    this.shouldCancellWhenOutside = shouldCancel;\n  }\n  protected getShouldCancelWhenOutside(): boolean {\n    return this.shouldCancellWhenOutside;\n  }\n\n  public getPointerType(): PointerType {\n    return this.pointerType;\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      //Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      //RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}