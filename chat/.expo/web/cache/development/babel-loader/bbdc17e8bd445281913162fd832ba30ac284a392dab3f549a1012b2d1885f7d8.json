{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useLinking;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _core = require(\"@react-navigation/core\");\nvar _nonSecure = require(\"nanoid/non-secure\");\nvar _ServerContext = _interopRequireDefault(require(\"./ServerContext\"));\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nvar createMemoryHistory = function createMemoryHistory() {\n  var index = 0;\n  var items = [];\n  var pending = [];\n  var interrupt = function interrupt() {\n    pending.forEach(function (it) {\n      var cb = it.cb;\n      it.cb = function () {\n        return cb(true);\n      };\n    });\n  };\n  var history = {\n    get index() {\n      var _window$history$state;\n      var id = (_window$history$state = window.history.state) === null || _window$history$state === void 0 ? void 0 : _window$history$state.id;\n      if (id) {\n        var _index = items.findIndex(function (item) {\n          return item.id === id;\n        });\n        return _index > -1 ? _index : 0;\n      }\n      return 0;\n    },\n    get: function get(index) {\n      return items[index];\n    },\n    backIndex: function backIndex(_ref) {\n      var path = _ref.path;\n      for (var i = index - 1; i >= 0; i--) {\n        var item = items[i];\n        if (item.path === path) {\n          return i;\n        }\n      }\n      return -1;\n    },\n    push: function push(_ref2) {\n      var path = _ref2.path,\n        state = _ref2.state;\n      interrupt();\n      var id = (0, _nonSecure.nanoid)();\n      items = items.slice(0, index + 1);\n      items.push({\n        path: path,\n        state: state,\n        id: id\n      });\n      index = items.length - 1;\n      window.history.pushState({\n        id: id\n      }, '', path);\n    },\n    replace: function replace(_ref3) {\n      var path = _ref3.path,\n        state = _ref3.state;\n      var _window$history$state2, _window$history$state3;\n      interrupt();\n      var id = (_window$history$state2 = (_window$history$state3 = window.history.state) === null || _window$history$state3 === void 0 ? void 0 : _window$history$state3.id) !== null && _window$history$state2 !== void 0 ? _window$history$state2 : (0, _nonSecure.nanoid)();\n      if (items.length) {\n        items[index] = {\n          path: path,\n          state: state,\n          id: id\n        };\n      } else {\n        items.push({\n          path: path,\n          state: state,\n          id: id\n        });\n      }\n      window.history.replaceState({\n        id: id\n      }, '', path);\n    },\n    go: function go(n) {\n      interrupt();\n      if (n > 0) {\n        n = Math.min(n, items.length - 1);\n      } else if (n < 0) {\n        n = index + n < 0 ? -index : n;\n      }\n      if (n === 0) {\n        return;\n      }\n      index += n;\n      return new Promise(function (resolve, reject) {\n        var done = function done(interrupted) {\n          clearTimeout(timer);\n          if (interrupted) {\n            reject(new Error('History was changed during navigation.'));\n            return;\n          }\n          var title = window.document.title;\n          window.document.title = '';\n          window.document.title = title;\n          resolve();\n        };\n        pending.push({\n          ref: done,\n          cb: done\n        });\n        var timer = setTimeout(function () {\n          var index = pending.findIndex(function (it) {\n            return it.ref === done;\n          });\n          if (index > -1) {\n            pending[index].cb();\n            pending.splice(index, 1);\n          }\n        }, 100);\n        var onPopState = function onPopState() {\n          var last = pending.pop();\n          window.removeEventListener('popstate', onPopState);\n          last === null || last === void 0 ? void 0 : last.cb();\n        };\n        window.addEventListener('popstate', onPopState);\n        window.history.go(n);\n      });\n    },\n    listen: function listen(listener) {\n      var onPopState = function onPopState() {\n        if (pending.length) {\n          return;\n        }\n        listener();\n      };\n      window.addEventListener('popstate', onPopState);\n      return function () {\n        return window.removeEventListener('popstate', onPopState);\n      };\n    }\n  };\n  return history;\n};\nvar findMatchingState = function findMatchingState(a, b) {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n  var aHistoryLength = a.history ? a.history.length : a.routes.length;\n  var bHistoryLength = b.history ? b.history.length : b.routes.length;\n  var aRoute = a.routes[a.index];\n  var bRoute = b.routes[b.index];\n  var aChildState = aRoute.state;\n  var bChildState = bRoute.state;\n  if (aHistoryLength !== bHistoryLength || aRoute.key !== bRoute.key || aChildState === undefined || bChildState === undefined || aChildState.key !== bChildState.key) {\n    return [a, b];\n  }\n  return findMatchingState(aChildState, bChildState);\n};\nvar series = function series(cb) {\n  var handling = false;\n  var queue = [];\n  var callback = function callback() {\n    var last;\n    return _regenerator.default.async(function callback$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          if (!handling) {\n            _context.next = 4;\n            break;\n          }\n          queue.unshift(callback);\n          return _context.abrupt(\"return\");\n        case 4:\n          handling = true;\n          _context.next = 7;\n          return _regenerator.default.awrap(cb());\n        case 7:\n          _context.prev = 7;\n          handling = false;\n          if (queue.length) {\n            last = queue.pop();\n            last === null || last === void 0 ? void 0 : last();\n          }\n          return _context.finish(7);\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, [[0,, 7, 11]], Promise);\n  };\n  return callback;\n};\nvar isUsingLinking = false;\nfunction useLinking(ref, _ref4) {\n  var _ref4$enabled = _ref4.enabled,\n    enabled = _ref4$enabled === void 0 ? true : _ref4$enabled,\n    config = _ref4.config,\n    _ref4$getStateFromPat = _ref4.getStateFromPath,\n    getStateFromPath = _ref4$getStateFromPat === void 0 ? _core.getStateFromPath : _ref4$getStateFromPat,\n    _ref4$getPathFromStat = _ref4.getPathFromState,\n    getPathFromState = _ref4$getPathFromStat === void 0 ? _core.getPathFromState : _ref4$getPathFromStat,\n    _ref4$getActionFromSt = _ref4.getActionFromState,\n    getActionFromState = _ref4$getActionFromSt === void 0 ? _core.getActionFromState : _ref4$getActionFromSt;\n  React.useEffect(function () {\n    if (enabled !== false && isUsingLinking) {\n      throw new Error(['Looks like you have configured linking in multiple places. This is likely an error since URL integration should only be handled in one place to avoid conflicts. Make sure that:', \"- You are not using both 'linking' prop and 'useLinking'\", \"- You don't have 'useLinking' in multiple components\"].join('\\n').trim());\n    } else {\n      isUsingLinking = enabled !== false;\n    }\n    return function () {\n      isUsingLinking = false;\n    };\n  });\n  var _React$useState = React.useState(createMemoryHistory),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 1),\n    history = _React$useState2[0];\n  var enabledRef = React.useRef(enabled);\n  var configRef = React.useRef(config);\n  var getStateFromPathRef = React.useRef(getStateFromPath);\n  var getActionFromStateRef = React.useRef(getActionFromState);\n  var getPathFromStateRef = React.useRef(getPathFromState);\n  React.useEffect(function () {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getActionFromStateRef.current = getActionFromState;\n    getPathFromStateRef.current = getPathFromState;\n  });\n  var server = React.useContext(_ServerContext.default);\n  var getInitialState = React.useCallback(function () {\n    var value;\n    if (enabledRef.current) {\n      var _server$location;\n      var _location = (_server$location = server === null || server === void 0 ? void 0 : server.location) !== null && _server$location !== void 0 ? _server$location : typeof window !== 'undefined' ? window.location : undefined;\n      var path = _location ? _location.pathname + _location.search : undefined;\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n    var thenable = {\n      then: function then(onfulfilled) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch: function _catch() {\n        return thenable;\n      }\n    };\n    return thenable;\n  }, []);\n  var previousIndexRef = React.useRef(undefined);\n  var previousStateRef = React.useRef(undefined);\n  var pendingPopStatePathRef = React.useRef(undefined);\n  React.useEffect(function () {\n    previousIndexRef.current = history.index;\n    return history.listen(function () {\n      var _previousIndexRef$cur;\n      var navigation = ref.current;\n      if (!navigation || !enabled) {\n        return;\n      }\n      var path = location.pathname + location.search;\n      var index = history.index;\n      var previousIndex = (_previousIndexRef$cur = previousIndexRef.current) !== null && _previousIndexRef$cur !== void 0 ? _previousIndexRef$cur : 0;\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n      var record = history.get(index);\n      if ((record === null || record === void 0 ? void 0 : record.path) === path && record !== null && record !== void 0 && record.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n      var state = getStateFromPathRef.current(path, configRef.current);\n      if (state) {\n        var rootState = navigation.getRootState();\n        if (state.routes.some(function (r) {\n          return !(rootState !== null && rootState !== void 0 && rootState.routeNames.includes(r.name));\n        })) {\n          console.warn(\"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/5.x/configuring-links for more details on how to specify a linking configuration.\");\n          return;\n        }\n        if (index > previousIndex) {\n          var action = getActionFromStateRef.current(state, configRef.current);\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              console.warn(\"An error occurred when trying to handle the link '\".concat(path, \"': \").concat(e.message));\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n  React.useEffect(function () {\n    var _ref$current;\n    if (!enabled) {\n      return;\n    }\n    if (ref.current) {\n      var state = ref.current.getRootState();\n      if (state) {\n        var path = getPathFromStateRef.current(state, configRef.current);\n        if (previousStateRef.current === undefined) {\n          previousStateRef.current = state;\n        }\n        history.replace({\n          path: path,\n          state: state\n        });\n      }\n    }\n    var onStateChange = function onStateChange() {\n      var navigation, previousState, state, pendingPath, path, _findMatchingState, _findMatchingState2, previousFocusedState, focusedState, historyDelta, nextIndex, currentIndex;\n      return _regenerator.default.async(function onStateChange$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            navigation = ref.current;\n            if (!(!navigation || !enabled)) {\n              _context2.next = 3;\n              break;\n            }\n            return _context2.abrupt(\"return\");\n          case 3:\n            previousState = previousStateRef.current;\n            state = navigation.getRootState();\n            pendingPath = pendingPopStatePathRef.current;\n            path = getPathFromStateRef.current(state, configRef.current);\n            previousStateRef.current = state;\n            pendingPopStatePathRef.current = undefined;\n            _findMatchingState = findMatchingState(previousState, state), _findMatchingState2 = (0, _slicedToArray2.default)(_findMatchingState, 2), previousFocusedState = _findMatchingState2[0], focusedState = _findMatchingState2[1];\n            if (!(previousFocusedState && focusedState && path !== pendingPath)) {\n              _context2.next = 37;\n              break;\n            }\n            historyDelta = (focusedState.history ? focusedState.history.length : focusedState.routes.length) - (previousFocusedState.history ? previousFocusedState.history.length : previousFocusedState.routes.length);\n            if (!(historyDelta > 0)) {\n              _context2.next = 16;\n              break;\n            }\n            history.push({\n              path: path,\n              state: state\n            });\n            _context2.next = 35;\n            break;\n          case 16:\n            if (!(historyDelta < 0)) {\n              _context2.next = 34;\n              break;\n            }\n            nextIndex = history.backIndex({\n              path: path\n            });\n            currentIndex = history.index;\n            _context2.prev = 19;\n            if (!(nextIndex !== -1 && nextIndex < currentIndex)) {\n              _context2.next = 25;\n              break;\n            }\n            _context2.next = 23;\n            return _regenerator.default.awrap(history.go(nextIndex - currentIndex));\n          case 23:\n            _context2.next = 27;\n            break;\n          case 25:\n            _context2.next = 27;\n            return _regenerator.default.awrap(history.go(historyDelta));\n          case 27:\n            history.replace({\n              path: path,\n              state: state\n            });\n            _context2.next = 32;\n            break;\n          case 30:\n            _context2.prev = 30;\n            _context2.t0 = _context2[\"catch\"](19);\n          case 32:\n            _context2.next = 35;\n            break;\n          case 34:\n            history.replace({\n              path: path,\n              state: state\n            });\n          case 35:\n            _context2.next = 38;\n            break;\n          case 37:\n            history.replace({\n              path: path,\n              state: state\n            });\n          case 38:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, null, null, [[19, 30]], Promise);\n    };\n    return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.addListener('state', series(onStateChange));\n  });\n  return {\n    getInitialState: getInitialState\n  };\n}","map":{"version":3,"names":["React","_interopRequireWildcard","require","_core","_nonSecure","_ServerContext","_interopRequireDefault","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","createMemoryHistory","index","items","pending","interrupt","forEach","it","cb","history","_window$history$state","id","window","state","findIndex","item","backIndex","_ref","path","i","push","_ref2","nanoid","slice","length","pushState","replace","_ref3","_window$history$state2","_window$history$state3","replaceState","go","n","Math","min","Promise","resolve","reject","done","interrupted","clearTimeout","timer","Error","title","document","ref","setTimeout","splice","onPopState","last","pop","removeEventListener","addEventListener","listen","listener","findMatchingState","a","b","undefined","aHistoryLength","routes","bHistoryLength","aRoute","bRoute","aChildState","bChildState","series","handling","queue","callback","_regenerator","async","callback$","_context","prev","next","unshift","abrupt","awrap","finish","stop","isUsingLinking","useLinking","_ref4","_ref4$enabled","enabled","config","_ref4$getStateFromPat","getStateFromPath","getStateFromPathDefault","_ref4$getPathFromStat","getPathFromState","getPathFromStateDefault","_ref4$getActionFromSt","getActionFromState","getActionFromStateDefault","useEffect","join","trim","_React$useState","useState","_React$useState2","_slicedToArray2","enabledRef","useRef","configRef","getStateFromPathRef","getActionFromStateRef","getPathFromStateRef","current","server","useContext","ServerContext","getInitialState","useCallback","value","_server$location","location","pathname","search","thenable","then","onfulfilled","catch","_catch","previousIndexRef","previousStateRef","pendingPopStatePathRef","_previousIndexRef$cur","navigation","previousIndex","record","resetRoot","rootState","getRootState","some","r","routeNames","includes","name","console","warn","action","dispatch","e","concat","message","_ref$current","onStateChange","previousState","pendingPath","_findMatchingState","_findMatchingState2","previousFocusedState","focusedState","historyDelta","nextIndex","currentIndex","onStateChange$","_context2","t0","addListener"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\@react-navigation\\native\\lib\\module\\useLinking.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  getStateFromPath as getStateFromPathDefault,\n  getPathFromState as getPathFromStateDefault,\n  getActionFromState as getActionFromStateDefault,\n  NavigationContainerRef,\n  NavigationState,\n} from '@react-navigation/core';\nimport { nanoid } from 'nanoid/non-secure';\nimport ServerContext from './ServerContext';\nimport type { LinkingOptions } from './types';\n\ntype ResultState = ReturnType<typeof getStateFromPathDefault>;\n\ntype HistoryRecord = {\n  // Unique identifier for this record to match it with window.history.state\n  id: string;\n  // Navigation state object for the history entry\n  state: NavigationState;\n  // Path of the history entry\n  path: string;\n};\n\nconst createMemoryHistory = () => {\n  let index = 0;\n  let items: HistoryRecord[] = [];\n\n  // Pending callbacks for `history.go(n)`\n  // We might modify the callback stored if it was interrupted, so we have a ref to identify it\n  const pending: { ref: unknown; cb: (interrupted?: boolean) => void }[] = [];\n\n  const interrupt = () => {\n    // If another history operation was performed we need to interrupt existing ones\n    // This makes sure that calls such as `history.replace` after `history.go` don't happen\n    // Since otherwise it won't be correct if something else has changed\n    pending.forEach((it) => {\n      const cb = it.cb;\n      it.cb = () => cb(true);\n    });\n  };\n\n  const history = {\n    get index(): number {\n      // We store an id in the state instead of an index\n      // Index could get out of sync with in-memory values if page reloads\n      const id = window.history.state?.id;\n\n      if (id) {\n        const index = items.findIndex((item) => item.id === id);\n\n        return index > -1 ? index : 0;\n      }\n\n      return 0;\n    },\n\n    get(index: number) {\n      return items[index];\n    },\n\n    backIndex({ path }: { path: string }) {\n      // We need to find the index from the element before current to get closest path to go back to\n      for (let i = index - 1; i >= 0; i--) {\n        const item = items[i];\n\n        if (item.path === path) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n\n    push({ path, state }: { path: string; state: NavigationState }) {\n      interrupt();\n\n      const id = nanoid();\n\n      // When a new entry is pushed, all the existing entries after index will be inaccessible\n      // So we remove any existing entries after the current index to clean them up\n      items = items.slice(0, index + 1);\n\n      items.push({ path, state, id });\n      index = items.length - 1;\n\n      // We pass empty string for title because it's ignored in all browsers except safari\n      // We don't store state object in history.state because:\n      // - browsers have limits on how big it can be, and we don't control the size\n      // - while not recommended, there could be non-serializable data in state\n      window.history.pushState({ id }, '', path);\n    },\n\n    replace({ path, state }: { path: string; state: NavigationState }) {\n      interrupt();\n\n      const id = window.history.state?.id ?? nanoid();\n\n      if (items.length) {\n        items[index] = { path, state, id };\n      } else {\n        // This is the first time any state modifications are done\n        // So we need to push the entry as there's nothing to replace\n        items.push({ path, state, id });\n      }\n\n      window.history.replaceState({ id }, '', path);\n    },\n\n    // `history.go(n)` is asynchronous, there are couple of things to keep in mind:\n    // - it won't do anything if we can't go `n` steps, the `popstate` event won't fire.\n    // - each `history.go(n)` call will trigger a separate `popstate` event with correct location.\n    // - the `popstate` event fires before the next frame after calling `history.go(n)`.\n    // This method differs from `history.go(n)` in the sense that it'll go back as many steps it can.\n    go(n: number) {\n      interrupt();\n\n      if (n > 0) {\n        // We shouldn't go forward more than available index\n        n = Math.min(n, items.length - 1);\n      } else if (n < 0) {\n        // We shouldn't go back more than the 0 index\n        // Otherwise we'll exit the page\n        n = index + n < 0 ? -index : n;\n      }\n\n      if (n === 0) {\n        return;\n      }\n\n      index += n;\n\n      // When we call `history.go`, `popstate` will fire when there's history to go back to\n      // So we need to somehow handle following cases:\n      // - There's history to go back, `history.go` is called, and `popstate` fires\n      // - `history.go` is called multiple times, we need to resolve on respective `popstate`\n      // - No history to go back, but `history.go` was called, browser has no API to detect it\n      return new Promise<void>((resolve, reject) => {\n        const done = (interrupted?: boolean) => {\n          clearTimeout(timer);\n\n          if (interrupted) {\n            reject(new Error('History was changed during navigation.'));\n            return;\n          }\n\n          // There seems to be a bug in Chrome regarding updating the title\n          // If we set a title just before calling `history.go`, the title gets lost\n          // However the value of `document.title` is still what we set it to\n          // It's just not displayed in the tab bar\n          // To update the tab bar, we need to reset the title to something else first (e.g. '')\n          // And set the title to what it was before so it gets applied\n          // It won't work without setting it to empty string coz otherwise title isn't changing\n          // Which means that the browser won't do anything after setting the title\n          const { title } = window.document;\n\n          window.document.title = '';\n          window.document.title = title;\n\n          resolve();\n        };\n\n        pending.push({ ref: done, cb: done });\n\n        // If navigation didn't happen within 100ms, assume that it won't happen\n        // This may not be accurate, but hopefully it won't take so much time\n        // In Chrome, navigation seems to happen instantly in next microtask\n        // But on Firefox, it seems to take much longer, around 50ms from our testing\n        // We're using a hacky timeout since there doesn't seem to be way to know for sure\n        const timer = setTimeout(() => {\n          const index = pending.findIndex((it) => it.ref === done);\n\n          if (index > -1) {\n            pending[index].cb();\n            pending.splice(index, 1);\n          }\n        }, 100);\n\n        const onPopState = () => {\n          const last = pending.pop();\n\n          window.removeEventListener('popstate', onPopState);\n          last?.cb();\n        };\n\n        window.addEventListener('popstate', onPopState);\n        window.history.go(n);\n      });\n    },\n\n    // The `popstate` event is triggered when history changes, except `pushState` and `replaceState`\n    // If we call `history.go(n)` ourselves, we don't want it to trigger the listener\n    // Here we normalize it so that only external changes (e.g. user pressing back/forward) trigger the listener\n    listen(listener: () => void) {\n      const onPopState = () => {\n        if (pending.length) {\n          // This was triggered by `history.go(n)`, we shouldn't call the listener\n          return;\n        }\n\n        listener();\n      };\n\n      window.addEventListener('popstate', onPopState);\n\n      return () => window.removeEventListener('popstate', onPopState);\n    },\n  };\n\n  return history;\n};\n\n/**\n * Find the matching navigation state that changed between 2 navigation states\n * e.g.: a -> b -> c -> d and a -> b -> c -> e -> f, if history in b changed, b is the matching state\n */\nconst findMatchingState = <T extends NavigationState>(\n  a: T | undefined,\n  b: T | undefined\n): [T | undefined, T | undefined] => {\n  if (a === undefined || b === undefined || a.key !== b.key) {\n    return [undefined, undefined];\n  }\n\n  // Tab and drawer will have `history` property, but stack will have history in `routes`\n  const aHistoryLength = a.history ? a.history.length : a.routes.length;\n  const bHistoryLength = b.history ? b.history.length : b.routes.length;\n\n  const aRoute = a.routes[a.index];\n  const bRoute = b.routes[b.index];\n\n  const aChildState = aRoute.state as T | undefined;\n  const bChildState = bRoute.state as T | undefined;\n\n  // Stop here if this is the state object that changed:\n  // - history length is different\n  // - focused routes are different\n  // - one of them doesn't have child state\n  // - child state keys are different\n  if (\n    aHistoryLength !== bHistoryLength ||\n    aRoute.key !== bRoute.key ||\n    aChildState === undefined ||\n    bChildState === undefined ||\n    aChildState.key !== bChildState.key\n  ) {\n    return [a, b];\n  }\n\n  return findMatchingState(aChildState, bChildState);\n};\n\n/**\n * Run async function in series as it's called.\n */\nconst series = (cb: () => Promise<void>) => {\n  // Whether we're currently handling a callback\n  let handling = false;\n  let queue: (() => Promise<void>)[] = [];\n\n  const callback = async () => {\n    try {\n      if (handling) {\n        // If we're currently handling a previous event, wait before handling this one\n        // Add the callback to the beginning of the queue\n        queue.unshift(callback);\n        return;\n      }\n\n      handling = true;\n\n      await cb();\n    } finally {\n      handling = false;\n\n      if (queue.length) {\n        // If we have queued items, handle the last one\n        const last = queue.pop();\n\n        last?.();\n      }\n    }\n  };\n\n  return callback;\n};\n\nlet isUsingLinking = false;\n\nexport default function useLinking(\n  ref: React.RefObject<NavigationContainerRef>,\n  {\n    enabled = true,\n    config,\n    getStateFromPath = getStateFromPathDefault,\n    getPathFromState = getPathFromStateDefault,\n    getActionFromState = getActionFromStateDefault,\n  }: LinkingOptions\n) {\n  React.useEffect(() => {\n    if (enabled !== false && isUsingLinking) {\n      throw new Error(\n        [\n          'Looks like you have configured linking in multiple places. This is likely an error since URL integration should only be handled in one place to avoid conflicts. Make sure that:',\n          \"- You are not using both 'linking' prop and 'useLinking'\",\n          \"- You don't have 'useLinking' in multiple components\",\n        ]\n          .join('\\n')\n          .trim()\n      );\n    } else {\n      isUsingLinking = enabled !== false;\n    }\n\n    return () => {\n      isUsingLinking = false;\n    };\n  });\n\n  const [history] = React.useState(createMemoryHistory);\n\n  // We store these options in ref to avoid re-creating getInitialState and re-subscribing listeners\n  // This lets user avoid wrapping the items in `React.useCallback` or `React.useMemo`\n  // Not re-creating `getInitialState` is important coz it makes it easier for the user to use in an effect\n  const enabledRef = React.useRef(enabled);\n  const configRef = React.useRef(config);\n  const getStateFromPathRef = React.useRef(getStateFromPath);\n  const getActionFromStateRef = React.useRef(getActionFromState);\n  const getPathFromStateRef = React.useRef(getPathFromState);\n\n  React.useEffect(() => {\n    enabledRef.current = enabled;\n    configRef.current = config;\n    getStateFromPathRef.current = getStateFromPath;\n    getActionFromStateRef.current = getActionFromState;\n    getPathFromStateRef.current = getPathFromState;\n  });\n\n  const server = React.useContext(ServerContext);\n\n  const getInitialState = React.useCallback(() => {\n    let value: ResultState | undefined;\n\n    if (enabledRef.current) {\n      const location =\n        server?.location ??\n        (typeof window !== 'undefined' ? window.location : undefined);\n\n      const path = location ? location.pathname + location.search : undefined;\n\n      if (path) {\n        value = getStateFromPathRef.current(path, configRef.current);\n      }\n    }\n\n    const thenable = {\n      then(onfulfilled?: (state: ResultState | undefined) => void) {\n        return Promise.resolve(onfulfilled ? onfulfilled(value) : value);\n      },\n      catch() {\n        return thenable;\n      },\n    };\n\n    return thenable as PromiseLike<ResultState | undefined>;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const previousIndexRef = React.useRef<number | undefined>(undefined);\n  const previousStateRef = React.useRef<NavigationState | undefined>(undefined);\n  const pendingPopStatePathRef = React.useRef<string | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousIndexRef.current = history.index;\n\n    return history.listen(() => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const path = location.pathname + location.search;\n      const index = history.index;\n\n      const previousIndex = previousIndexRef.current ?? 0;\n\n      previousIndexRef.current = index;\n      pendingPopStatePathRef.current = path;\n\n      // When browser back/forward is clicked, we first need to check if state object for this index exists\n      // If it does we'll reset to that state object\n      // Otherwise, we'll handle it like a regular deep link\n      const record = history.get(index);\n\n      if (record?.path === path && record?.state) {\n        navigation.resetRoot(record.state);\n        return;\n      }\n\n      const state = getStateFromPathRef.current(path, configRef.current);\n\n      // We should only dispatch an action when going forward\n      // Otherwise the action will likely add items to history, which would mess things up\n      if (state) {\n        // Make sure that the routes in the state exist in the root navigator\n        // Otherwise there's an error in the linking configuration\n        const rootState = navigation.getRootState();\n\n        if (state.routes.some((r) => !rootState?.routeNames.includes(r.name))) {\n          console.warn(\n            \"The navigation state parsed from the URL contains routes not present in the root navigator. This usually means that the linking configuration doesn't match the navigation structure. See https://reactnavigation.org/docs/5.x/configuring-links for more details on how to specify a linking configuration.\"\n          );\n          return;\n        }\n\n        if (index > previousIndex) {\n          const action = getActionFromStateRef.current(\n            state,\n            configRef.current\n          );\n\n          if (action !== undefined) {\n            try {\n              navigation.dispatch(action);\n            } catch (e) {\n              // Ignore any errors from deep linking.\n              // This could happen in case of malformed links, navigation object not being initialized etc.\n              console.warn(\n                `An error occurred when trying to handle the link '${path}': ${e.message}`\n              );\n            }\n          } else {\n            navigation.resetRoot(state);\n          }\n        } else {\n          navigation.resetRoot(state);\n        }\n      } else {\n        // if current path didn't return any state, we should revert to initial state\n        navigation.resetRoot(state);\n      }\n    });\n  }, [enabled, history, ref]);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      return;\n    }\n\n    if (ref.current) {\n      // We need to record the current metadata on the first render if they aren't set\n      // This will allow the initial state to be in the history entry\n      const state = ref.current.getRootState();\n\n      if (state) {\n        const path = getPathFromStateRef.current(state, configRef.current);\n\n        if (previousStateRef.current === undefined) {\n          previousStateRef.current = state;\n        }\n\n        history.replace({ path, state });\n      }\n    }\n\n    const onStateChange = async () => {\n      const navigation = ref.current;\n\n      if (!navigation || !enabled) {\n        return;\n      }\n\n      const previousState = previousStateRef.current;\n      const state = navigation.getRootState();\n\n      const pendingPath = pendingPopStatePathRef.current;\n      const path = getPathFromStateRef.current(state, configRef.current);\n\n      previousStateRef.current = state;\n      pendingPopStatePathRef.current = undefined;\n\n      // To detect the kind of state change, we need to:\n      // - Find the common focused navigation state in previous and current state\n      // - If only the route keys changed, compare history/routes.length to check if we go back/forward/replace\n      // - If no common focused navigation state found, it's a replace\n      const [previousFocusedState, focusedState] = findMatchingState(\n        previousState,\n        state\n      );\n\n      if (\n        previousFocusedState &&\n        focusedState &&\n        // We should only handle push/pop if path changed from what was in last `popstate`\n        // Otherwise it's likely a change triggered by `popstate`\n        path !== pendingPath\n      ) {\n        const historyDelta =\n          (focusedState.history\n            ? focusedState.history.length\n            : focusedState.routes.length) -\n          (previousFocusedState.history\n            ? previousFocusedState.history.length\n            : previousFocusedState.routes.length);\n\n        if (historyDelta > 0) {\n          // If history length is increased, we should pushState\n          // Note that path might not actually change here, for example, drawer open should pushState\n          history.push({ path, state });\n        } else if (historyDelta < 0) {\n          // If history length is decreased, i.e. entries were removed, we want to go back\n\n          const nextIndex = history.backIndex({ path });\n          const currentIndex = history.index;\n\n          try {\n            if (nextIndex !== -1 && nextIndex < currentIndex) {\n              // An existing entry for this path exists and it's less than current index, go back to that\n              await history.go(nextIndex - currentIndex);\n            } else {\n              // We couldn't find an existing entry to go back to, so we'll go back by the delta\n              // This won't be correct if multiple routes were pushed in one go before\n              // Usually this shouldn't happen and this is a fallback for that\n              await history.go(historyDelta);\n            }\n\n            // Store the updated state as well as fix the path if incorrect\n            history.replace({ path, state });\n          } catch (e) {\n            // The navigation was interrupted\n          }\n        } else {\n          // If history length is unchanged, we want to replaceState\n          history.replace({ path, state });\n        }\n      } else {\n        // If no common navigation state was found, assume it's a replace\n        // This would happen if the user did a reset/conditionally changed navigators\n        history.replace({ path, state });\n      }\n    };\n\n    // We debounce onStateChange coz we don't want multiple state changes to be handled at one time\n    // This could happen since `history.go(n)` is asynchronous\n    // If `pushState` or `replaceState` were called before `history.go(n)` completes, it'll mess stuff up\n    return ref.current?.addListener('state', series(onStateChange));\n  });\n\n  return {\n    getInitialState,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}