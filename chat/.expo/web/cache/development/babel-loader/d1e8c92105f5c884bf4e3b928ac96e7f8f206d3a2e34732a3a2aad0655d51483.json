{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _hammerjs = _interopRequireDefault(require(\"@egjs/hammerjs\"));\nvar _constants = require(\"./constants\");\nvar _Errors = require(\"./Errors\");\nvar _DraggingGestureHandler = _interopRequireDefault(require(\"./DraggingGestureHandler\"));\nvar _utils = require(\"./utils\");\nvar _excluded = [\"numberOfPointers\", \"direction\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar FlingGestureHandler = function (_DraggingGestureHandl) {\n  (0, _inherits2.default)(FlingGestureHandler, _DraggingGestureHandl);\n  var _super = _createSuper(FlingGestureHandler);\n  function FlingGestureHandler() {\n    (0, _classCallCheck2.default)(this, FlingGestureHandler);\n    return _super.apply(this, arguments);\n  }\n  (0, _createClass2.default)(FlingGestureHandler, [{\n    key: \"name\",\n    get: function get() {\n      return 'swipe';\n    }\n  }, {\n    key: \"NativeGestureClass\",\n    get: function get() {\n      return _hammerjs.default.Swipe;\n    }\n  }, {\n    key: \"onGestureActivated\",\n    value: function onGestureActivated(event) {\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: _hammerjs.default.INPUT_MOVE,\n        isFinal: false,\n        isFirst: true\n      }));\n      this.isGestureRunning = false;\n      this.hasGestureFailed = false;\n      this.sendEvent(_objectSpread(_objectSpread({}, event), {}, {\n        eventType: _hammerjs.default.INPUT_END,\n        isFinal: true\n      }));\n    }\n  }, {\n    key: \"onRawEvent\",\n    value: function onRawEvent(ev) {\n      var _this = this;\n      (0, _get2.default)((0, _getPrototypeOf2.default)(FlingGestureHandler.prototype), \"onRawEvent\", this).call(this, ev);\n      if (this.hasGestureFailed) {\n        return;\n      }\n      if (ev.isFinal) {\n        setTimeout(function () {\n          if (_this.isGestureRunning) {\n            _this.cancelEvent(ev);\n          }\n        });\n      } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n        var gesture = this.hammer.get(this.name);\n        if (gesture.options.enable(gesture, ev)) {\n          this.onStart(ev);\n          this.sendEvent(ev);\n        }\n      }\n    }\n  }, {\n    key: \"getHammerConfig\",\n    value: function getHammerConfig() {\n      return {\n        pointers: this.config.numberOfPointers,\n        direction: this.getDirection()\n      };\n    }\n  }, {\n    key: \"getTargetDirections\",\n    value: function getTargetDirections(direction) {\n      var directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(_hammerjs.default.DIRECTION_RIGHT);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(_hammerjs.default.DIRECTION_LEFT);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(_hammerjs.default.DIRECTION_UP);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(_hammerjs.default.DIRECTION_DOWN);\n      }\n      return directions;\n    }\n  }, {\n    key: \"getDirection\",\n    value: function getDirection() {\n      var _this$getConfig = this.getConfig(),\n        direction = _this$getConfig.direction;\n      var directions = [];\n      if (direction & _constants.Direction.RIGHT) {\n        directions.push(_hammerjs.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.LEFT) {\n        directions.push(_hammerjs.default.DIRECTION_HORIZONTAL);\n      }\n      if (direction & _constants.Direction.UP) {\n        directions.push(_hammerjs.default.DIRECTION_VERTICAL);\n      }\n      if (direction & _constants.Direction.DOWN) {\n        directions.push(_hammerjs.default.DIRECTION_VERTICAL);\n      }\n      directions = (0, _toConsumableArray2.default)(new Set(directions));\n      if (directions.length === 0) return _hammerjs.default.DIRECTION_NONE;\n      if (directions.length === 1) return directions[0];\n      return _hammerjs.default.DIRECTION_ALL;\n    }\n  }, {\n    key: \"isGestureEnabledForEvent\",\n    value: function isGestureEnabledForEvent(_ref, _recognizer, _ref2) {\n      var numberOfPointers = _ref.numberOfPointers;\n      var pointerLength = _ref2.maxPointers;\n      var validPointerCount = pointerLength === numberOfPointers;\n      if (!validPointerCount && this.isGestureRunning) {\n        return {\n          failed: true\n        };\n      }\n      return {\n        success: validPointerCount\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref3) {\n      var _ref3$numberOfPointer = _ref3.numberOfPointers,\n        numberOfPointers = _ref3$numberOfPointer === void 0 ? 1 : _ref3$numberOfPointer,\n        direction = _ref3.direction,\n        props = (0, _objectWithoutProperties2.default)(_ref3, _excluded);\n      if ((0, _utils.isnan)(direction) || typeof direction !== 'number') {\n        throw new _Errors.GesturePropError('direction', direction, 'number');\n      }\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(FlingGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        numberOfPointers: numberOfPointers,\n        direction: direction\n      }, props));\n    }\n  }]);\n  return FlingGestureHandler;\n}(_DraggingGestureHandler.default);\nvar _default = FlingGestureHandler;\nexports.default = _default;","map":{"version":3,"names":["_hammerjs","_interopRequireDefault","require","_constants","_Errors","_DraggingGestureHandler","_utils","_excluded","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty2","default","getOwnPropertyDescriptors","defineProperties","defineProperty","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Boolean","prototype","valueOf","call","e","FlingGestureHandler","_DraggingGestureHandl","_inherits2","_super","_classCallCheck2","_createClass2","get","Hammer","Swipe","value","onGestureActivated","event","sendEvent","eventType","INPUT_MOVE","isFinal","isFirst","isGestureRunning","hasGestureFailed","INPUT_END","onRawEvent","ev","_this","_get2","setTimeout","cancelEvent","gesture","hammer","name","options","enable","onStart","getHammerConfig","pointers","config","numberOfPointers","direction","getDirection","getTargetDirections","directions","Direction","RIGHT","DIRECTION_RIGHT","LEFT","DIRECTION_LEFT","UP","DIRECTION_UP","DOWN","DIRECTION_DOWN","_this$getConfig","getConfig","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","_toConsumableArray2","Set","DIRECTION_NONE","DIRECTION_ALL","isGestureEnabledForEvent","_ref","_recognizer","_ref2","pointerLength","maxPointers","validPointerCount","failed","success","updateGestureConfig","_ref3","_ref3$numberOfPointer","props","_objectWithoutProperties2","isnan","GesturePropError","DraggingGestureHandler","_default","exports"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\react-native-gesture-handler\\lib\\module\\web_hammer\\FlingGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\nimport { HammerInputExt } from './GestureHandler';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event: HammerInputExt) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore FIXME(TS)\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      // @ts-ignore FIXME(TS)\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction: number) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    // @ts-ignore FIXME(TS)\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    { numberOfPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }: any) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}