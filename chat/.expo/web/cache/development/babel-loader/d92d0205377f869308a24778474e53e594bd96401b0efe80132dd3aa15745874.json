{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _color = _interopRequireDefault(require(\"color\"));\nvar _CardSheet = _interopRequireDefault(require(\"./CardSheet\"));\nvar _GestureHandler = require(\"../GestureHandler\");\nvar _CardAnimationContext = _interopRequireDefault(require(\"../../utils/CardAnimationContext\"));\nvar _getDistanceForDirection = _interopRequireDefault(require(\"../../utils/getDistanceForDirection\"));\nvar _getInvertedMultiplier = _interopRequireDefault(require(\"../../utils/getInvertedMultiplier\"));\nvar _memoize = _interopRequireDefault(require(\"../../utils/memoize\"));\nvar _excluded = [\"styleInterpolator\", \"index\", \"current\", \"gesture\", \"next\", \"layout\", \"insets\", \"overlay\", \"overlayEnabled\", \"shadowEnabled\", \"gestureEnabled\", \"gestureDirection\", \"pageOverflowEnabled\", \"children\", \"containerStyle\", \"contentStyle\"];\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty3.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar GESTURE_VELOCITY_IMPACT = 0.3;\nvar TRUE = 1;\nvar FALSE = 0;\nvar GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nvar GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\nvar useNativeDriver = _reactNative.Platform.OS !== 'web';\nvar Card = function (_React$Component) {\n  (0, _inherits2.default)(Card, _React$Component);\n  var _super = _createSuper(Card);\n  function Card() {\n    var _this;\n    (0, _classCallCheck2.default)(this, Card);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"isCurrentlyMounted\", false);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"isClosing\", new _reactNative.Animated.Value(FALSE));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"inverted\", new _reactNative.Animated.Value((0, _getInvertedMultiplier.default)(_this.props.gestureDirection)));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"layout\", {\n      width: new _reactNative.Animated.Value(_this.props.layout.width),\n      height: new _reactNative.Animated.Value(_this.props.layout.height)\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"isSwiping\", new _reactNative.Animated.Value(FALSE));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"interactionHandle\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"pendingGestureCallback\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"lastToValue\", void 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"animate\", function (_ref) {\n      var closing = _ref.closing,\n        velocity = _ref.velocity;\n      var _this$props = _this.props,\n        gesture = _this$props.gesture,\n        transitionSpec = _this$props.transitionSpec,\n        onOpen = _this$props.onOpen,\n        onClose = _this$props.onClose,\n        onTransitionStart = _this$props.onTransitionStart;\n      var toValue = _this.getAnimateToValue(_objectSpread(_objectSpread({}, _this.props), {}, {\n        closing: closing\n      }));\n      _this.lastToValue = toValue;\n      var spec = closing ? transitionSpec.close : transitionSpec.open;\n      var animation = spec.animation === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;\n      _this.setPointerEventsEnabled(!closing);\n      _this.handleStartInteraction();\n      clearTimeout(_this.pendingGestureCallback);\n      onTransitionStart === null || onTransitionStart === void 0 ? void 0 : onTransitionStart({\n        closing: closing\n      });\n      animation(gesture, _objectSpread(_objectSpread({}, spec.config), {}, {\n        velocity: velocity,\n        toValue: toValue,\n        useNativeDriver: useNativeDriver,\n        isInteraction: false\n      })).start(function (_ref2) {\n        var finished = _ref2.finished;\n        _this.handleEndInteraction();\n        clearTimeout(_this.pendingGestureCallback);\n        if (finished) {\n          if (closing) {\n            onClose();\n          } else {\n            onOpen();\n          }\n          if (_this.isCurrentlyMounted) {\n            _this.forceUpdate();\n          }\n        }\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getAnimateToValue\", function (_ref3) {\n      var closing = _ref3.closing,\n        layout = _ref3.layout,\n        gestureDirection = _ref3.gestureDirection;\n      if (!closing) {\n        return 0;\n      }\n      return (0, _getDistanceForDirection.default)(layout, gestureDirection);\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"setPointerEventsEnabled\", function (enabled) {\n      var _this$contentRef$curr;\n      var pointerEvents = enabled ? 'box-none' : 'none';\n      (_this$contentRef$curr = _this.contentRef.current) === null || _this$contentRef$curr === void 0 ? void 0 : _this$contentRef$curr.setNativeProps({\n        pointerEvents: pointerEvents\n      });\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleStartInteraction\", function () {\n      if (_this.interactionHandle === undefined) {\n        _this.interactionHandle = _reactNative.InteractionManager.createInteractionHandle();\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleEndInteraction\", function () {\n      if (_this.interactionHandle !== undefined) {\n        _reactNative.InteractionManager.clearInteractionHandle(_this.interactionHandle);\n        _this.interactionHandle = undefined;\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"handleGestureStateChange\", function (_ref4) {\n      var nativeEvent = _ref4.nativeEvent;\n      var _this$props2 = _this.props,\n        layout = _this$props2.layout,\n        onClose = _this$props2.onClose,\n        onGestureBegin = _this$props2.onGestureBegin,\n        onGestureCanceled = _this$props2.onGestureCanceled,\n        onGestureEnd = _this$props2.onGestureEnd,\n        gestureDirection = _this$props2.gestureDirection,\n        gestureVelocityImpact = _this$props2.gestureVelocityImpact;\n      switch (nativeEvent.state) {\n        case _GestureHandler.GestureState.BEGAN:\n          _this.isSwiping.setValue(TRUE);\n          _this.handleStartInteraction();\n          onGestureBegin === null || onGestureBegin === void 0 ? void 0 : onGestureBegin();\n          break;\n        case _GestureHandler.GestureState.CANCELLED:\n          {\n            _this.isSwiping.setValue(FALSE);\n            _this.handleEndInteraction();\n            var velocity = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? nativeEvent.velocityY : nativeEvent.velocityX;\n            _this.animate({\n              closing: _this.props.closing,\n              velocity: velocity\n            });\n            onGestureCanceled === null || onGestureCanceled === void 0 ? void 0 : onGestureCanceled();\n            break;\n          }\n        case _GestureHandler.GestureState.END:\n          {\n            _this.isSwiping.setValue(FALSE);\n            var distance;\n            var translation;\n            var _velocity;\n            if (gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted') {\n              distance = layout.height;\n              translation = nativeEvent.translationY;\n              _velocity = nativeEvent.velocityY;\n            } else {\n              distance = layout.width;\n              translation = nativeEvent.translationX;\n              _velocity = nativeEvent.velocityX;\n            }\n            var closing = (translation + _velocity * gestureVelocityImpact) * (0, _getInvertedMultiplier.default)(gestureDirection) > distance / 2 ? _velocity !== 0 || translation !== 0 : _this.props.closing;\n            _this.animate({\n              closing: closing,\n              velocity: _velocity\n            });\n            if (closing) {\n              _this.pendingGestureCallback = setTimeout(function () {\n                onClose();\n                _this.forceUpdate();\n              }, 32);\n            }\n            onGestureEnd === null || onGestureEnd === void 0 ? void 0 : onGestureEnd();\n            break;\n          }\n      }\n    });\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getInterpolatedStyle\", (0, _memoize.default)(function (styleInterpolator, index, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return styleInterpolator({\n        index: index,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      });\n    }));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"getCardAnimationContext\", (0, _memoize.default)(function (index, current, next, layout, insetTop, insetRight, insetBottom, insetLeft) {\n      return {\n        index: index,\n        current: {\n          progress: current\n        },\n        next: next && {\n          progress: next\n        },\n        closing: _this.isClosing,\n        swiping: _this.isSwiping,\n        inverted: _this.inverted,\n        layouts: {\n          screen: layout\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft\n        }\n      };\n    }));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"contentRef\", React.createRef());\n    return _this;\n  }\n  (0, _createClass2.default)(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.animate({\n        closing: this.props.closing\n      });\n      this.isCurrentlyMounted = true;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props3 = this.props,\n        layout = _this$props3.layout,\n        gestureDirection = _this$props3.gestureDirection,\n        closing = _this$props3.closing;\n      var width = layout.width,\n        height = layout.height;\n      if (width !== prevProps.layout.width) {\n        this.layout.width.setValue(width);\n      }\n      if (height !== prevProps.layout.height) {\n        this.layout.height.setValue(height);\n      }\n      if (gestureDirection !== prevProps.gestureDirection) {\n        this.inverted.setValue((0, _getInvertedMultiplier.default)(gestureDirection));\n      }\n      var toValue = this.getAnimateToValue(this.props);\n      if (this.getAnimateToValue(prevProps) !== toValue || this.lastToValue !== toValue) {\n        this.animate({\n          closing: closing\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isCurrentlyMounted = false;\n      this.handleEndInteraction();\n    }\n  }, {\n    key: \"gestureActivationCriteria\",\n    value: function gestureActivationCriteria() {\n      var _this$props4 = this.props,\n        layout = _this$props4.layout,\n        gestureDirection = _this$props4.gestureDirection,\n        gestureResponseDistance = _this$props4.gestureResponseDistance;\n      var distance = gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? (gestureResponseDistance === null || gestureResponseDistance === void 0 ? void 0 : gestureResponseDistance.vertical) !== undefined ? gestureResponseDistance.vertical : GESTURE_RESPONSE_DISTANCE_VERTICAL : (gestureResponseDistance === null || gestureResponseDistance === void 0 ? void 0 : gestureResponseDistance.horizontal) !== undefined ? gestureResponseDistance.horizontal : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n      if (gestureDirection === 'vertical') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: 5,\n          hitSlop: {\n            bottom: -layout.height + distance\n          }\n        };\n      } else if (gestureDirection === 'vertical-inverted') {\n        return {\n          maxDeltaX: 15,\n          minOffsetY: -5,\n          hitSlop: {\n            top: -layout.height + distance\n          }\n        };\n      } else {\n        var hitSlop = -layout.width + distance;\n        var invertedMultiplier = (0, _getInvertedMultiplier.default)(gestureDirection);\n        if (invertedMultiplier === 1) {\n          return {\n            minOffsetX: 5,\n            maxDeltaY: 20,\n            hitSlop: {\n              right: hitSlop\n            }\n          };\n        } else {\n          return {\n            minOffsetX: -5,\n            maxDeltaY: 20,\n            hitSlop: {\n              left: hitSlop\n            }\n          };\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props5 = this.props,\n        styleInterpolator = _this$props5.styleInterpolator,\n        index = _this$props5.index,\n        current = _this$props5.current,\n        gesture = _this$props5.gesture,\n        next = _this$props5.next,\n        layout = _this$props5.layout,\n        insets = _this$props5.insets,\n        overlay = _this$props5.overlay,\n        overlayEnabled = _this$props5.overlayEnabled,\n        shadowEnabled = _this$props5.shadowEnabled,\n        gestureEnabled = _this$props5.gestureEnabled,\n        gestureDirection = _this$props5.gestureDirection,\n        pageOverflowEnabled = _this$props5.pageOverflowEnabled,\n        children = _this$props5.children,\n        customContainerStyle = _this$props5.containerStyle,\n        contentStyle = _this$props5.contentStyle,\n        rest = (0, _objectWithoutProperties2.default)(_this$props5, _excluded);\n      var interpolatedStyle = this.getInterpolatedStyle(styleInterpolator, index, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var animationContext = this.getCardAnimationContext(index, current, next, layout, insets.top, insets.right, insets.bottom, insets.left);\n      var containerStyle = interpolatedStyle.containerStyle,\n        cardStyle = interpolatedStyle.cardStyle,\n        overlayStyle = interpolatedStyle.overlayStyle,\n        shadowStyle = interpolatedStyle.shadowStyle;\n      var handleGestureEvent = gestureEnabled ? _reactNative.Animated.event([{\n        nativeEvent: gestureDirection === 'vertical' || gestureDirection === 'vertical-inverted' ? {\n          translationY: gesture\n        } : {\n          translationX: gesture\n        }\n      }], {\n        useNativeDriver: useNativeDriver\n      }) : undefined;\n      var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(contentStyle || {}),\n        backgroundColor = _StyleSheet$flatten.backgroundColor;\n      var isTransparent = typeof backgroundColor === 'string' ? (0, _color.default)(backgroundColor).alpha() === 0 : false;\n      return React.createElement(_CardAnimationContext.default.Provider, {\n        value: animationContext\n      }, React.createElement(_reactNative.Animated.View, {\n        style: {\n          opacity: current\n        },\n        collapsable: false\n      }), React.createElement(_reactNative.View, _extends({\n        pointerEvents: \"box-none\"\n      }, rest), overlayEnabled ? React.createElement(_reactNative.View, {\n        pointerEvents: \"box-none\",\n        style: _reactNative.StyleSheet.absoluteFill\n      }, overlay({\n        style: overlayStyle\n      })) : null, React.createElement(_reactNative.Animated.View, {\n        style: [styles.container, containerStyle, customContainerStyle],\n        pointerEvents: \"box-none\"\n      }, React.createElement(_GestureHandler.PanGestureHandler, _extends({\n        enabled: layout.width !== 0 && gestureEnabled,\n        onGestureEvent: handleGestureEvent,\n        onHandlerStateChange: this.handleGestureStateChange\n      }, this.gestureActivationCriteria()), React.createElement(_reactNative.Animated.View, {\n        style: [styles.container, cardStyle]\n      }, shadowEnabled && shadowStyle && !isTransparent ? React.createElement(_reactNative.Animated.View, {\n        style: [styles.shadow, gestureDirection === 'horizontal' ? [styles.shadowHorizontal, styles.shadowLeft] : gestureDirection === 'horizontal-inverted' ? [styles.shadowHorizontal, styles.shadowRight] : gestureDirection === 'vertical' ? [styles.shadowVertical, styles.shadowTop] : [styles.shadowVertical, styles.shadowBottom], {\n          backgroundColor: backgroundColor\n        }, shadowStyle],\n        pointerEvents: \"none\"\n      }) : null, React.createElement(_CardSheet.default, {\n        ref: this.contentRef,\n        enabled: pageOverflowEnabled,\n        layout: layout,\n        style: contentStyle\n      }, children))))));\n    }\n  }]);\n  return Card;\n}(React.Component);\nexports.default = Card;\n_defineProperty(Card, \"defaultProps\", {\n  overlayEnabled: _reactNative.Platform.OS !== 'ios',\n  shadowEnabled: true,\n  gestureEnabled: true,\n  gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n  overlay: function overlay(_ref5) {\n    var style = _ref5.style;\n    return style ? React.createElement(_reactNative.Animated.View, {\n      pointerEvents: \"none\",\n      style: [styles.overlay, style]\n    }) : null;\n  }\n});\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: {\n      width: -1,\n      height: 1\n    }\n  },\n  shadowLeft: {\n    left: 0\n  },\n  shadowRight: {\n    right: 0\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: {\n      width: 1,\n      height: -1\n    }\n  },\n  shadowTop: {\n    top: 0\n  },\n  shadowBottom: {\n    bottom: 0\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_color","_interopRequireDefault","_CardSheet","_GestureHandler","_CardAnimationContext","_getDistanceForDirection","_getInvertedMultiplier","_memoize","_excluded","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty3","getOwnPropertyDescriptors","defineProperties","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","_getPrototypeOf2","result","NewTarget","constructor","Reflect","construct","_possibleConstructorReturn2","sham","Proxy","Boolean","valueOf","e","GESTURE_VELOCITY_IMPACT","TRUE","FALSE","GESTURE_RESPONSE_DISTANCE_HORIZONTAL","GESTURE_RESPONSE_DISTANCE_VERTICAL","useNativeDriver","Platform","OS","Card","_React$Component","_inherits2","_super","_this","_classCallCheck2","_len","args","Array","_key","concat","_defineProperty","_assertThisInitialized2","Animated","Value","getInvertedMultiplier","props","gestureDirection","width","layout","height","_ref","closing","velocity","_this$props","gesture","transitionSpec","onOpen","onClose","onTransitionStart","toValue","getAnimateToValue","lastToValue","spec","close","open","animation","spring","timing","setPointerEventsEnabled","handleStartInteraction","clearTimeout","pendingGestureCallback","config","isInteraction","start","_ref2","finished","handleEndInteraction","isCurrentlyMounted","forceUpdate","_ref3","getDistanceForDirection","enabled","_this$contentRef$curr","pointerEvents","contentRef","current","setNativeProps","interactionHandle","undefined","InteractionManager","createInteractionHandle","clearInteractionHandle","_ref4","nativeEvent","_this$props2","onGestureBegin","onGestureCanceled","onGestureEnd","gestureVelocityImpact","state","GestureState","BEGAN","isSwiping","setValue","CANCELLED","velocityY","velocityX","animate","END","distance","translation","translationY","translationX","setTimeout","memoize","styleInterpolator","index","next","insetTop","insetRight","insetBottom","insetLeft","progress","isClosing","swiping","inverted","layouts","screen","insets","top","right","bottom","left","createRef","_createClass2","value","componentDidMount","componentDidUpdate","prevProps","_this$props3","componentWillUnmount","gestureActivationCriteria","_this$props4","gestureResponseDistance","vertical","horizontal","maxDeltaX","minOffsetY","hitSlop","invertedMultiplier","minOffsetX","maxDeltaY","render","_this$props5","overlay","overlayEnabled","shadowEnabled","gestureEnabled","pageOverflowEnabled","children","customContainerStyle","containerStyle","contentStyle","rest","_objectWithoutProperties2","interpolatedStyle","getInterpolatedStyle","animationContext","getCardAnimationContext","cardStyle","overlayStyle","shadowStyle","handleGestureEvent","event","_StyleSheet$flatten","StyleSheet","flatten","backgroundColor","isTransparent","Color","alpha","createElement","CardAnimationContext","Provider","View","style","opacity","collapsable","_extends","absoluteFill","styles","container","PanGestureHandler","onGestureEvent","onHandlerStateChange","handleGestureStateChange","shadow","shadowHorizontal","shadowLeft","shadowRight","shadowVertical","shadowTop","shadowBottom","CardSheet","ref","Component","exports","_ref5","create","flex","position","shadowRadius","shadowColor","shadowOpacity","shadowOffset"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\react-navigation-stack\\lib\\module\\vendor\\views\\Stack\\Card.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  Platform,\n  InteractionManager,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\nimport Color from 'color';\n\nimport CardSheet from './CardSheet';\nimport {\n  PanGestureHandler,\n  GestureState,\n  PanGestureHandlerGestureEvent,\n} from '../GestureHandler';\nimport CardAnimationContext from '../../utils/CardAnimationContext';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport getInvertedMultiplier from '../../utils/getInvertedMultiplier';\nimport memoize from '../../utils/memoize';\nimport type {\n  TransitionSpec,\n  StackCardStyleInterpolator,\n  GestureDirection,\n  Layout,\n} from '../../types';\n\ntype Props = ViewProps & {\n  index: number;\n  closing: boolean;\n  next?: Animated.AnimatedInterpolation;\n  current: Animated.AnimatedInterpolation;\n  gesture: Animated.Value;\n  layout: Layout;\n  insets: EdgeInsets;\n  pageOverflowEnabled: boolean;\n  gestureDirection: GestureDirection;\n  onOpen: () => void;\n  onClose: () => void;\n  onTransitionStart?: (props: { closing: boolean }) => void;\n  onGestureBegin?: () => void;\n  onGestureCanceled?: () => void;\n  onGestureEnd?: () => void;\n  children: React.ReactNode;\n  overlay: (props: {\n    style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n  }) => React.ReactNode;\n  overlayEnabled: boolean;\n  shadowEnabled: boolean;\n  gestureEnabled: boolean;\n  gestureResponseDistance?: {\n    vertical?: number;\n    horizontal?: number;\n  };\n  gestureVelocityImpact: number;\n  transitionSpec: {\n    open: TransitionSpec;\n    close: TransitionSpec;\n  };\n  styleInterpolator: StackCardStyleInterpolator;\n  containerStyle?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n};\n\nconst GESTURE_VELOCITY_IMPACT = 0.3;\n\nconst TRUE = 1;\nconst FALSE = 0;\n\n/**\n * The distance of touch start from the edge of the screen where the gesture will be recognized\n */\nconst GESTURE_RESPONSE_DISTANCE_HORIZONTAL = 50;\nconst GESTURE_RESPONSE_DISTANCE_VERTICAL = 135;\n\nconst useNativeDriver = Platform.OS !== 'web';\n\nexport default class Card extends React.Component<Props> {\n  static defaultProps = {\n    overlayEnabled: Platform.OS !== 'ios',\n    shadowEnabled: true,\n    gestureEnabled: true,\n    gestureVelocityImpact: GESTURE_VELOCITY_IMPACT,\n    overlay: ({\n      style,\n    }: {\n      style: Animated.WithAnimatedValue<StyleProp<ViewStyle>>;\n    }) =>\n      style ? (\n        <Animated.View pointerEvents=\"none\" style={[styles.overlay, style]} />\n      ) : null,\n  };\n\n  componentDidMount() {\n    this.animate({ closing: this.props.closing });\n    this.isCurrentlyMounted = true;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { layout, gestureDirection, closing } = this.props;\n    const { width, height } = layout;\n\n    if (width !== prevProps.layout.width) {\n      this.layout.width.setValue(width);\n    }\n\n    if (height !== prevProps.layout.height) {\n      this.layout.height.setValue(height);\n    }\n\n    if (gestureDirection !== prevProps.gestureDirection) {\n      this.inverted.setValue(getInvertedMultiplier(gestureDirection));\n    }\n\n    const toValue = this.getAnimateToValue(this.props);\n\n    if (\n      this.getAnimateToValue(prevProps) !== toValue ||\n      this.lastToValue !== toValue\n    ) {\n      // We need to trigger the animation when route was closed\n      // Thr route might have been closed by a `POP` action or by a gesture\n      // When route was closed due to a gesture, the animation would've happened already\n      // It's still important to trigger the animation so that `onClose` is called\n      // If `onClose` is not called, cleanup step won't be performed for gestures\n      this.animate({ closing });\n    }\n  }\n\n  componentWillUnmount() {\n    this.isCurrentlyMounted = false;\n    this.handleEndInteraction();\n  }\n\n  private isCurrentlyMounted = false;\n\n  private isClosing = new Animated.Value(FALSE);\n\n  private inverted = new Animated.Value(\n    getInvertedMultiplier(this.props.gestureDirection)\n  );\n\n  private layout = {\n    width: new Animated.Value(this.props.layout.width),\n    height: new Animated.Value(this.props.layout.height),\n  };\n\n  private isSwiping = new Animated.Value(FALSE);\n\n  private interactionHandle: number | undefined;\n\n  private pendingGestureCallback: any;\n\n  private lastToValue: number | undefined;\n\n  private animate = ({\n    closing,\n    velocity,\n  }: {\n    closing: boolean;\n    velocity?: number;\n  }) => {\n    const {\n      gesture,\n      transitionSpec,\n      onOpen,\n      onClose,\n      onTransitionStart,\n    } = this.props;\n\n    const toValue = this.getAnimateToValue({\n      ...this.props,\n      closing,\n    });\n\n    this.lastToValue = toValue;\n\n    const spec = closing ? transitionSpec.close : transitionSpec.open;\n\n    const animation =\n      spec.animation === 'spring' ? Animated.spring : Animated.timing;\n\n    this.setPointerEventsEnabled(!closing);\n    this.handleStartInteraction();\n\n    clearTimeout(this.pendingGestureCallback);\n\n    onTransitionStart?.({ closing });\n    animation(gesture, {\n      ...spec.config,\n      velocity,\n      toValue,\n      useNativeDriver,\n      isInteraction: false,\n    }).start(({ finished }) => {\n      this.handleEndInteraction();\n\n      clearTimeout(this.pendingGestureCallback);\n\n      if (finished) {\n        if (closing) {\n          onClose();\n        } else {\n          onOpen();\n        }\n\n        if (this.isCurrentlyMounted) {\n          // Make sure to re-open screen if it wasn't removed\n          this.forceUpdate();\n        }\n      }\n    });\n  };\n\n  private getAnimateToValue = ({\n    closing,\n    layout,\n    gestureDirection,\n  }: {\n    closing?: boolean;\n    layout: Layout;\n    gestureDirection: GestureDirection;\n  }) => {\n    if (!closing) {\n      return 0;\n    }\n\n    return getDistanceForDirection(layout, gestureDirection);\n  };\n\n  private setPointerEventsEnabled = (enabled: boolean) => {\n    const pointerEvents = enabled ? 'box-none' : 'none';\n\n    this.contentRef.current?.setNativeProps({ pointerEvents });\n  };\n\n  private handleStartInteraction = () => {\n    if (this.interactionHandle === undefined) {\n      this.interactionHandle = InteractionManager.createInteractionHandle();\n    }\n  };\n\n  private handleEndInteraction = () => {\n    if (this.interactionHandle !== undefined) {\n      InteractionManager.clearInteractionHandle(this.interactionHandle);\n      this.interactionHandle = undefined;\n    }\n  };\n\n  private handleGestureStateChange = ({\n    nativeEvent,\n  }: PanGestureHandlerGestureEvent) => {\n    const {\n      layout,\n      onClose,\n      onGestureBegin,\n      onGestureCanceled,\n      onGestureEnd,\n      gestureDirection,\n      gestureVelocityImpact,\n    } = this.props;\n\n    switch (nativeEvent.state) {\n      case GestureState.BEGAN:\n        this.isSwiping.setValue(TRUE);\n        this.handleStartInteraction();\n        onGestureBegin?.();\n        break;\n      case GestureState.CANCELLED: {\n        this.isSwiping.setValue(FALSE);\n        this.handleEndInteraction();\n\n        const velocity =\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n            ? nativeEvent.velocityY\n            : nativeEvent.velocityX;\n\n        this.animate({ closing: this.props.closing, velocity });\n\n        onGestureCanceled?.();\n        break;\n      }\n      case GestureState.END: {\n        this.isSwiping.setValue(FALSE);\n\n        let distance;\n        let translation;\n        let velocity;\n\n        if (\n          gestureDirection === 'vertical' ||\n          gestureDirection === 'vertical-inverted'\n        ) {\n          distance = layout.height;\n          translation = nativeEvent.translationY;\n          velocity = nativeEvent.velocityY;\n        } else {\n          distance = layout.width;\n          translation = nativeEvent.translationX;\n          velocity = nativeEvent.velocityX;\n        }\n\n        const closing =\n          (translation + velocity * gestureVelocityImpact) *\n            getInvertedMultiplier(gestureDirection) >\n          distance / 2\n            ? velocity !== 0 || translation !== 0\n            : this.props.closing;\n\n        this.animate({ closing, velocity });\n\n        if (closing) {\n          // We call onClose with a delay to make sure that the animation has already started\n          // This will make sure that the state update caused by this doesn't affect start of animation\n          this.pendingGestureCallback = (setTimeout(() => {\n            onClose();\n\n            // Trigger an update after we dispatch the action to remove the screen\n            // This will make sure that we check if the screen didn't get removed so we can cancel the animation\n            this.forceUpdate();\n          }, 32) as any) as number;\n        }\n\n        onGestureEnd?.();\n        break;\n      }\n    }\n  };\n\n  // Memoize this to avoid extra work on re-render\n  private getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackCardStyleInterpolator,\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) =>\n      styleInterpolator({\n        index,\n        current: { progress: current },\n        next: next && { progress: next },\n        closing: this.isClosing,\n        swiping: this.isSwiping,\n        inverted: this.inverted,\n        layouts: {\n          screen: layout,\n        },\n        insets: {\n          top: insetTop,\n          right: insetRight,\n          bottom: insetBottom,\n          left: insetLeft,\n        },\n      })\n  );\n\n  // Keep track of the animation context when deps changes.\n  private getCardAnimationContext = memoize(\n    (\n      index: number,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      layout: Layout,\n      insetTop: number,\n      insetRight: number,\n      insetBottom: number,\n      insetLeft: number\n    ) => ({\n      index,\n      current: { progress: current },\n      next: next && { progress: next },\n      closing: this.isClosing,\n      swiping: this.isSwiping,\n      inverted: this.inverted,\n      layouts: {\n        screen: layout,\n      },\n      insets: {\n        top: insetTop,\n        right: insetRight,\n        bottom: insetBottom,\n        left: insetLeft,\n      },\n    })\n  );\n\n  private gestureActivationCriteria() {\n    const { layout, gestureDirection, gestureResponseDistance } = this.props;\n\n    const distance =\n      gestureDirection === 'vertical' ||\n      gestureDirection === 'vertical-inverted'\n        ? gestureResponseDistance?.vertical !== undefined\n          ? gestureResponseDistance.vertical\n          : GESTURE_RESPONSE_DISTANCE_VERTICAL\n        : gestureResponseDistance?.horizontal !== undefined\n        ? gestureResponseDistance.horizontal\n        : GESTURE_RESPONSE_DISTANCE_HORIZONTAL;\n\n    if (gestureDirection === 'vertical') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: 5,\n        hitSlop: { bottom: -layout.height + distance },\n      };\n    } else if (gestureDirection === 'vertical-inverted') {\n      return {\n        maxDeltaX: 15,\n        minOffsetY: -5,\n        hitSlop: { top: -layout.height + distance },\n      };\n    } else {\n      const hitSlop = -layout.width + distance;\n      const invertedMultiplier = getInvertedMultiplier(gestureDirection);\n\n      if (invertedMultiplier === 1) {\n        return {\n          minOffsetX: 5,\n          maxDeltaY: 20,\n          hitSlop: { right: hitSlop },\n        };\n      } else {\n        return {\n          minOffsetX: -5,\n          maxDeltaY: 20,\n          hitSlop: { left: hitSlop },\n        };\n      }\n    }\n  }\n\n  private contentRef = React.createRef<View>();\n\n  render() {\n    const {\n      styleInterpolator,\n      index,\n      current,\n      gesture,\n      next,\n      layout,\n      insets,\n      overlay,\n      overlayEnabled,\n      shadowEnabled,\n      gestureEnabled,\n      gestureDirection,\n      pageOverflowEnabled,\n      children,\n      containerStyle: customContainerStyle,\n      contentStyle,\n      ...rest\n    } = this.props;\n\n    const interpolatedStyle = this.getInterpolatedStyle(\n      styleInterpolator,\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const animationContext = this.getCardAnimationContext(\n      index,\n      current,\n      next,\n      layout,\n      insets.top,\n      insets.right,\n      insets.bottom,\n      insets.left\n    );\n\n    const {\n      containerStyle,\n      cardStyle,\n      overlayStyle,\n      shadowStyle,\n    } = interpolatedStyle;\n\n    const handleGestureEvent = gestureEnabled\n      ? Animated.event(\n          [\n            {\n              nativeEvent:\n                gestureDirection === 'vertical' ||\n                gestureDirection === 'vertical-inverted'\n                  ? { translationY: gesture }\n                  : { translationX: gesture },\n            },\n          ],\n          { useNativeDriver }\n        )\n      : undefined;\n\n    const { backgroundColor } = StyleSheet.flatten(contentStyle || {});\n    const isTransparent =\n      typeof backgroundColor === 'string'\n        ? Color(backgroundColor).alpha() === 0\n        : false;\n\n    return (\n      <CardAnimationContext.Provider value={animationContext}>\n        <Animated.View\n          style={{\n            // This is a dummy style that doesn't actually change anything visually.\n            // Animated needs the animated value to be used somewhere, otherwise things don't update properly.\n            // If we disable animations and hide header, it could end up making the value unused.\n            // So we have this dummy style that will always be used regardless of what else changed.\n            opacity: current,\n          }}\n          // Make sure that this view isn't removed. If this view is removed, our style with animated value won't apply\n          collapsable={false}\n        />\n        <View pointerEvents=\"box-none\" {...rest}>\n          {overlayEnabled ? (\n            <View pointerEvents=\"box-none\" style={StyleSheet.absoluteFill}>\n              {overlay({ style: overlayStyle })}\n            </View>\n          ) : null}\n          <Animated.View\n            style={[styles.container, containerStyle, customContainerStyle]}\n            pointerEvents=\"box-none\"\n          >\n            <PanGestureHandler\n              enabled={layout.width !== 0 && gestureEnabled}\n              onGestureEvent={handleGestureEvent}\n              onHandlerStateChange={this.handleGestureStateChange}\n              {...this.gestureActivationCriteria()}\n            >\n              <Animated.View style={[styles.container, cardStyle]}>\n                {shadowEnabled && shadowStyle && !isTransparent ? (\n                  <Animated.View\n                    style={[\n                      styles.shadow,\n                      gestureDirection === 'horizontal'\n                        ? [styles.shadowHorizontal, styles.shadowLeft]\n                        : gestureDirection === 'horizontal-inverted'\n                        ? [styles.shadowHorizontal, styles.shadowRight]\n                        : gestureDirection === 'vertical'\n                        ? [styles.shadowVertical, styles.shadowTop]\n                        : [styles.shadowVertical, styles.shadowBottom],\n                      { backgroundColor },\n                      shadowStyle,\n                    ]}\n                    pointerEvents=\"none\"\n                  />\n                ) : null}\n                <CardSheet\n                  ref={this.contentRef}\n                  enabled={pageOverflowEnabled}\n                  layout={layout}\n                  style={contentStyle}\n                >\n                  {children}\n                </CardSheet>\n              </Animated.View>\n            </PanGestureHandler>\n          </Animated.View>\n        </View>\n      </CardAnimationContext.Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  overlay: {\n    flex: 1,\n    backgroundColor: '#000',\n  },\n  shadow: {\n    position: 'absolute',\n    shadowRadius: 5,\n    shadowColor: '#000',\n    shadowOpacity: 0.3,\n  },\n  shadowHorizontal: {\n    top: 0,\n    bottom: 0,\n    width: 3,\n    shadowOffset: { width: -1, height: 1 },\n  },\n  shadowLeft: {\n    left: 0,\n  },\n  shadowRight: {\n    right: 0,\n  },\n  shadowVertical: {\n    left: 0,\n    right: 0,\n    height: 3,\n    shadowOffset: { width: 1, height: -1 },\n  },\n  shadowTop: {\n    top: 0,\n  },\n  shadowBottom: {\n    bottom: 0,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}