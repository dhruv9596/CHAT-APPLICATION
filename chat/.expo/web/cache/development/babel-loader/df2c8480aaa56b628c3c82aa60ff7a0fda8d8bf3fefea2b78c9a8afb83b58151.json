{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  ExpoKeepAwakeTag: true,\n  isAvailableAsync: true,\n  useKeepAwake: true,\n  activateKeepAwake: true,\n  activateKeepAwakeAsync: true,\n  deactivateKeepAwake: true,\n  addListener: true\n};\nexports.ExpoKeepAwakeTag = void 0;\nexports.activateKeepAwake = activateKeepAwake;\nexports.activateKeepAwakeAsync = activateKeepAwakeAsync;\nexports.addListener = addListener;\nexports.deactivateKeepAwake = deactivateKeepAwake;\nexports.isAvailableAsync = isAvailableAsync;\nexports.useKeepAwake = useKeepAwake;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\nvar _expoModulesCore = require(\"expo-modules-core\");\nvar _react = require(\"react\");\nvar _ExpoKeepAwake = _interopRequireDefault(require(\"./ExpoKeepAwake\"));\nvar _KeepAwake = require(\"./KeepAwake.types\");\nObject.keys(_KeepAwake).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _KeepAwake[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _KeepAwake[key];\n    }\n  });\n});\nvar ExpoKeepAwakeTag = 'ExpoKeepAwakeDefaultTag';\nexports.ExpoKeepAwakeTag = ExpoKeepAwakeTag;\nfunction isAvailableAsync() {\n  return _regenerator.default.async(function isAvailableAsync$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        if (!_ExpoKeepAwake.default.isAvailableAsync) {\n          _context.next = 4;\n          break;\n        }\n        _context.next = 3;\n        return _regenerator.default.awrap(_ExpoKeepAwake.default.isAvailableAsync());\n      case 3:\n        return _context.abrupt(\"return\", _context.sent);\n      case 4:\n        return _context.abrupt(\"return\", true);\n      case 5:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nfunction useKeepAwake() {\n  var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ExpoKeepAwakeTag;\n  var options = arguments.length > 1 ? arguments[1] : undefined;\n  (0, _react.useEffect)(function () {\n    var isMounted = true;\n    activateKeepAwakeAsync(tag).then(function () {\n      if (isMounted && _ExpoKeepAwake.default.addListenerForTag && options != null && options.listener) {\n        addListener(tag, options.listener);\n      }\n    });\n    return function () {\n      isMounted = false;\n      if (options != null && options.suppressDeactivateWarnings) {\n        deactivateKeepAwake(tag).catch(function () {});\n      } else {\n        deactivateKeepAwake(tag);\n      }\n    };\n  }, [tag]);\n}\nfunction activateKeepAwake() {\n  var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ExpoKeepAwakeTag;\n  console.warn('`activateKeepAwake` is deprecated. Use `activateKeepAwakeAsync` instead.');\n  return activateKeepAwakeAsync(tag);\n}\nfunction activateKeepAwakeAsync() {\n  var tag,\n    _args2 = arguments;\n  return _regenerator.default.async(function activateKeepAwakeAsync$(_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        tag = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : ExpoKeepAwakeTag;\n        _context2.next = 3;\n        return _regenerator.default.awrap(_ExpoKeepAwake.default.activate == null ? void 0 : _ExpoKeepAwake.default.activate(tag));\n      case 3:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, null, Promise);\n}\nfunction deactivateKeepAwake() {\n  var tag,\n    _args3 = arguments;\n  return _regenerator.default.async(function deactivateKeepAwake$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        tag = _args3.length > 0 && _args3[0] !== undefined ? _args3[0] : ExpoKeepAwakeTag;\n        _context3.next = 3;\n        return _regenerator.default.awrap(_ExpoKeepAwake.default.deactivate == null ? void 0 : _ExpoKeepAwake.default.deactivate(tag));\n      case 3:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, null, null, null, Promise);\n}\nfunction addListener(tagOrListener, listener) {\n  if (!_ExpoKeepAwake.default.addListenerForTag) {\n    throw new _expoModulesCore.UnavailabilityError('ExpoKeepAwake', 'addListenerForTag');\n  }\n  var tag = typeof tagOrListener === 'string' ? tagOrListener : ExpoKeepAwakeTag;\n  var _listener = typeof tagOrListener === 'function' ? tagOrListener : listener;\n  return _ExpoKeepAwake.default.addListenerForTag(tag, _listener);\n}","map":{"version":3,"names":["_expoModulesCore","require","_react","_ExpoKeepAwake","_interopRequireDefault","_KeepAwake","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","ExpoKeepAwakeTag","isAvailableAsync","_regenerator","default","async","isAvailableAsync$","_context","prev","next","ExpoKeepAwake","awrap","abrupt","sent","stop","Promise","useKeepAwake","tag","arguments","length","undefined","options","useEffect","isMounted","activateKeepAwakeAsync","then","addListenerForTag","listener","addListener","suppressDeactivateWarnings","deactivateKeepAwake","catch","activateKeepAwake","console","warn","_args2","activateKeepAwakeAsync$","_context2","activate","_args3","deactivateKeepAwake$","_context3","deactivate","tagOrListener","UnavailabilityError","_listener"],"sources":["C:\\xampp\\htdocs\\Kush\\whatsapp_facebook_messenger\\chat\\node_modules\\expo-keep-awake\\src\\index.ts"],"sourcesContent":["import { Subscription, UnavailabilityError } from 'expo-modules-core';\nimport { useEffect } from 'react';\n\nimport ExpoKeepAwake from './ExpoKeepAwake';\nimport { KeepAwakeListener, KeepAwakeOptions } from './KeepAwake.types';\n\n/** Default tag, used when no tag has been specified in keep awake method calls. */\nexport const ExpoKeepAwakeTag = 'ExpoKeepAwakeDefaultTag';\n\n/** @returns `true` on all platforms except [unsupported web browsers](https://caniuse.com/wake-lock). */\nexport async function isAvailableAsync(): Promise<boolean> {\n  if (ExpoKeepAwake.isAvailableAsync) {\n    return await ExpoKeepAwake.isAvailableAsync();\n  }\n  return true;\n}\n\n/**\n * A React hook to keep the screen awake for as long as the owner component is mounted.\n * The optionally provided `tag` argument is used when activating and deactivating the keep-awake\n * feature. If unspecified, the default `tag` is used. See the documentation for `activateKeepAwakeAsync`\n * below to learn more about the `tag` argument.\n *\n * @param tag Tag to lock screen sleep prevention. If not provided, the default tag is used.\n * @param options Additional options for the keep awake hook.\n */\nexport function useKeepAwake(tag: string = ExpoKeepAwakeTag, options?: KeepAwakeOptions): void {\n  useEffect(() => {\n    let isMounted = true;\n    activateKeepAwakeAsync(tag).then(() => {\n      if (isMounted && ExpoKeepAwake.addListenerForTag && options?.listener) {\n        addListener(tag, options.listener);\n      }\n    });\n    return () => {\n      isMounted = false;\n      if (options?.suppressDeactivateWarnings) {\n        deactivateKeepAwake(tag).catch(() => {});\n      } else {\n        deactivateKeepAwake(tag);\n      }\n    };\n  }, [tag]);\n}\n\n// @needsAudit\n/**\n * Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.\n *\n * If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\n * with the same `tag` argument. When using multiple `tags` for activation you'll have to deactivate\n * each one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used.\n *\n * Web support [is limited](https://caniuse.com/wake-lock).\n *\n * @param tag Tag to lock screen sleep prevention. If not provided, the default tag is used.\n * @deprecated use `activateKeepAwakeAsync` instead.\n */\nexport function activateKeepAwake(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  console.warn('`activateKeepAwake` is deprecated. Use `activateKeepAwakeAsync` instead.');\n  return activateKeepAwakeAsync(tag);\n}\n\n// @needsAudit\n/**\n * Prevents the screen from sleeping until `deactivateKeepAwake` is called with the same `tag` value.\n *\n * If the `tag` argument is specified, the screen will not sleep until you call `deactivateKeepAwake`\n * with the same `tag` argument. When using multiple `tags` for activation you'll have to deactivate\n * each one in order to re-enable screen sleep. If tag is unspecified, the default `tag` is used.\n *\n * Web support [is limited](https://caniuse.com/wake-lock).\n *\n * @param tag Tag to lock screen sleep prevention. If not provided, the default tag is used.\n */\nexport async function activateKeepAwakeAsync(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  await ExpoKeepAwake.activate?.(tag);\n}\n\n// @needsAudit\n/**\n * Releases the lock on screen-sleep prevention associated with the given `tag` value. If `tag`\n * is unspecified, it defaults to the same default tag that `activateKeepAwake` uses.\n *\n * @param tag Tag to release the lock on screen sleep prevention. If not provided,\n * the default tag is used.\n */\nexport async function deactivateKeepAwake(tag: string = ExpoKeepAwakeTag): Promise<void> {\n  await ExpoKeepAwake.deactivate?.(tag);\n}\n\n/**\n * Observe changes to the keep awake timer.\n * On web, this changes when navigating away from the active window/tab. No-op on native.\n * @platform web\n *\n * @example\n * ```ts\n * KeepAwake.addListener(({ state }) => {\n *   // ...\n * });\n * ```\n */\nexport function addListener(\n  tagOrListener: string | KeepAwakeListener,\n  listener?: KeepAwakeListener\n): Subscription {\n  // Assert so the type is non-nullable.\n  if (!ExpoKeepAwake.addListenerForTag) {\n    throw new UnavailabilityError('ExpoKeepAwake', 'addListenerForTag');\n  }\n\n  const tag = typeof tagOrListener === 'string' ? tagOrListener : ExpoKeepAwakeTag;\n  const _listener = typeof tagOrListener === 'function' ? tagOrListener : listener;\n\n  return ExpoKeepAwake.addListenerForTag(tag, _listener);\n}\n\nexport * from './KeepAwake.types';\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}